.

############  Selenium  #############
1. Tell about framework what you have developed.

1.We have designed hybrid Framework: It consist of data drivena and modular driven framework
2.We are storing our data in xml file.thus acheiving data driven framework
3.We have written common methods in library  classes thus acheiving modular driven framwwork
4.WE are using TestNG framework to run the test cases and maven is used for project management.i.e build life cycle -downloading jars and dependencies automatically.
5.We have used maven for build management.which will download all the required jars for the project.
6.Maven Surefire reports for report generation


*********************************************************************************************************************************************************************
2.Issues/Challenges faced in Automation testing.

Selenium
1.Timing issue with locating elements. 
	To overcome this we used explicit wait for the command which takes long time to locate.
2.Removed Absolute xpath to overcome xpath updation when element gets changed using relative xpath.
3.Whenever test case  fails we used to take screenshot . We had to write this for each of the test cases.Whenever it fails for undefined/unexpected situation, it was diffucult to debug.To avoid this we used Listeners in testNG xml to take screenshot whenever tes case fails .Which helped in debugging.
4.Some of the commands does not work in IE. Like Click command.
	To overcome this we have written method to click until it is clicked on the webElement
5.There was web page where in we had multiple frames ,  when we were trying to switch from one frame another frame , we were not able to locate the element in the other frame.
By performing SwitchTo.DefaultContent()  and then switching to second frame this issue was resolved


** locators in different browsers like click wont work in IE that works in FF.
	Work around click again if expected element not found.
** xpath "[(text=)]" and "[contains(.,"")]" wont work in IE, but [contains(text(),'')] works in IE,FF,Chrome.
** In iframes if you are using actions, then to click if you use linktext click wont work, for that use action click only.
** If you want perform any action its there in edge of windows frame. Those action wont perform for that you have scroll browser then perform actions.
** Locators updating for successful releases.
** Timing issue in different browsers.
** Data populating issue in application.
** Created dynamic data, that helped while debugging the failures.

*********************************************************************************************************************************************************************
XAPTH
								
	td1
	td2
	
	div1
		div2
			div3
		/div2
	/div1
	
	div3: Ancestors are div2 and div1 : parents
	div3:preceding's are td2 and td1 : Before starting tag elements
	
	div2: descendant are div3 : Children's
	div2: following are div1 : All the nodes after the closing tag of current node
	
*********************************************************************************************************************************************************************


3.How to count rows and column in table.
locate elememt using xpath till tr

	int rowCount=driver.findElements(By.xpath("//div[@id='post-body-4292417847084983089']/div/table/tbody/tr")).size();
then get size of row which will return number of rows in the table

To Count NUmber of Columns
LOcate Element till tr[1]/td

int col=driver.findElements(By.xpath("//div/table/tbody/tr[1]/td")).size();

*********************************************************************************************************************************************************************


4.What are the different types of waits in Selenium.

Implicit Waits
An implicit wait is to tell WebDriver to poll the DOM for a certain amount of time when trying to find an element or elements if they are not immediately available. The default setting is 0. Once set, the implicit wait is set for the life of the WebDriver object instance.
driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

Explicit Waits
An explicit wait is code you define to wait for a certain condition to occur before proceeding further in the code. The worst case of this is Thread.sleep(), which sets the condition to an exact time period to wait. There are some convenience methods like ExpectedCondition that will wait only as long as required. 
Example

WebDriver driver = new FirefoxDriver();
driver.get("http://google.com");
WebElement myDynamicElement = (new WebDriverWait(driver, 10)).until(ExpectedConditions.presenceOfElementLocated(By.id("myDynamicElement")));


ExpectedCOnditions.alertsPresent()
ExpectedCOnditions.ElementToBeClickable()
EpectedCOndtions.titleContains()

*********************************************************************************************************************************************************************


5. How to handle Iframe, Alerts and windows in selenium.


Iframes-  driver.switchTo().frame(driver)

Alert-  Alert alert= driver.switchTo.alert();
	alert.accept();
	alert.dismiss();
Windows-
	
For single window
	String window1=driver.getWindowhandle();
	driver.switchTo().window(window1).getTitle();

For multiple Window
Set<String> wins=driver.getWindowHandles();
for(String str:wins){
	driver.switchTo.window(str).getTitle();
}
	
*********************************************************************************************************************************************************************

6.How to select multiple drop down options in selenium.
Using Select class

Select sel=new Select(WebElement);
sel.selectByVisibleText(); or sel.selectByIndex(); or sel.selectByValue();

7.Tell more about action class.

Actions class is needed while handling keyboard events and mouse events. ex: drag and drop, double click, click with ctrl key.Mouse hover actions.

Actions action=new Actions(driver);

// To click on the element
action.moveToElement(element).click().perform();

The following are the regularly used mouse and keyboard events :
Method :clickAndHold()
Purpose: Clicks without releasing the current mouse location

Method : contentClick()
Purpose: Performs a context-click at the current mouse location.


Method: doubleClick()
Purpose: Performs a double click at the current mouse location


Method: dragAndDrop(source,target)
Purpose: Performs click and hold at the location of the source element and moves to the location of the target element then releases the mouse.

Method: keyDown(modifier_key)
Parameters: Modifier_key (keys.ALT or Keys.SHIFT or Keys.CONROL)
Purpose: Performs a modifier key press, doesn't release the modifier key. Subsequent interactions may assume it's kept pressed

Method: keyUp(modifier_key)
Parameters: Modifier_key (keys.ALT or Keys.SHIFT or Keys.CONROL)
Purpose: Performs a key release.

Method: moveByOffset(x-offset, y-offset)
Parameters: X-Offset , Horizontal offset, a negative value means moving the mouse to left side.
Y-Offset, vertical offset, a negative value means moving the mouse to up.
Purpose: Moves the mouse position from its current position by the given offset.

*********************************************************************************************************************************************************************
 Cutomaised wait method to wait for window to be loaded 

public void clickAndSwitchToSecondWindow()
{
//Perform the click operation that opens new window

driver.findElement(By.id(“id of the link/button which opens new window”)).click();
//wait till two windows are not opened
waitForNumberofWindowsToEqual(2);//this method is for wait

Set handles = driver.getWindowHandles();
firstWinHandle = driver.getWindowHandle(); handles.remove(firstWinHandle);
String winHandle=handles.iterator().next();
if (winHandle!=firstWinHandle){
//To retrieve the handle of second window, extracting the handle which does not match to first window handle
secondWinHandle=winHandle; //Storing handle of second window handle

//Switch control to new window
driver.switchTo().window(secondWinHandle);
//Control is switched now
}


public void waitForNumberOfWindowsToEqual(final int numberOfWindows)
{

//Making a new expected condition
new WebDriverWait(driver,3){}.until(new ExpectedCondition()
{
@Override
 public Boolean apply(WebDriver driver)
{
return (driver.getWindowHandles().size() == numberOfWindows);
}
});

}

*********************************************************************************************************************************************************************




7.Read XML data and store it in 2D array.

8.What type test cases should automate.
High Risk - Business Critical test cases
Test cases that are executed repeatedly
Test Cases that are very tedious or difficult to perform manually
Test Cases which are time consuming

*********************************************************************************************************************************************************************

13. Which test cases are not suitable for Automation Testing.
Test Cases that are newly designed and not executed manually  atleast once
Test Cases for which the requirements are changing frequently
Test cases which are executed on ad-hoc basis.

*********************************************************************************************************************************************************************

11. Advantages and disadvantages of automation Testing.
Advantages

Reliable: Tests perform precisely the same operations each time they are run, thereby eliminating human error
Repeatable: You can test how the software reacts under repeated execution of the same operations. 
Programmable: You can program sophisticated tests that bring out hidden information from the application. 
Comprehensive: You can build a suite of tests that covers every feature in your application.
Reusable: You can reuse tests on different versions of an application, even if the user interface changes.
Better Quality Software: Because you can run more tests in less time with fewer resources
Fast: Automated Tools run tests significantly faster than human users.
Cost Reduction: As the number of resources for regression test are reduced.


Disadvantages

• Proficiency is required to write the automation test scripts. 
• Debugging the test script is major issue. If any error is present in the test script, sometimes it may lead to deadly consequences. 
• Test maintenance is costly in case of playback methods. Even though a minor change occurs in the GUI, the test script has to be rerecorded or replaced by a new test script. 
• Maintenance of test data files is difficult, if the test script tests more screens. 


**  Advantages of Automation :
1. Better speed in increase execution speed.
2. Can reduce humen resource. So cost cutting and humen intervention is not required while executing.
3. Execute test cases in different browsers/platforms more quickely.
4. Same test cases can execute in subsequent releases.
5. Inrease consistency,reliabilty and accurecy. Since exact same test will execute again.
6. 

** Disadvantages of Automation :
1. Initial investment will be more without ROI(Return of Investement).
2. Requires expertise in domain. 

*********************************************************************************************************************************************************************

12. Advantages and disadvantages of Selenium Web driver.


Advantages: 

1. Selenium is pure open source, freeware and portable tool. 
2. Selenium supports variety of languages that include Java, Perl, Python, C#, Ruby, Groovy, Java Script, and VB Script. etc. 
3. Selenium supports many operating systems like Windows, Macintosh, Linux, Unix etc. 
4. Selenium supports many browsers like Internet explorer, Chrome, Firefox, Opera, Safari etc. 
5. Selenium can be integrated with ANT or Maven kind of framework for source code compilation. 
6. Selenium can be integrated with TestNG testing framework for testing our applications and generating reports. 
7. Selenium can be integrated with Jenkins or Hudson for continuous integration. 
8. Selenium can be integrated with other open source tools for supporting other features. 
9. Selenium can be used for Android, IPhone, Blackberry etc. based application testing. 
10. Selenium supports very less CPU and RAM consumption for script execution. 
11. Selenium comes with different component to provide support to its parent which is Selenium IDE, Selenium Grid and Selenium Remote Control (RC). 

Disadvantages: 

2. Selenium only supports web based application and does not support windows based application. 
3. It is difficult to test Image based application. 
4. Selenium need outside support for report generation activity like dependence on TestNG or Jenkins. 
5. Selenium does not support built in add-ins support. 
7. Selenium does not provide any built in IDE for script generation and it need other IDE like Eclipse for writing scripts. 
9. Selenium script creation time is bit high. 
10. Selenium does not support file upload facility. 
11. Selenium partially supports for Dialog boxes.


#############   TestNg   #############

1. What is testNg framework.
TestNg is testing framework inspired from Junit and Nunit.TestNG: Test next generation.
TestNG is a testing framework designed to simplify a broad range of testing needs, from unit testing (testing a class in isolation of the others) to integration testing (testing entire systems made of several classes, several packages and even several external frameworks, such as application servers).

*********************************************************************************************************************************************************************

2. What and all annotations TestngNg provides and how they works.

@Test: Marks a class or a method as part of the test.
@BeforeSuite: The annotated method will be run before all tests in this suite have run. 
@AfterSuite: The annotated method will be run after all tests in this suite have run. 
@BeforeTest: The annotated method will be run before any test method belonging to the classes inside the <test> tag is run. 
@AfterTest: The annotated method will be run after all the test methods belonging to the classes inside the <test> tag have run. 
@BeforeGroups: The list of groups that this configuration method will run before. This method is guaranteed to run shortly before the first test method that belongs to any of these groups is invoked. 
@AfterGroups: The list of groups that this configuration method will run after. This method is guaranteed to run shortly after the last test method that belongs to any of these groups is invoked. 
@BeforeClass: The annotated method will be run before the first test method in the current class is invoked. 
@AfterClass: The annotated method will be run after all the test methods in the current class have been run. 
@BeforeMethod: The annotated method will be run before each test method. 
@AfterMethod: The annotated method will be run after each test method.

@DataProvider:Marks a method as supplying data for a test method. The annotated method must return an Object[][].
The @Test method that wants to receive data from this DataProvider needs to use a dataProvider name equals to the name of this annotation.
 
@Listeners	Defines listeners on a test class.


*********************************************************************************************************************************************************************

3. What and all different types of annotations you have used.

@Test
@BeforeMethod
@AfterMethod
@DataProvider
@Listener

*********************************************************************************************************************************************************************
4. How to run Test cases in data driven and parallel driven mode.
By providing parallel ="true" in dataProvider annotation

or by incluing parallel="tests" thread-count="2" in testNG


5. How can you control the test case execution flow.
by allocating priority to the test  methods
@Test(priority=1)

6. Write sample testng.xml.


<Suite name="my suite" verbose="2">
	<test name="ClassName">
		<groups>
		     <run>
			<include name="Prerequisite"/>
			<exclude name="Functional"/>
		     </run>
		</groups>
		<classes>
			<class name="package.className"/>
		</classes>
	</test>
</Suite>

A suite is represented by one XML file. It can contain one or more tests and is defined by the <suite> tag.
A test is represented by <test> and can contain one or more TestNG classes.
A TestNG class is a Java class that contains at least one TestNG annotation. It is represented by the <class> tag and can contain one or more test methods.
A test method is a Java method annotated by @Test in your source.


*********************************************************************************************************************************************************************

#############   Maven    #############
1. What is Maven and explain its build life cycle.
Maven is a build tool. It is a software project management tool which provides new concept of project object model (POM). 
As Maven Is build management tool, It will helps you to manage your selenium project's build easily.

It will manage your selenium test project's build compilation, documentation and other related project tasks. It will helps you to create right project structure, add and manage jar files In project's build path etc. 
Maven uses POM.xml configuration file which kept all project configuration related Information.

 MAVEN DEFAULT LIFECYCLE 
Step 1: Clean---remove all files generated by the previous build(mvn clean:clean)
Step 2: Build--This is the primary life cycle of Maven and is used to build the application(mvn deploy:deploy)
Step 3 : Site----generate the project's site documentation.Maven Site plugin is generally used to create fresh documentation to create reports, deploy site etc.
(mvn site:site)
 
*********************************************************************************************************************************************************************

2. What are the different types of repository in Maven Build life cycle.
1. Local Repository : This folder get creates in local machine, when first maven commond runs. Here maven stores all the dependency and plugins from central and remote repo if any to avoid references to remote and cental repo for every builds.
2. Central Repository : Maven central repository is repository provided by Maven community. It contains a large number of commonly used libraries.
3. Remote Repository : Remote Repository which is developer's own custom repository containing required libraries or other project jars.


*********************************************************************************************************************************************************************
3. Write sample Pom.xml file.
<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mindtree.dcs</groupId>
	<artefactId>sitadcs</artefactId>
	<version>2.0</version>
	<name>flights</name>
		<dependecies>
			<dependency>
				<groupId>org.testng</groupId>
				<artefactId>sitadcs</artefactId>
				<version>6.8</version>
			</dependency>
		</dependecies>
		<build>
			<plugins>
				<plugin>
					<groupId>org.testng</groupId>
					<artefactId>sitadcs</artefactId>
					<version>6.8</version>
				<configuration>
				</configuration>
			</plugin>
			</plugins>
		</build>

</project>




##############################################    JAVA    ##########################################################################

1. What and all OPP's concepts you have used in your project?
            OR
	Explain about Java OOPS concepts:
		a. Abstraction
		b. Inheritance
		c. Polymorphism
		d. Encapsulation
We have used inheritance and method overloading concept in our automation script.

We have different set of clasess which extends prerequisite class which will have common methods. 

And We have functioanlity for example create message address which can accept either email address or TYpeB address code which will be numeric Only or it cn have both typeb and email adress.
In this case we have used method overloading with same method name with different parameters


Abstraction

Abstraction is process of hiding implementation details and showing functionality to the user.
Example: 
Class bike is abstract class in that we have run  method without any method body.
Class honda which extends bike class has run method with method body


public Abstract Class Bike{
abstract void run();
}

public class Honda extends Bike{

public static void main(String[] args){
Bike obj=new Honda();
obj.run();
}
public void run(){
 system.out.println("RUNNIng");

}
}




Inheritance
Inheritance is a  mechanism in which one object acquires all properties and behaviour of parent object.
Represents Is-A relationship.

This concept is used to achieve method overriding and  for code reusability.

Class A{
methods and fields
}
Class B extends Class A{

}
 


Polymorphism
Ability of object to take many forms.
One action performed in different ways.

Two types
Compile time polymorphism------   Method Overloading
RunTime Polymorphism-----Method Overriding

Runtime Polymorphism/Dynamic Polymorphism is a process in which a call to overriden method is resolved at runtime rather than compile time.
Since method invocation is determined by the JVM not compiler, it is known as runtime polymorphism.


Upcasting
When reference variable of Parent class refers to the object of Child class, it is known as upcasting.
Class A{
methods and fields
}
Class B extends Class A{

A obj=new B();

REal Example: rate of interest calculation in bank is specific to the bank.
we have bank class with method Rate ofInterest(). we have classes like SBI , ICICI, CITI Bank which will have rate of interest method with there own calculation.SO it overrides method of bank class to have its own implementati


Method Overloading.
If a class have multiple methods by same name but different parameters, it is known as Method Overloading.

There are two ways to overload the method in java
By changing number of arguments
By changing the data type



Encapsulation
It is mechanism to wrapping the data and code acting on that data together as single unit.
In encapsulation variables of a class will be hidden from the other classes and canbe accessed only thorough the methods of their current class, therefore it is also known as data hiding.
Variable will be declared as private and , using getter setter method able to modify or view the variable values


Class A{
 Private data;
public int getdata();
{
return data;
}
public void setdata(int data1){
data=data1;
}
}

class B{
A obj=new A();
obj.setdata(98);
}

*********************************************************************************************************************************************************************

2.Difference between Abstraction and  Interface


	Abstraction											Interface
1.Abstract Keyword is used to declare abstract class					1.Interface Keyword id used to declare class
2.It can have abstract and non abstract methods						2.Can have only abstract methods
3.it can have static , non static, final and non final variables			3.Can have onlt static and final variables 
4.Doesnot Support multiple inheritance							4.Supports multiple inheritance
5.Abstract class can have static methods, main method and constructor.			5.Interface can't have static methods, main method or constructor.
6.Abstract class can provide the implementation of interface				6.Interface can't provide the implementation of abstract class.



3. Why String is immutable.
String object is immutable means it is unmodifiable or unchangeable.
Once String object is created  its data or state  cant be changed  but a new string object is created.
for example:
String s="ABC";
s.concat("DEF");
System.out.println(s)

o/p is ABC

*********************************************************************************************************************************************************************

4.Difference between method overloading and overriding.

Overloading										Overriding
1.Method name is same with different parameters					1.Method name and parameters should be same
2.Happens at compile time							2.happens at runtime
3.Overloading is performed within the class					3.perfored between two classes that have IS-A relationship
4.Used to increase readability of program					4.Used to provide specific implementation of the method that is already provided by the  										parent class
5.Cannot achieve overloading by changing return type of method			5.return type should be same


*********************************************************************************************************************************************************************

5.Difference between ArrayList and LinkedList.

	ArrayList										Linked List
1.Arraylist has index based accessing/searching element					1.LinkedList doesnot provide index based accessing
2.Manipulation with ArrayList is slow because it internally uses array.			2.Manipulation with LinkedList is faster than ArrayList 
as you need to rearrange all elements. 							there is no risk of resizing array
3.ArrayList is better for storing and accessing data.					3.LinkedList is better for manipulating data.



*********************************************************************************************************************************************************************
6. Difference between List and Set.
	List											Set
1.List is an ordered Collection							1.Set is an unordered collection.
2.Allows duplicate elements							2.doesnot allow duplicate elements
3.List maintains insertion order of elements, means any element			3.Set doesnot maintain any order
 which is inserted before will go on lower index than any element 
which is inserted after.
4.List interface in Java includes ArrayList, Vector and LinkedList.		4.Set interface includes HashSet, TreeSet and LinkedHashSet.



*********************************************************************************************************************************************************************
7.How hash map works in Java.
Hashmap in java works on hashing principle.In hashing , hash functions are used to  link key and value in hashmap.Objects are stored by calling put(key,value) method of hashmap.and retrieved by get(key)method,
When we call put method, hashcode() method of the key object is called so that hash function of the map can find a bucket location to store value object, which is actually an index of the internal array, known as the table. HashMap internally stores mapping in the form of Map.Entry object which contains both key and value object.

When get() method is used to retrieve value, again key object is used to calculate a hash which is used then to find a bucket where that particular key is stored.


*********************************************************************************************************************************************************************

8.Difference between HashMap, Linked HashMap and TreeMap.

	 
	+-------------------------------------------------------------------------------+
	¦   Property   ¦       HashMap       ¦      TreeMap      ¦     LinkedHashMap    ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦  no guarantee order ¦ sorted according  ¦                      ¦
	¦   Order      ¦ will remain constant¦ to the natural    ¦    insertion-order   ¦
	¦              ¦      over time      ¦    ordering       ¦                      ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦  Get/put     ¦                     ¦                   ¦                      ¦
	¦   remove     ¦         O(1)        ¦      O(log(n))    ¦         O(1)         ¦
	¦ containsKey  ¦                     ¦                   ¦                      ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦                     ¦   NavigableMap    ¦                      ¦
	¦  Interfaces  ¦         Map         ¦       Map         ¦         Map          ¦
	¦              ¦                     ¦    SortedMap      ¦                      ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦                     ¦                   ¦                      ¦
	¦     Null     ¦       allowed       ¦    only values    ¦       allowed        ¦
	¦ values/keys  ¦                     ¦                   ¦                      ¦
	¦--------------+----------------------------------------------------------------¦
	¦              ¦   Fail-fast behavior of an iterator cannot be guaranteed       ¦
	¦   Fail-fast  ¦ impossible to make any hard guarantees in the presence of      ¦
	¦   behavior   ¦           unsynchronized concurrent modification               ¦
	¦--------------+----------------------------------------------------------------¦
	¦      Is      ¦                                                                ¦
	¦ synchronized ¦              implementation is not synchronized                ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦                     ¦                   ¦                      ¦
	¦   Memory     ¦  < LHS and TS       ¦ >HS and LHS       ¦    < HS but >TS      ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦                     ¦                   ¦                      ¦
	¦  When to     ¦ When no insertion   ¦ when Sorting is   ¦   when insertion     ¦
	¦   use        ¦ order and sorting   ¦    needed         ¦   order is required  ¦
	+-------------------------------------------------------------------------------+

*********************************************************************************************************************************************************************

9.dIfference between Arraylist and vector


ArrayList													Vector
1) ArrayList is not synchronized.It is not thread safe				Vector is synchronized.thread Safe.
2) ArrayList increments 50% of current array size if number 			Vector increments 100% means doubles the array size if total   number of element exceeds than its capacity.							exceeds than its capacity.
3) ArrayList is not a legacy class, it is introduced in JDK 1.2.		Vector is a legacy class.
4) ArrayList is fast because it is non-synchronized.				Vector is slow because it is synchronized i.e. in multithreading environment, 												it will hold the other threads in runnable or non-runnable state until current thread 											releases the lock of object.
5) ArrayList uses Iterator interface to traverse the elements.			Vector uses Enumeration interface to traverse the elements.But it can use Iterator also										


synchronized
If you use the same Array List from two threads at the same time, they can't corrupt the state. However, this makes it slower.
Accessing an ArrayList instance from multiple threads may not be safe 


*********************************************************************************************************************************************************************

10.Difference between HashMap and HashTable
	HashMap														Hashtable
1) HashMap is non synchronized. It is not-thread safe and can't be shared 	Hashtable is synchronized. It is thread-safe and can be shared with many threads.
between many threads without proper synchronization code.	
2) HashMap allows one null key and multiple null values.			Hashtable doesn't allow any null key or value.
3) HashMap is a new class introduced in JDK 1.2.				Hashtable is a legacy class.
4) HashMap is fast.								Hashtable is slow.
5) We can make the HashMap as synchronized by calling this code
Map m = Collections.synchronizedMap(hashMap);					Hashtable is internally synchronized and can't be unsynchronized.
6) HashMap is traversed by Iterator.						Hashtable is traversed by Enumerator and Iterator.
7) Iterator in HashMap is fail-fast.						Enumerator in Hashtable is not fail-fast.
8) HashMap inherits AbstractMap class.						Hashtable inherits Dictionary class.



HashTable<Integer, String> ht=new HashTable<Integer,String>()
Set<String> keys=ht.keySet()
Iterator itr=keys.iterator()

While(itr.hasNext()){

String str=itr.next()

}




12. Programs for prime no, Fibonacci Series, Bubble sort, perfect No, Reverse the string, Sort the String, Repetitive words count. 





*********************************************************************************************************************************************************************

1.Connection to databaes using java

Class.forName("oracle.jdbc.driver.OracleDriver") 				 // load the driver class  
Connection con=DriverManager.getConnection(url,username,password)  	         //create the connection object  
Statement stmt=con.createStatement();					  	 //  create the statement object  
ResultSet rs=stmt.executeQuery("Select * from flight profile")			//ResultSet object is a table of data representing a database result set, which is usually generated by 										executing a statement that queries the database.

while(rs.next()){
Flight_Profile_Id=rs.getInt();
Flight_NUmber=rs.getString();
System.out.println(Flight_Profile_Id +" "+Flight_NUmber )
}


*********************************************************************************************************************************************************************

Explain about your reporting method.
We use surefire report for report generation. That is a plugin available in maven, which generates the test results report into HTML format.

*********************************************************************************************************************************************************************

Maven version---3.3.9
JAVA----7
JDK---1.7.0
Selenium----2.53.0
TestNG----6.8

Setting UP maven Project.
1.Path setting of JAVA_HOME and M2_HOME varibale name and variable path in environment varibales. 
2.Install TestNG plugin from eclipse software
3.Donload and install maven 
4.We can run maven either through pom.xml or maven command
mvn clean install –DskipTests

Right click on pom.xml and Run As Maven Clean and also as Maven install.



*********************************************************************************************************************************************************************



How will you read data from xml file.
We have used Dataprovider annoation of TestNG whihc returns two dimensinal object to read data form the xml.
We have written DataProvider method in our prerequisite class which has @DataProvider annotation
Test cases consuming the dataprovider has to have this class name and dataprovider name in the annoation.

For reading Xml data , first we find xpath of the data and take that data and pass to the method which is calling dataprovider.

	@DataProvider(name = "CustomDataProvider")
	public static Object[][] dataProvider(Method method) throws ParserConfigurationException, SAXException, IOException, XPathExpressionException{
		dbf = DocumentBuilderFactory.newInstance();
		db = dbf.newDocumentBuilder();
		doc = db.parse(new File("D:\\AutoLearn\\AutoLearn_WS\\sita\\src\\test\\resources\\data.xml"));
		xf = XPathFactory.newInstance();
		xpath = xf.newXPath();
		String name = method.getName();
		///[@name="login"]/
		NodeList tcs = (NodeList)xpath.compile("//testData/tcName[@name = '" + name + "']/tcData").evaluate(doc, XPathConstants.NODESET);
		int noOFTcs = tcs.getLength();
		//Rows - Number of times your test has to be repeated.
		//Columns - Number of parameters in test data.
		//Object[][] data = new Object[rows][columns];
		Object[][] data = new Object[noOFTcs][1];
		for(int i = 1; i <= noOFTcs; i++ ) {
			data[i-1][0] = i;
		}
		return  data;

				
	}
	
	public static void readData(int setIndex, String data) throws ParserConfigurationException, SAXException, IOException, XPathExpressionException {
		NodeList datas = (NodeList)xpath.compile("//dataSet[@name = '" + ans.get() + "']/set["+ setIndex +"]/data[@name='" + data + "']").evaluate(doc, XPathConstants.NODESET);
		System.out.println(datas.item(0).getTextContent());
	}



*********************************************************************************************************************************************************************
WindowHandle Related


 Switch to particular window and perform action on this(When you know title of the window)



Set<String> handle= driver.getWindowHandles();
firstwindow=driver.getWindowHandle();
handle.remove(firstWindow)
for(String st:handle){

driver.switchTo().window(st);
if(driver.getTitle.equals("title of second window")){
	
}


Working with two window


Set<String> handle= driver.getWindowHandles();

String window1= (String)handle.toArray()[0];
String window2=(String) handle.toArray()[1];

driver.switchTo().window(window2);




Customized method to wait until the new window is loaded


public static void waitforNumberofWindow(int numberOfWindow){


WebDriverwait wait=new WebDriverwait(driver.30)
wait.until(ExpectedConditions){
@Override
public boolen apply(Webdriver driver)
{
return(driver.getWindowHandles== numberOfWindow)

}





*********************************   Variables     ***********************************************
There are three types of variables in java:

local variable -A variable declared inside the method
Access modifiers cannot be used for local variables.
There is no default value for local variables, so local variables should be declared and an initial value should be assigned before the first use.
(If we are using without intialising compile time error will be thrown)
Local variables cannot be declared as static

instance variable- A variable declared inside the class but outside the method
When a space is allocated for an object in the heap, a slot for each instance variable value is created.
Instance variables are created when an object is created with the use of the keyword 'new' and destroyed when the object is destroyed.



static variable -A variable which is declared as static is called static variable.
There would only be one copy of each class variable per class, regardless of how many objects are created from it.
Static variables are rarely used other than being declared as constants. Constants are variables that are declared as public/private, final, and static. Constant variables never change from their initial value.
Static variables are stored in the static memory.
Static variables are created when the program starts and destroyed when the program stops.

Static Variables

Static variables are initialized when class is loaded.
Static variables are initialized before any object of that class is created.
Static variables are initialized before any static method of the class executes.



Data Types

Primitive types are the most basic data types available within the Java language. There are 8: boolean , byte , char , short , int , long , float and double . 


******************************************************  Identifiers   ******************************************************
  
Identifiers in Java. Identifiers are the names of variables, methods, classes, packages and interfaces. 

Keyword A keyword is a reserved word from the Java keyword list provide the compiler with instructions.

abstract	assert	boolean	break
byte	case	catch	char
class	const	continue	default
do	double	else	enum
extends	final	finally	float
for	goto	if	implements
import	instanceof	int	interface

*************************************************** oBJECTS *******************************************


Object - Objects have states and behaviors. Example: A dog has states - color, name, breed as well as behaviors – wagging the tail, barking, eating. An object is an instance of a class. Class - A class can be defined as a template/blueprint that describes the behavior/state that the object of its type support.




****************************************************  OOPS Concept ***************************************************************
Method Hiding
Method hiding means subclass has defined a class method with the same signature as a class method in the superclass. In that case the method of superclass is hidden by the subclass


We can not override the static method because static metod is a class method and the scope of this method within the same class itself. ... Hence, it does not makes sense to "override" it

Why we can not override static method?
Static methods cannot be overridden because method overriding only occurs in the context of dynamic (i.e. runtime) lookup of methods. Static methods (by their name) are looked up statically (i.e. at compile-time). Method overriding happens in the type of subtype polymorphism that exists in languages like Java and C++.

Can a static variable be overridden?
Just don't declare the variable but initialize (change) in the constructor or static block. In short, no, there is no way to override a class variable. You do not override class variables in Java you hide them. Overriding is for instance methods.

Method overrding
1.Argument list and return type should be same as that of that of the
2. overridden method The access level cannot be more restrictive than the overridden method’s access level.
3. Final Methods cannot be overridden
4. Static methods cannot be overridden, but it can be redeclared
5. A subclass in a different/Same package can only override the non-final methods declared public or protected.
6. Constructors cannot be overridden.
7. we cannot override main method (static method)
8. Abstract method must be overridden. An abstract class must be extended and in a same way abstract method must be overridden. 
9.Note: The class which is extending abstract class must override all the abstract methods.
10.Main method can also be overloaded , but when class id loaded main method will run first



Method Overloading
1. Method Overloading cannot be achieved by changing the return type. 
2. Both Static and non static methods can be overloaded 
3. Final methods can be overloaded
4. Boolean Parameter can also be used for overloading
5. If two methods of a class (whether both declared in the same class, or both inherited by a class, or one declared and one inherited) have the same name but signatures that are not    override-equivalent, then the method name is said to be overloaded.

************************************************* Constructor ********************************************************************************************


1. A constructor is a special method that is used to initialize a newly created object and is called just after the memory is allocated for the object.
	 * If you do not implement any constructor in your class, Java compiler inserts a default constructor
	 * A constructor in Java can not be abstract, final, static and Synchronized
	 * Constructor doesn't return explicitly,it returns current class instance. 
	 * Constructors are not members, so they are not inherited by subclasses,
	 * but the constructor of the superclass can be invoked from the subclass.
	 * We can have private constructor -The constructor can only be accessed from static factory method inside the class itself. 
	 * Constructors are used to initialize a newly created object.
	 * In Java, static means the member (like a method or variable) is at the class level, not the object level - therefore a static constructor doesn't make sense
	 * Abstract class can have constructor
	 * There is only static fields in interface that dosen't need to initialized during object creation in subclass and the method of interface has to provide actual implementation in 	    subclass . So there is no need of constructor in interface. That's why we can not define constructor in the interfaces
2. We can copy one constructor to other by below steps
	1. By constructor 
	2. By assigning the values of one object into another 
        3. By clone() method of Object class
3. super keyword to invoke a superclass's constructor
	 * Cannot use super in a static context



If we call main method within main method of different class "Exception in thread "main" java.lang.StackOverflowError" error will be thorwn

Private and protected access modifier cannot be applied to class or interface


*************************************************************   Abstract ******************************************************************************************


1. Abstract class cannot have protected and private access mondifier
2.Class can be either Abstract or final, abstract class cannot be final (bcos you cannot inherit final class) Abstract class/abstract method cannot be private , as you have to extend the class


Abstract classes cannot be instantiated, but they can be subclassed. When an abstract class is subclassed, the subclass usually provides implementations for all of the abstract methods in its parent class. However, if it does not, then the subclass must also be declared abstract .

In Java, an abstract class can implement an interface, and not provide implementations of all of the interface's methods. It is the responsibility of the first concrete class that has that abstract class as an ancestor to implement all of the methods in the interface.

The two are separate concepts, but obviously you can't have an abstract method in a non-abstract class.

An abstract class is a class that is declared abstract - it may or may not include abstract methods. They cannot be instantiated so if you have an abstract class with concrete methods then it can be subclassed and the subclass can then be instantiated
******************************************************************* Interface ********************************************************************************************


 1. An interface is a reference type in Java. It is similar to class.
 It is a collection of abstract methods. 
 A class implements an interface, thereby inheriting the abstract methods of the interface.
 Along with abstract methods, an interface may also contain constants, default methods, static methods, and nested types. 
All the fields in the interfaces are public static final by default(implicitly). 
So field should be initialized in interface
 Static methods cannot be declared in interfaces because static methods belongs to a class not to an instance of class, and interfaces are not Classes. -in Java  and below version
From java 8 we can have static, default and abstract method in interface( with implemenation in static and default method)
In Java 8, interfaces can contain implemented methods, static methods, and the so-called "default" methods (which the implementing classes do not need to override

interface can extend more than one parent interface
With Java-8 you can have main method defined inside the interface
We can overload static and non static methods in interface (java8)
We can override only abstract and defualt(non static methods ) in implementing class

******************************************************************* Encapsulation   ********************************************************************************************

 * As in encapsulation, the data in a class is hidden from other classes, so
	 * it is also known as data-hiding. Encapsulation can be achieved by:
	 * Declaring all the variables in the class as private and writing public
	 * methods in the class to set and get the values of variables. private

DIfference between data Hiding and Encapsulation

Encapsulation is a term that is found in Object-Oriented paradigm and refers to keeping the data in private fields and modify it only through methods. Thus encapsulation may be seen as a way of achieving data hiding in object-oriented systems. Creating a class includes the concept of encapsulation.



************************************************************************ Strings ****************************************************************************************
Java - Strings Class. Strings, which are widely used in Java programming, are a sequence of characters. In Java programming language, strings are treated as objects. 
In java, string is an immutable object which means it is constant and can cannot be changed once it has been created.

String is special class in java and we can create String object using new operator as well as providing values in double quotes.
String Pool in java is a pool of Strings stored in Java Heap Memory. 
The Java string constant pool is an area in heap memory where Java stores literal string values. ... However, if you create a new instance of a String object, it will create a new string literal in the pool, even if one already exists. String literals are immutable, meaning they do not change.

Whenever you create a string object using string literal, that object is stored in the string constant pool and whenever you create a string object using new keyword, such object is stored in the heap memory.

When the intern() method is invoked on a String object it looks the string contained by this String object in the pool


How does Java allocate memory?

JVM memory is divided into multiple parts: Heap Memory, Non-Heap Memory, and Other. Heap memory is the run time data area from which the memory for all java class instances and arrays is allocated. The heap is created when the JVM starts up and may increase or decrease in size while the application runs.


************************************************************************ Collection in Java****************************************************************************************
Collection is ian interface
List is and interface
AbstractList is and abstractClass
ArrayList is class

public abstract class AbstractList<E> extends AbstractCollection<E> implements List<E> 
public abstract class AbstractCollection<E> implements Collection<E> 
public interface List<E> extends Collection<E>
public interface Collection<E> extends Iterable<E> 
public interface Iterable<T>

HashSet extends abstractHashSet implements set extends Collection
Set and collection are interface

When you are iterating from 0 to size and inside the loop you are deleting items. Deleting the items will reduce the size of the list which will fail when you try to access the indexes which are greater than the effective size
	for (int i = 0; i <= al.size() - 1; i++) {
				
			al.remove(i);
			
		}
		System.out.println(al);

SO if you want to delete the element based on index

Hence delete from the end as below

  for(int i=al.size()-1;i>=0;i--) { //
		  System.out.println(al.remove(i)); al.remove(i);
		  
		  }
		  
		  System.out.println(al);

We generally use Collections.sort() method to sort a simple array list.

List<Object> list = new ArrayList<Object>()

ArrayList

 List<String> myList=new ArrayList<String>(5);

When we create an ArrayList in this way, constructor with an integer  argument is invoked and will internally create an array of Object with the size, specified in the constructor argument, which happens to be 5 in this case.
Now, As we all know that unlike normal arrays, the size of the ArrayList grows dynamically. But how its size grows internally?

Inside .add() method there is this check. So,before adding element into the array it will check what is the current size of filled elements and what is the maximum size of the array. If size of filled elements is greater than maximum size of the array then size of the array must be increased. But we know that the size of the array cannot be increased dynamically. 

So what happens internally is a new Array is created with size 1.5*currentSize and the data from old Array is copied into this new Array.


Arraylist


ArrayList internally uses and array to store the elements, when that array gets filled by inserting elements a new array of roughly 1.5 times the size of the original array is created and all the data of old array is copied to new array. 
During deletion, all elements present in the array after the deleted elements have to be moved one step back to fill the space created by deletion. In linked list data is stored in nodes that have reference to the previous node and the next node so adding element is simple as creating the node an updating the next pointer on the last node and the previous pointer on the new node. Deletion in linked list is fast because it involves only updating the next pointer in the node before the deleted node and updating the previous pointer in the node after the deleted node.

ArrayList is faster for random accessing of data-It  has direct references to every element in the list, so it can get the n-th element in constant time
Linked list faster inserting and deleting data- LinkedList has to traverse the list from the beginning to get to the n-th element.

ArrayList is slower because it needs to copy part of the array in order to remove the slot that has become free
LinkedList is faster than ArrayList for deletion.LinkedList just has to manipulate a couple of references



LinkedList
WHy Accessing based on index is slow in linked list

If you want to get (say) the element at position 42, the code has to:

get the entry for the first element (position 0)
follow the next link to the entry for position 1
follow the next link to the entry for position 2
and so on .... 42 times in total.


Why Deletion or insertion of element is faster in linked list
WHen we insert any element just refernce needs to be updated, no need to rearraning the list

Singly linked list implementation
each node in the list stores the contents of the node and a pointer or reference to the next node in the list. It does not store any pointer or reference to the previous node. It is called a singly linked list because each node only has a single link to another node. To store a single linked list, you only need to store a reference or pointer to the first node in that list. The last node has a pointer to nothingness to indicate that it is the last node.

Doubly linked list implementation

An array is a random access data structure
A linked list is a sequential access data structure,

Stack and Queue
*********************************************************** STACK 	***********************************************************************************
A stack is a container of objects that are inserted and removed according to the last-in first-out (LIFO) principle. In the pushdown stacks only two operations are allowed: push the item into the stack, and pop the item out of the stack. A stack is a limited access data structure - elements can be added and removed from the stack only at the top. push adds an item to the top of the stack, pop removes the item from the top. 

A stack is a recursive data structure. Here is a structural definition of a Stack:

a stack is either empty or
it consistes of a top and the rest which is a stack;

space for parameters and local variables is created internally using a stack.
compiler's syntax check for matching braces is implemented by using stack.
support for recursion


*********************************************************** QUEUE	***********************************************************************************

A queue is a container of objects (a linear collection) that are inserted and removed according to the first-in first-out (FIFO) principle. An excellent example of a queue is a line of students in the food court of the UC.

In the queue only two operations are allowed enqueue and dequeue. Enqueue means to insert an item into the back of the queue, dequeue means removing the front item.


The difference between stacks and queues is in removing. In a stack we remove the item the most recently added; in a queue, we remove the item the least recently added.

Queue is a collection used to hold multiple elements prior to processing.
Java Deque Interface is a linear collection that supports element insertion and removal at both ends





HackerRank - programs


1.We can sort Char Array using Arrays.sort() method or using sorting algorithm, we can get Ascii value and compare as well.
for (int i = 0; i < c1.length - 1; i++) {
				for (int j =0; j<c1.length - 1; j++) {
					int ascii1 = (int) c1[j];
					int ascii2 = (int) c1[j+1];
					if (ascii1 > ascii2) {
						char tmp = c1[j];
						c1[j] = c1[j + 1];
						c1[j + 1] = tmp;
					}
				}

String s1=new String(c1);
			String s2=new String(c2);
			
			
			
			
			******************************     JAVA IMPORTANT      ***************************************
***** STRINGS  ********
Strings are immutable in Java to achieve Security and performance.
Since it is final no body can change it. Once it is created.

** String literals :
String str = "India";--- String literal
This double qouted literal is known as String literal.
Cache which stores these instances is known String pool.
String pool will be there in some paprt of heap area.
String str1 = new string("India") : String obejct
this string will be stored in Heap Area. And every time new object will be created.

To verify strings values in Java.Its recommended that use object.equals(object), insted of ==
beacuase == check the object reference(memory address).While equals checks the object value.
since str will stored in String pool.Its memory adress will be different than str1's heap area memory adress.
If you are not sure about the where the string will save, avoid using == and use equals method to compare the strings.

************************  String Interning  ******************************
In Java, when we talk about String interning, we describe how Java stores only one copy of every distinct String value in the string pool, in order to reuse String objects to save memory from a program.

This practically means, that each String object is stored only once in memory, regardless of how many times the same String may appear in the code.


Java automatically interns String literals. This means that in many cases, the == operator appears to work for Strings in the same way that it does for ints or other primitive values.

Since interning is automatic for String literals, the intern() method is to be used on Strings constructed with new String()

Using your example:

String s1 = "Rakesh";
String s2 = "Rakesh";
String s3 = "Rakesh".intern();
String s4 = new String("Rakesh");
String s5 = new String("Rakesh").intern();

if ( s1 == s2 ){
    System.out.println("s1 and s2 are same");  // 1.
}

if ( s1 == s3 ){
    System.out.println("s1 and s3 are same" );  // 2.
}

if ( s1 == s4 ){
    System.out.println("s1 and s4 are same" );  // 3.
}

if ( s1 == s5 ){
    System.out.println("s1 and s5 are same" );  // 4.
}
will return:

s1 and s2 are same
s1 and s3 are same
s1 and s5 are same


           String, StringBuilder and String Buffer
Threasafe    Y		N		Y
Immutable    Y          N               N
Class is     Y 		Y		T
Final

String Builder and String buffer internally uses an array to acchive it append or anyother modifuing methods
************************************************************************************************************************
**************************************    OOPS     **************************************************************
*****************************************************************************************************************

** Multiple Inheritence : 
Inheritence having all behaviour and properties of parent class in child class
			A
		B       C
		     D
			 
Above daigram shows Diamond problems.
If suppose A is method test();
B extends A, B is having its own test() method;
C also etends A, C is having its own test() method.
D extends both B,C and calls method test().
So its confuses which test method its refering. Whether A -> test(), B -> test() or C -> test().

To avoid this in Java multiple inheritence in class level its there, but its allowd in interface 
Because in interfece we will have only signaure of methods and implementation will be done concrete class.
*********************************************************************************************************************
			Types of inheritance: Acquiring another objects properties from another object in Java
Types of Inheritence In Java:
1. Single  A --> B
2. Multilevel Inheritence:
	A -->B --> C
3. Hierarchical: A --> B
		 A --> C
		 


Howa it made possible in Interface

Interface A{
test()
}

Interface B{
test()
}

Class C implements A,B{
test()
{
System.out.println("testing ")
}

Main{
test()
}

this will call test method of class C as it has implementaion of method test.

*********************************************************************************************************************

************** Difference between Abstaction, Encapsulation  **************
Abstaction : Information hiding- Providing the functionality to end user, with hiding implementation information.
Encasulation : Data hiding, by making the data members to bind with class. By using private modifiers.
Abstaction can be achieved through encasulation,abstract class and interface.

Abstract class:fields are public, static, final. Which is having abstract methods, will contains common implemented functionality and some signature methods without body. Provides 1to 100% abstraction
Interface is contact : Fields are by default public static final:
						Final because it will not change its value in its implementation class
						It is contains only signatures and its pure abstract class. It say's like your class will looks like this. whoever implemented they my class in that way

Car: Car driver dont know how start button but still uses its functionality.
syso:system.out.println we are using without knowing there implementation. This called an abstaction, This information/behavior hiding can be achieved through encasulation,Abastract class, interface.

********************************************************************************************************************************************************************

5. Access specifiers public, private, protected, default?
	public can accessed between packages(Anywhere),
	default can be accessed in same package,
	protected can be accessed in derived classes(Through inheritance only).
	private can be accessed only same class.
******************************************************************************************************************************************************************** 

6. Primitive and derived data types?
	Primitive data types are predefined by the language. There are 8 types Eg: int, float, double, long, char,Boolean, byte,short
	Derived Data types are reference data types Ex: class initialization A a = new A();

******************************************************************************************************************************************************************** 

7. String constant and string non constant pool ?
	String pool and constant pool, String pool contains collection of reference of string literals, Constant pool contains the constants those are not Java objects.Those special meaning to class loader.

v******************************************************************************************************************************************************************** 
8. How to compare 2 strings in Java?
	Using .equals, ==, comapreTo(ASCHI Checking)



******************************************************************************************************************************************************************** 
10. How many ways to implement threads in java---Implementing Runnable interface and 
extending Thread class.


******************************************************************************************************************************************************************** 
11. Call by value and reference

There is only call by value in java, not call by reference. If we call a method passing a value, it is known as call by value


******************************************************************************************************************************************************************** 

12. Length of the string without using length

public static void getLengthOfString(String str){
int length=0;
char[] c=str.toCharArray();
for(char ch:c){
	length++
}
return length;

}

******************************************************************************************************************************************************************** 
13. Challenged faced during project?


******************************************************************************************************************************************************************** 
14. Difference between  string, string builder, string buffer?
	String is immutable and more secured.
	String Buffer is mutable but synchronized.
	String Builder is mutable and non synchronized.

******************************************************************************************************************************************************************** 
15.Convert array to string Array list to Array vice versa.


Array to String 

char[] a=new char[];
String str=a.toString();


Array to list

String[] a=new String[1];
List<String> ls=Arrays.asList(a);

List to array
List<String> ls= new ArrayList<String>();
String[] a=ls.toArray();

Array to set

Set<T> mySet = new HashSet<T>(Arrays.asList(someArray));
******************************************************************************************************************************************************************** 

22. What is default package in Java?

Packages are used in Java in order to prevent naming conflicts, to control access, to make searching/locating and usage of classes, interfaces, enumerations and annotations easier, etc.


The default package is an unnamed package. The unnamed package contains java classes whose source files did not contain a package declaration. The purpose of default packahe is for convenience when developing small or temporary applications or when just beginning development.

Example
java.lang----bundles the fundamental classes

java.io -----classes for input , output functions are bundled in this package

******************************************************************************************************************************************************************** 
23. What are inner classes name them?

Java inner class or nested class is a class i.e. declared inside the class or interface.
It can access all the members of outer class including private data members and methods.

Syntax of Inner class

class Java_Outer_class{  
 //code  
 class Java_Inner_class{  
  //code  
 }  
} 


Advantage of java inner classes

There are basically three advantages of inner classes in java. They are as follows:

1) Nested classes represent a special type of relationship that is it can access all the members (data members and methods) of outer class including private.

2) Nested classes are used to develop more readable and maintainable code because it logically group classes and interfaces in one place only.

3) Code Optimization: It requires less code to write

Types of Nested classes

There are two types of nested classes non-static and static nested classes.The non-static nested classes are also known as inner classes.
Non-static nested class(inner class)


a.Member Inner Class	A class created within class and outside method.
b.Anonymous Inner Class	A class created for implementing interface or extending class. Its name is decided by the java compiler.
c.Local Inner Class	A class created within method.


Static Nested Class	A static class created within class.
Nested Interface	An interface created within class or interface.


******************************************************************************************************************************************************************** 
24. Difference between ==, comapre-to, equals?
	== :: Checks object reference
	.equlas :: Checks object value
	copare-to :: Checks value's ASCHI formate's returns '0'. If both strings ASCHI values are same.


******************************************************************************************************************************************************************** 

25. Binary search program?

******************************************************************************************************************************************************************** 

26. Difference between hashmap and hashtable?
`		HashMap								HashTable						Concurrent Hash Map					
	HashMap is non synchronized, Hence its not thread safe.        Hashtable is synchronized, Hence its more safe.        Allows concurrency access of part of map.																    	
	Hash map is faster due to non synchronized.                    It is slower than Hash map.                                   Synchronized, hence thread safe. 
	Allows only one null keys and many null values.                Hash table not allows null in keys and values.                Locks the part of Map only.
	                                                                                                                             Fail safe iterator.
	Fail-fast Iterator: Fails as soon as get null value for key    Fail safe Iterator: Won't fail for concurrency modification   
																																 Can execute 16 threads parallel, Map is divided
																																 into 16 parts.
																																 Not excepts null keys and values




******************************************************************************************************************************************************************** 

30. String buffer and tokenizer?
	String buffer is same as string but its mutable. It is used store sequence of characters
	Tokenizer is used divide the string in specified format.
	
31. Ajax flash and frame
32. Draw your framework?
33. JDBC connection?

******************************************************************************************************************************************************************** 
34. Interface and Abstract class
			** Interface:
	** Fields should be by default public static and final
	** Modifier should be public or abstract for method
	public interface myinterface() {
	void method1();
	}
			** Abstract class
	** Fields  should be public, protected, private, static, final, transient & volatile are permitted
	** For abstract method modifier should public, protected, private, abstract, static, final, synchronized
	   This class can have concrete class, abstract methods, also constructors for only variable initialization but you cant initialize the abstract class
	 public abstact class myabstract() {
	 public abstract();
	 }
	 
	 T0 implement interface we have to use "implementation" in concrete class and to implement abstract class we have to use "extends" keyword.
	 can use optional @override annotation on implemented method.
	 That makes is runtime polymorphism.

******************************************************************************************************************************************************************** 
35. Why main method is public static void:
	It because to call static method no need to create constructor, to maintain uniformity,Its static.
	If suppose its not static, we can have multiple constructor with same name as class and with multiple arugement expecting.
	So JVM which constructor should it call and what arguments it should pass.
	To avoid this confusion, core Java entry point is having constant signature.



What are the differences between Method Overloading and Method Overriding?


******************************************************************************************************************************************************************** 

What are the difference between this() calling and super() calling?

You can use this() to call no argument constructor of same class, while super() to call no argument or default constructor of parent class

Example


class Animal {
  void eat() {
    System.out.println("animal : eat");
  }
}

class Dog extends Animal {
  void eat() {
    System.out.println("dog : eat");
  }
  void anotherEat() {
    super.eat();
  }
}

public class Test {
  public static void main(String[] args) {
    Animal a = new Animal();
    a.eat();
    Dog d = new Dog();
    d.eat();
    d.anotherEat();
  }
}

The output is going to be

animal : eat
dog : eat
animal : eat
The third line is printing "animal:eat" because we are calling super.eat(). If we called this.eat(), it would have printed as "dog:eat".


******************************************************************************************************************************************************************** 

What are the difference between this keyword and super keyword?
What is inheritance and its types?
Single , multiple, multi level, hybrid, heirarchieal.



Why Multiple Inheritance is Not Possible in Java?

What is UpCasting and DownCasting?
What is PolyMorphism and its types? Give an example.
What is Abstraction?
What is Encapsulation and Explain all the Access Privileges in Java?
Write a Java Program to reverse a String?


What is the difference between List,Set and Queue Type of collection?
Write a java Program to handle Exception using Catch Block

******************************************************************************************************************************************************************** 
Explain Grbage Collection in Java?

The garbage collector is a program which runs on the Java Virtual Machine which gets rid of objects which are not being used by a Java application anymore. It is a form of automatic memory management

Advantage of Garbage Collection

It makes java memory efficient because garbage collector removes the unreferenced objects from heap memory.
It is automatically done by the garbage collector(a part of JVM) so we don't need to make extra efforts.

How can an object be unreferenced?
There are many ways:

By nulling the reference
By assigning a reference to another
By annonymous object etc.


1) By nulling a reference:

Employee e=new Employee();  
e=null;  
2) By assigning a reference to another:

Employee e1=new Employee();  
Employee e2=new Employee();  
e1=e2;//now the first object referred by e1 is available for garbage collection  
3) By annonymous object:

new Employee();  
finalize() method

The finalize() method is invoked each time before the object is garbage collected. This method can be used to perform cleanup processing.


What is the difference between final,finally and finalize in java?
What is the difference between Encapsultaion and Abstraction?

******************************************************************************************************************************************************************** 
Find the Count of numbers in the Given String "hey1234876hey"?


public static void main(String[] args) {
		String str="JKUI7798989UUIUI45745";
		int Count=0;
		for(int i=0;i<str.length()-1;i++){
			if(Character.isDigit(str.charAt(i))){
				Count++;
			}
			
		}
		System.out.println(Count);
		}
	}

******************************************************************************************************************************************************************** 


Write a Java Program to Exchange Name is James to James is Name?

				String str="Name is James";
				String[] s=str.split(" ");
				StringBuffer sb=new StringBuffer();
				for(int i=s.length-1; i>=0;i--){
					sb.append(s[i]).append(" ");
		
		
}
				System.out.println(sb);



******************************************************************************************************************************************************************** 
DIfference between For and For Each loop
For loop- used when Index of the element is known
For Each loop - used when idex is not known



******************************************************************************************************************************************************************** 
Final
you cannot change the value of final variables
you cannot override final method
you cannot extend  final class(cannot do inheritance)
we cannot declare a constructor as final, because constructor is never inherited.
(When you set a method as final, it means : "You don't want any class override it", )

******************************************************************************************************************************************************************** 





Inheritence
1.Method cannot be overriden if method is final.
2.Parent class object referring to parent class will not have access to child class methods 
3.CHild class reference will have access to parent class variables, methods and constructor

***Static methods cannot be overriden
Super.method()------- This is call parent class method


Abstract Class
1.We cannot create instance of abstract class
2.Abstract methods needs to be overriden in child class
3.Non static methos can be overriden in child class

Overriding

Parent p=new child();
child c=new child();
Parent p1=new Parent():

Parent obj p cannot have access to child methods and members.
However obj c can have access to child as well as super class methods and members

Overriding cannot be achieved using members/variables of class

Why we create Parent object reference to child object.
If we want to override (access ) only parent class related methods.


public class StringConstantPool {
	public static void main(String[] args) {
		String s = "prasad";
		String s2 = "prasad";
 
		System.out.println(s.equals(s2));
		System.out.println(s == s2);
	}
}


String pool
String Pool in java is a pool of Strings stored in Java Heap Memory.
STring " Prasad" is stored in heap memory once . Its reference is stored in constant pool

String constant pool

It is a special place where the collection of references to string objects are placed. 
The class is loaded when JVM is invoked.
JVM will look for all the string literals in the program
First, it finds the variable s which refers to the  literal “prasad” and it will be created in the memory
A reference for the literal “prasad” will be placed in the string constant pool memory.
Then it finds another variable s2 which is referring to the same string literal “prasad“.
Now that JVM has already found a string literal “prasad“, both the variables s and s2 wil refer to the same object i.e. “prasad“.




Java Heap Space

Java Heap space is used by java runtime to allocate memory to Objects and JRE classes. Whenever we create any object, it’s always created in the Heap space.
Garbage Collection runs on the heap memory to free the memory used by objects that doesn’t have any reference. Any object created in the heap space has global access and can be referenced from anywhere of the application.

Java Stack Memory

Java Stack memory is used for execution of a thread. They contain method specific values that are short-lived and references to other objects in the heap that are getting referred from the method.


Stack memory is always referenced in LIFO (Last-In-First-Out) order. Whenever a method is invoked, a new block is created in the stack memory for the method to hold local primitive values and reference to other objects in the method.

As soon as method ends, the block becomes unused and become available for next method.
Stack memory size is very less compared to Heap memory.


Stack is used for static memory allocation and Heap for dynamic memory allocation, both stored in the computer's RAM . Variables allocated on the stack are stored directly to the memory and access to this memory is very fast, and it's allocation is dealt with when the program is compiled.d




Exception 


The core advantage of exception handling is to maintain the normal flow of the application.
Types of exception

Checked Exception e.g.IOException, SQLException
Unchecked Exception e.g. ArithmeticException, NullPointerException, ArrayIndexOutOfBoundsException etc
Error e.g. OutOfMemoryError, VirtualMachineError, AssertionError etc.



throws keyword in java is used to throw an exception rather than handling it. All checked exceptions can be thrown by methods.






Java Access modifiers
Private----------------The private access modifier is accessible only within class.
public ------------------The public access modifier is accessible everywhere.
protected------------The protected access modifier is accessible within package and outside the package but through inheritance only.
default--------------The default modifier is accessible only within package

***********************************************************************************************************************************************************************
Java Non access modifiers
1.static
2.Final
3.Abstract
4.synchronized and volatile -----used for threads


static
Static keyword can be used for variables, methods, blocks and nested classes. It cannot be used for classes.
The static keyword belongs to the class rather than the instance of the class, means it is not required to instantiate the class to access its fields.
Why it is memory efficient is because the memory allocation happened to the static variable is just one time in whole program. And all the classes accessing the static variable are referring to the same memory location. Memory allocation happened for all the static variables at the start of the program. 

Only static & local variables can be accessed in static methods. But a static variable can be accessed outside the static method. The same way only static methods are accessible within the static method.


Final
If the Final modifier is used in the declaration of the class, it means the class is final and cannot be sub-classed or inherited

Final Static Variable
Final variables are often declare with static keyword in java and treated as constant.


final static fields are global constants.
All instances of the class share the member and its value cannot be changed.
***********************************************************************************************************************************************************************

Constructor 
Constructor in java is a special type of method that is used to initialize the object.
Java constructor is invoked at the time of object creation. It constructs the values i.e. provides data for the object that is why it is known as constructor.

Two types
1.Default 
2.Parameterized constructor 

There are basically two rules defined for the constructor.

Constructor name must be same as its class name
Constructor must have no explicit return type
If you don’t declare the constructor, compiler creates one for you.


***********************************************************************************************************************************************************************



Difference between Array and Arraylist
Array														ArrayList
Array is a fixed length data structure							ArrayList is a variable length Collection class.				
You can not change length of Array once created in Java					ArrayList re-size itself when gets full depending upon capacity and load factor
Stores similar data of one type								Can store heterogeneous data types
Stores primitive data types and also objects						Stores only objects	
Cannot be synchronized									Can be obtained a synchronized version
Elements retrieved with for loop							Can be retrieved with for loop and iterators
Elements accessible with index number							Accessing methods like get() etc. are available	
It is not a class									It is a class with many methods
Defined in Java language itself as a fundamental data structure				Belongs to collections framework


***********************************************************************************************************************************************************************


Collections



Collection is a data structure in which Objects are stored.

Objects can be Added, Deleted and can traversed in Collection.

There are 4 type of basic Collection
List : Ordered, Duplicates are allowed, Indexed

Sets : May or may not Ordered. Duplicates are not allowed.

Maps : Duplicate keys are not allowed.

Queue : Ordered by FIFO or priority.

ArrayList : Fast Iteration & Fast Random Access.No duplicates

Vector: Synchronized Method.

LinkedList : Good for implementing Stack and Queue.No duplicated

HashSet : Fast Access, No Duplicates, No Ordering.


LinkedHashSet : No Duplicates, Iterates by insertion order.

TreeSet : No Duplicates, Iterates in sorted order.



Call static method of different class

className.methodName();


classA{
static method1()
}

classB{
static method2(){

classA.mathod1();
}
}

For Non static method create object instance of other class

classA{
 method1()
}

classB{
method2(){
classA obj=new classA();
obj.mathod1();
}
}


A non-static method belongs to an object of the class, and you have to create an instance of the class to access the non-static 

Static methods in java belong to the class (not an instance of it). 



Coverting Array into list

String[] name=new String[n];
List list=Array.asList(name)

List to Array
List<String> ls=new ArrayList<String>();
String[] a=ls.toArray(new String[0])

List to Set
List<String> Ar=new ArrayList<String>();
Set<String> S=new HashSet<String>(ls);


Set to List
Set<Integer> st=new HashSet<Integer>();
List<Integer> ls=new ArrayList<Integer>(st);


***********************************************************************************************************************************************************************

Selection sort: repeatedly pick the smallest element to append to the result.
Insertion sort: repeatedly add new element to the sorted result.
Bubble sort: repeatedly compare neighbor pairs and swap if necessary.


Selection sort
Find the smallest element, and put it to the first position.
Find the next smallest element, and put it to the second position.
Repeat until all elements are in the right positions.
1 4 3 2 5 
1 4 3 2 5
1 3 4 2 5 
1 3 2 4 5
1 3 2 4 5
1 2 3 4 5


for(int i=0;i<data.length()-1;i++){   			
	for(int j=i+1; j<data.length(); j++){		
	if(data[j]<data[i]){				
		int smallnum=data[j]			
		data[j]=data[i]			
		data[i]=smallnum;		
}
}
}


Insertion sort
Take the first element as a sorted sub-array.
Insert the second element into the sorted sub-array (shift elements if needed).
Insert the third element into the sorted sub-array.
Repeat until all elements are inserted.


1 3 2 4 5
1 3 2 4 5
1 2 3 4 5
1 2 3 4 5

1 3 2 4 3 1
1 3 2 4 3 1
1 2 3 4 3 1
1 2 3 4 3 1
1 2 3 3 4 1
1 2 3 3 1 4
1 2 3 1 3 4
1 2 1 3 3 4
1 1 2 3 3 4

for(int i=1; i<array.length; i++){
			for(int j=i;j>0;j--){
				if(array[j]<array[j-1]){
				int temp=array[j]; 		
				array[j]=array[j-1];
				array[j-1]=temp; 		
				
				}
			}

Bubble sort
Scan the array, swapping adjacent pair of elements if they are not in relative order. This bubbles up the largest element to the end.
Scan the array again, bubbling up the second largest element.
Repeat until all elements are in order.


public static void bubbleSort (int[] data)
{
    for (int i = data.length - 1; i >= 0; i--)
    {
        // bubble up
        for (int j = 0; j <= i - 1; j++)
        {
            if (data[j] > data[j + 1])
                swap(data, j, j + 1);
        }
    }
}

swap()
{
	tmp=0;
	data[j]>data[j]-1
	tmp=data[j]
	data[j]=data[j-1];
	data[j-1]=tmp

}

***********************************************************************************************************************************************************************
Strings
String is an object that represents array of characters.

Why string is immutable.
String object is immutable means it is unmodifiable or unchangeable.

Once String object is created its data or state cannot be changed but a new string object is created.
Ex:
String s="ABC"
s.concat("DEF")
system.out.println(s)

o/p : ABC


Java String provides lots of concepts that can be performed on string.
concat,compare,equals,split,length,replace,compareTo,intern, subString.


String literal
String s="DHANYA"

String literal is used to make Java more memory efficient (because no new objects are created if it exists already in string constant pool).


How to create an immutable class?
String class is immutable. We can make class as immutable by making it final

public Final class A{
 final String s="ABC"
}







***********************************************************************************************************************************************************************
ThreadSafe
Thread safety is a computer programming concept applicable in the context of multi-threaded programs. A piece of code is thread-safe if it only manipulates shared data structures in a manner that guarantees safe execution by multiple threads at the same time.

***********************************************************************************************************************************************************************

JAVA I/O

We can perform file handling in java by java IO API.
Java uses the concept of stream to make I/O operation fast.
FileInputStream is used to read binary data, while FileReader is used to read character data.


Stream

A stream is a sequence of data.In Java a stream is composed of bytes. 

In java, 3 streams are created for us automatically. 

1) System.out: standard output stream

2) System.in: standard input stream

3) System.err: standard error stream


InputStream

Java application uses an input stream to read data from a source, it may be a file,an array,peripheral device or socket.

class SimpleRead{  
 public static void main(String args[]){  
  try{  
    File src=new File("D://FileIn.txt");
    FileInputStream fin=new FileInputStream(src=new );  
    int i=0;  
    while((i=fin.read())!=-1){  
     System.out.println((char)i);  
    }  
    fin.close();  
  }catch(Exception e){system.out.println(e);}  
 }  
} 


		


OutputStream
Used to write data from an application to a file.
class Test{  
  public static void main(String args[]){  
   try{  
     FileOutputstream fout=new FileOutputStream("abc.txt");  
     String s="Sachin Tendulkar is my favourite player";  
     byte b[]=s.getBytes();//converting string into byte array  
     fout.write(b);  
     fout.close();  
     System.out.println("success...");  
    }catch(Exception e){system.out.println(e);}  
  }  
}  


***********************************************************************************************************************************************************************

Read data from excel using Workbook

 File src= new File("D:\\File")
FileInputStream file=new FileInputStream(src);
Workbook wb=new Workbook(file)
Sheet sheet=wb.getSheet(0);
 rowCount=sheet.getRows();
 colCount=sheet.getColumns();
 for(i=0;i<rowCount;i++){
 for(int j=0; j<columnCount; j++){
 
	Cell cell=sheet.getCell(j,i);


	String data=cell.getContents();
	}
 }



***********************************************************************************************************************************************************************
Threads

SYnchronised and Asynchornised meaning in java

When you execute something synchronously, you wait for it to finish before moving on to another task. 
When you execute something asynchronously, you can move on to another task before it finishes.



Thread Safe
Thread safety is a computer programming concept applicable in context of multi threaded  programs.A piece of code is thread safe if manipulation of data gaurantees safe execution in multileple threads.
Thread safety is the process to make our program safe to use in multithreaded environment,there are different ways through which we can make our program thread safe.

1.Synchronization is the easiest and most widely used tool for thread safety in java.
2.Using thread safe collection classes, check this post for usage of ConcurrentHashMap for thread safety.



How many ways to implement threads in java explain how.
Java defines two ways by which a thread can be created.

By implementing the Runnable interface.----After implementing runnable interface , the class needs to implement the run() method
By extending the Thread class.---The extending class must override run() method which is the entry point of new thread.



class MyThread implements Runnable
{
 public void run()
 {
  System.out.println("concurrent thread started running..");
 }
}

class MyThreadDemo
{
 public static void main( String args[] )
 {
  MyThread mt = new MyThread();
  Thread t = new Thread(mt);
  t.start();
 }
}
Output :
concurrent thread started running..

#################################################################################################################################################################


class MyThread extends Thread
{
 public void run()
 {
  System.out.println("Concurrent thread started running..");
 }
}

classMyThreadDemo
{
 public static void main( String args[] )
 {
  MyThread mt = new  MyThread();
  mt.start();
 }
}
Output :
concurrent thread started running..


#################################################################################################################################################################

What if we call run() method directly without using start() method ?

In above program if we directly call run() method, without using start() method,

public static void main( String args[] )
{
 MyThread mt = new MyThread();
 mt.run();
}
Doing so, the thread won't be allocated a new call stack, and it will start running in the current call stack, that is the call stack of the main thread. Hence Multithreading won't be there.



#################################################################################################################################################################

Can we Start a thread twice ?

No, a thread cannot be started twice. If you try to do so, IllegalThreadStateException will be thrown.

public static void main( String args[] )
{
 MyThread mt = new MyThread();
 mt.start();
 mt.start();     //Exception thrown
}
When a thread is in running state, and you try to start it again, or any method try to invoke that thread again using start() method, exception is thrown.



DataProvider-

It helps you to write data-driven tests, which essentially means that same test method can be run multiple times with different data-sets. 



<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite  name="Suite" verbose="4" parallel="methods" thread-count="3" >
<listeners>
<listener class-name="automationframework.CustomListener"/>
</listeners>

	<test  name="Test">
		<groups>
			<run>
				<include name="prerequisite" />
				<include name="smoke" />
			</run>
		</groups>
		<classes>
			<class name="newtours.Login" />
			<class name="newtours.FlightFinder" />
		</classes>
	</test> <!-- Test -->
</suite> <!-- Suite -->



My project name is SITA -DCS
Project size is 200+ members.
we are following agile methodology. We have 11 sprint teams working for the project.
Sprint cycle is 1 month duration.
Project belongs to airline domain. We provide software to thw airline industry which is used by the agents at the airport or subscriber for managing flight and passenger journey.
Project maining has 4 modules 
Seats --- we create pysical picture of seat map for the aircraft lilke defining how many cabin should be present , how many decks , whta type of seat characteristic it can have . All such stuff will be managed in seats module
Flights --- we schedule a flight and manages flight life cycle activity here
Checkin --- manages passenger checkin operations like accept, board, deplane , offload upadting passenger details etc
travel --- manages baggage details of the passengers 


About Webservice Automation framework 
1.We are using hybrid framework for our automation
we use modular driven and data driven framework.
We achieve Modular driver by having mudules or methods for generating data and calling those methods in our groovy script,which generates dynamic data required for our request.

Data driven is we have maintained properties ,test data required for the test request and endpoints , credential details in global property file,and use that data in test request which is common for the project.
And in txt file we have data set which we will load in soapui under global property which will contain common property consumed by the service.
We run our script using batch file , report will be generated in PDF format with passed , failed test case count . also passed and failed test case details.

We run our script through batch file , where we have commands to generate report. Report will be generated in PDF format as well as in HTML foramat with pass and failed test case details.

We have written VB script to generate report in html format.

batch file is located in bin folder of soapui tool as loadTestRunner. There we modify to specify the tool (soapUI tool version)which we are using and project name. with some command lines to generate report.


Soap UI automation framework explain

we are using hybrid framework.It is a combination data Driven and modular driven framework.
We have data kept in global properties and also dynamically generating data from groovy which will be used in the request.
for generating data we have created seperate groovy project and importing that project in the groovy test request for generating data. For each of the modules seprate modules are created hence achieved modular driven.
And we are maintaining projects for each of the domain. and seperate suites for each of the modules.
We run individual suites while writing scripts in soapui.
Different Assertion are added in each of the test request to validate the response.
In few of the scripts we have used groovy to validate the response
Entire Suite will be run through batch file.That will have the commands to generate report and store in the specified location.
Report will be generated in PDF format which will contain Pass and fail test case count and details test case pass fail details.





steps
1.First we Create soap Project 
2.Add wsdl /import wsdl files
3.Add test suite  
4.Add test case 
5.Add test steps
For each of the test steps we add test request step 
For Property Transfer from one step to other we add property transfer step
Groovy step is included for dynamic data generation as well as validating reponse.
JDBC step is included to validate response content against data base
6.In the test request we add working request and parameterise the data fields
7.endpoint and wsa adressing will be parameterized
8.Add appropriate assertions to the test request
9.Run test suite using batch file 
10 verify result in result folder which gets created in PDF format.

Web Services Addressing (WS-Addressing) is a specification of transport-neutral mechanism that allows web services to communicate addressing information.

Testing activities in your project.

When the sprint is started we get story/scope for the current sprint.
we analyse the scope/story 
requirement analysis and clarication will be done within 4 to 5 days.
Then we identify scenarios and write test cases based on the scenarios we identied.
Then it will be sent to the BA for review . 
We identify scenarios for test scripts automation.
We create scripts and keep it ready before we get build.
Once we recieve build we do smoke testing.
Once smoke test is done ,parallely we will do script execution and manual testing.
we raise defects identified in manual and automation testing 
we will be executing test cases in QC and defect tracking is also done in QC.
During final release we upload our test scripts to the SVN which will be shared with the clients


Challenge faced
when the services /product built by us is consumed by the cosumer which is outside our domain,the way they consume our service /product will differ from the format we are seding the message/reponse. Communicating with the integration team understanding there services and finding the actual issues i find bit challenging work.


RElated to soapui automation 
We have aroung more than 150 test suites and more than 1000 test cases  , whenever we used to import project into our soapui , it used to hang for most of the time. 
To overcome this issue , we modified our framework and kept one excel file conating all the test suites and test case details. Which test cases are marked as Yes  soapui will import that test case and exceute it and close it once execution completes. For that we have written groovy script to data form excel and run based of flag set for the test case.





automation folder
1.Project.xml file
2.testSuite Controller --- it is an excel file having all the test csae name against which we have flag which indicates whoch test case to run in soapui
3.Groovy script folder--- which contains different types of classes with common methods which can be used for data generation like unque kinds of data
4.Batch file --which is used for Executing the script. 
5.Schema folder which contains all the schema which are being used in the project.
6.SoapUi propery file --- which contains endpoints , wsa -to ,reply to and other addressing details and properties which are common throought the project like subscriber, airline, airport.
7.Result folder gets created once we execute batch file , which will contain folder with all the test case details with each of the test step result. And PDF format report will be generated which contains pass and failed test case details and count.



1.We achieve data driven by keeping all the common properties in the global properties and other data will be generated usingb groovy script.
2.For generating data through groovy we created different modules.
3.Groovy folder contains groovy classes which contains common folder which contains groovy file for generating random numbers, dateutils,seatsutil and flightutil.
and one more checkin folder where we have generatePJID, and checkinutil .
4.We need to import the groovy package in the groovy script test step.
5.using get and setproperty , we get the data and set it to the dynamic property file.

commands used in the batch file 
-r, or --reports - Commands the runner to generate reports and to save them to the specified directory.
-f - Specifies the root directory, where the runner will save test result files
-F, or--format - Specifies the format of the exported reports. Usage: -F<FormatName>. Supported formats include: PDF, XLS, HTML, RTF, CSV, TXT and XML. If the parameter is not specified, PDF is used. 
To export results in several formats, separate them with commas. For example, -FPDF,XML,CSV. 

	
def propertySetStep1 = testRunner.getTestCase().getTestSuite().getTestCaseByName(testCaseName).getTestStepByName("DynamicData")

import aero.sita.voyager.automation.common.*;
import aero.sita.voyager.automation.checkin.CheckinUtil;

def listFlightInfo=FlightsUtil.getListUniqueFlightInfo(3);
propertySetStep1.setPropertyValue("FlightNumber1", listFlightInfo[1][0]);




import groovy.sql.Sql
public final class DBConnection{
	private Sql connection
	public static DBConnection getConnection(connectionString){
		def dbConnection = dbConnectionMap.get(connectionString)
		if(dbConnection == null){
			def sql = Sql.newInstance(connectionString,DBConstants.DEFAULT_DB_DRIVER)
			dbConnection = new DBConnection(sql)
			dbConnectionMap.put(connectionString,dbConnection)
		}
		return  dbConnection
	}
	
	
	public queryForNonExistence(query) {
		return executeQueryForCount(query)>0 ? false:true
	}
	public executeQuery(query) {
		return connection.rows(query)
	}
	
	def sitaNumberSet=messagingConnection.executeQuery(sitaNumberQuery);
	
	
	To run the teststep of different test case
	import com.eviware.soapui.model.testsuite.TestRunner.Status 
  
// get TestCase 
def tc = testRunner.testCase.testSuite.project.testSuites["IDM_Login"].testCases["Login"] 
  
  
// run test synchrouously 
def runner = tc.run( null, false ) 
  
// show that it worked out ok 
log.info "Status: $runner.status, time taken for TestCase was: $runner.timeTaken ms"
  
// assert that it didn't fail 
assert runner.status != Status.FAILED : runner.reason



Flatten a Collection. This Collection and any nested arrays or collections have their contents (recursively) added to the new collection.
public randGenerator(length)
pool=['1'..'9'].flatten()
Random rand=new Random(System.CurrentTimeinMillis())
def randChar=(1..length).collect(pool{rand.nextInt(pool.size())})
def RandomNum=randChar.join()
return RandomNum






linux command
1.Create file--- Vi fileName
2.Concatinate file ---cat fileName


QC fields:


DashBoard
1.Analaysis View 
2.DashBoard View
Management
1.Releases
2.Libraries
Requirements
1.Requirements
2.Business Models
Testing
1.Test Resuorces
2.Test Plan
3.Test Lab
4.Test Runs
5.Defects


XSD

XSD (XML Schema Definition) is a World Wide Web Consortium (W3C) recommendation that specifies how to formally describe the elements in an Extensible Markup Language (XML) document.

An XML Schema describes the structure of an XML document. The XML Schema language is also referred to as XML Schema Definition (XSD).

XML
Used for storing sharing an formating data

Webservice
Web services are web components that transfer the data between client and application. 
It is used to commnicate with the web aplliaction through xml

WSDL
Webservice description language
It uses xml language to define service layer document
It consist of
1.origin of webservice
2.header information
3.Port type
4.Input and output messages


components of webservice 
1.WSDL
2.SOAP
3.UDDI - It is a directory or global repository where all webservice can be found
4.RDF
5.XML


Elements of WSDL
<Types> -- Defines dat type used by web service
<Message> - Defines Data element for each operation
<port type> --- Describes the operation that can be performed and the messages involved
<binding> -- Defines the protocol and data format for each port type




Types of assertion

Contains
Not Contains
Schema Compliance
Soap fault 
Not soap fault
xpath match
Xquery match
Invalid HTTP statuc code
Valid HTTP status code

Data source in soapui
1.Excel file 
2.CSV files

Difference between soapui and soapui pro
1.Pro has scripting libraries(grovvy script libraries)
2.Pro supports groovy code templates
3.Data source driven test and data collection is possible in pro
4.Many assertions  are present in pro are not avaible in soapui



What is soap
Simple object access protocol that uses xml to interact with the web appllication.
Uses http rpotocol for transport


what is REST
Represenational state transfer is archetecture style.

Rest HTTP Methods
PUT --http create
GET--Http Find
DELETE ---http delete
POST---http update


Differene between soap and rest

1)  	SOAP is a protocol.						REST is an architectural style.
2)	SOAP stands for Simple Object Access Protocol.			REST stands for REpresentational State Transfer.
3)	SOAP can't use REST because it is a protocol.			REST can use SOAP web services because it is a concept and can use any protocol like HTTP,SOAP.
4)	SOAP uses services interfaces to expose the business logic.	REST uses URI to expose business logic.
5)	JAX-WS is the java API for SOAP web services.			JAX-RS is the java API for RESTful web services.
6)	SOAP defines standards to be strictly followed.			REST does not define too much standards like SOAP.
7)	SOAP requires more bandwidth and resource than REST.		REST requires less bandwidth and resource than SOAP.
8)	SOAP defines its own security.					RESTful web services inherits security measures from the underlying transport.
9)	SOAP permits XML data format only.				REST permits different data format such as Plain text, HTML, XML, JSON etc.
10)	SOAP is less preferred than REST.				REST more preferred than SOAP.




Http Error code
2XX---		Success
	200-	OK
	201- 	Created
3XX----		Redirection
	301-	Permanent Redirect
	303-	Redirect for undefined reason
4xx----		Application Error
	400-	Bad Request
	401-	UnAuthorized
	403- 	Forbidden
	404-	Not found
	409-	Conflict
5xx	Server Error
	500- server error
In summary, a 401 Unauthorized response should be used for missing or bad authentication, and a 403 Forbidden response should be used afterwards, when the user is aufgtthenticated but isn’t authorized to perform the requested operation on the given resource.

Communicaiton channels for websrvices
1.HTTP/POST --protocol transfer the information between clients with secure mode
2.HTTP/GET--- Allows the clients to view transferred data
3.SOAP-- protocol transferring the confidential data safely


Operatoin in WSDL
One-way --- Operation can recieve a message but will not send response
Request-Response---Operation can recieve a message and respond back with the response
Solicit-response--- Operation can send a request and wait for a response
Notification----Operation can send a request /message and will not wait for a response


Service-oriented architecture
				Registry

		  						REgistry Query
Service description using WSDL			Query response using WSDl
		
	
Service		 <--Service Request---------------------------  Service
Provider	------SErvice REsponse------------------------> Consumer
 	

Services consumer send request to the service provider.
The service provider returns a response message to the service consumer
A service provider can also be a service consumer.

A service provider describes its service using WSDL.This definition is published to a repository of services.he repository could use Universal Description, Discovery, and Integration (UDDI). Other forms of directories could also be used.
A service consumer issues one or more queries to the repository to locate a service and determine how to communicate with that service. 

Part of the WSDL provided by the service provider is passed to the service consumer. This tells the service consumer what the requests and responses are for the service provider.
The service consumer uses the WSDL to send a request to the service provider.
The service provider provides the expected response to the service consumer.

Web Services Description Language (WSDL)

The Web Services Description Language (WSDL) forms the basis for the original Web Services specification. T

Universal Description, Discovery, and Integration (UDDI)

The repository shown in the above figure could be a UDDI registry. The UDDI registry was intended to eventually serve as a means of "discovering" Web Services described using WSDL. The idea is that the UDDI registry can be searched in various ways to obtain contact information and the Web Services available for various organizations. How much "discovery" was ever used is open to discussion. Nevertheless, even without the discovery portion, the UDDI registry is a way to keep up-to-date on the Web Services your organization currently uses. It can be used at design time and with governance. An alternative to UDDI is the ebXML Registry. More on Universal Description, Discovery, and Integration.

SOAP

All the messages shown in the above figure are sent using SOAP. (SOAP at one time stood for Simple Object Access Protocol. Now, the letters in the acronym have no particular meaning .) SOAP essentially provides the envelope for sending the Web Services messages. SOAP generally uses HTTP , but other means of connection may be used. HTTP is the familiar connection we all use for the Internet. 



Web Services Messages

At the right of this figure is a fragment of the WSDL being sent to the service consumer. This is the same fragment sent to the repository by the service provider. The service consumer uses this WSDL to create the service request shown above the arrow connecting the service consumer to the service provider. Upon receiving the request, the service provider returns a message using the format described in the original WSDL. That message appears at the bottom of the figure.

XML is used to define messages. 



Rest HTTP Methods
GET
The HTTP GET method is used to **read** (or retrieve) a representation of a resource. In the “happy” (or non-error) path, GET returns a representation in XML or JSON and an HTTP response code of 200 (OK). In an error case, it most often returns a 404 (NOT FOUND) or 400 (BAD REQUEST).

According to the design of the HTTP specification, GET (along with HEAD) requests are used only to read data and not change it. Therefore, when used this way, they are considered safe. That is, they can be called without risk of data modification or corruption—calling it once has the same effect as calling it 10 times, or none at all. Additionally, GET (and HEAD) is idempotent, which means that making multiple identical requests ends up having the same result as a single request.

Do not expose unsafe operations via GET—it should never modify any resources on the server.

Examples:

GEGET http://www.example.com/customers/12345/orders
GET http://www.example.com/buckets/samplehttp://www.example.com/customers/12345


POST
The POST verb is most-often utilized to **create** new resources. In particular, it's used to create subordinate resources. That is, subordinate to some other (e.g. parent) resource. In other words, when creating a new resource, POST to the parent and the service takes care of associating the new resource with the parent, assigning an ID (new resource URI), etc.

On successful creation, return HTTP status 201, returning a Location header with a link to the newly-created resource with the 201 HTTP status.

POST is neither safe nor idempotent. It is therefore recommended for non-idempotent resource requests. Making two identical POST requests will most-likely result in two resources containing the same information.

Examples:

POST http://www.example.com/customers



PUT
PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource.

However, PUT can also be used to create a resource in the case where the resource ID is chosen by the client instead of by the server. In other words, if the PUT is to a URI that contains the value of a non-existent resource ID. Again, the request body contains a resource representation. Many feel this is convoluted and confusing. Consequently, this method of creation should be used sparingly, if at all.

Alternatively, use POST to create new resources and provide the client-defined ID in the body representation—presumably to a URI that doesn't include the ID of the resource (see POST below).

On successful update, return 200 (or 204 if not returning any content in the body) from a PUT. If using PUT for create, return HTTP status 201 on successful creation. A body in the response is optional—providing one consumes more bandwidth. It is not necessary to return a link via a Location header in the creation case since the client already set the resource ID.

PUT is not a safe operation, in that it modifies (or creates) state on the server, but it is idempotent. In other words, if you create or update a resource using PUT and then make that same call again, the resource is still there and still has the same state as it did with the first call.

If, for instance, calling PUT on a resource increments a counter within the resource, the call is no longer idempotent. Sometimes that happens and it may be enough to document that the call is not idempotent. However, it's recommended to keep PUT requests idempotent. It is strongly recommended to use POST for non-idempotent requests.

Examples:

PUT http://www.example.com/customers/12345



DELETE
DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.

On successful deletion, return HTTP status 200 (OK) along with a response body, perhaps the representation of the deleted item (often demands too much bandwidth), or a wrapped response (see Return Values below). Either that or return HTTP status 204 (NO CONTENT) with no response body. In other words, a 204 status with no body, or the JSEND-style response and HTTP status 200 are the recommended responses.

Calling DELETE on a resource a second time will often return a 404 (NOT FOUND) since it was already removed and therefore is no longer findable. 

Examples:

DELETE http://www.example.com/customers/12345








What are webservices?

Ans. Web services are web components that transfer data between client and server. Client sends a web request to the server and the server then responds to client. The response and request are related and different requests evoke the corresponding response.

Web Service is a web component or software program that can be accessed on the Internet. It is mainly used to communicate with the web based applications through XML messaging concepts. For example, if we want to access a particular location using Google Maps, we can use the corresponding web service URL. For that we have to pass the appropriate inputs

*************************************************************************************************************************************************************

What are the advantages of web services?

Interoperability: By the help of web services, an application can communicate with other application developed in any language.
Reuability: We can expose the web service so that other applications can use it.
Modularity: By the help of web service, we can create a service for a specific task such as tax calculation etc.

*************************************************************************************************************************************************************

What are the different types of web services?
There are two types of web services:
SOAP
RESTful
*************************************************************************************************************************************************************

What is SOAP?
SOAP stands for Simple Object Access Protocol. It is a XML-based protocol for accessing web services

*************************************************************************************************************************************************************


Advantages of Soap Web Services
WS Security: SOAP defines its own security known as WS Security.
Language and Platform independent: SOAP web services can be written in any programming language and executed in any platform.
*************************************************************************************************************************************************************



Disadvantages of Soap Web Services
Slow: SOAP uses XML format that must be parsed to be read. It defines many standards that must be followed while developing the SOAP applications. So it is slow and consumes more bandwidth and resource.
WSDL dependent: SOAP uses WSDL and doesn't have any other mechanism to discover the service.

*************************************************************************************************************************************************************


What is WSDL
WSDL is an acronym for Web Services Description Language.
WSDL is a xml document containing information about web services such as method name, method parameter and how to access it.
WSDL is a part of UDDI. It acts as a interface between web service applications.

*************************************************************************************************************************************************************
Web Service Components
There are three major web service components.
SOAP
WSDL
UDDI


UDDI
UDDI is an acronym for Universal Description, Discovery and Integration.
UDDI is a XML based framework for describing, discovering and integrating web services.
UDDI is a directory of web service interfaces described by WSDL, containing information about web services.

*************************************************************************************************************************************************************

What is REST
REST stands for REpresentational State Transfer.
REST is an architectural style not a protocol.

*************************************************************************************************************************************************************
Advantages of RESTful webservice
Fast: RESTful Web Services are fast because there is no strict specification like SOAP. It consumes less bandwidth and resource.
Language and Platform independent: RESTful web services can be written in any programming language and executed in any platform.
Can use SOAP: RESTful web services can use SOAP web services as the implementation.
Permits different data format: RESTful web service permits different data format such as Plain Text, HTML, XML and JSON.

*************************************************************************************************************************************************************
SOAP												REST
1)	SOAP is a protocol.								REST is an architectural style.
2)	SOAP stands for Simple Object Access Protocol.					REST stands for REpresentational State Transfer.
3)	SOAP can't use REST because it is a protocol.					REST can use SOAP web services because it is a concept and can use any protocol 											like HTTP, SOAP.
4)	SOAP uses services interfaces to expose the business logic.			REST uses URI to expose business logic.
5)	JAX-WS is the java API for SOAP web services.					JAX-RS is the java API for RESTful web services.
6)	SOAP defines standards to be strictly followed.					REST does not define too much standards like SOAP.
7)	SOAP requires more bandwidth and resource than REST.				REST requires less bandwidth and resource than SOAP.
8)	SOAP defines its own security.							RESTful web services inherits security measures from the underlying transport.
9)	SOAP permits XML data format only.						REST permits different data format such as Plain text, HTML, XML, JSON etc.
10)	SOAP is less preferred than REST.						REST more preferred than SOAP.


*************************************************************************************************************************************************************
Explain SOA architecuture
Service Oriented Architecture (SOA)

Service Oriented Architecture or SOA is a design pattern. It is designed to provide services to other applications through protocol. It is a concept only and not tied to any programming language or platform.

Web services is a technology of SOA most likely.

Service
A service is well-defined, self-contained function that represents unit of functionality. A service can exchange information from another service. It is not dependent on the state of another service.

Service Connections
The figure given below illustrates the service oriented architecture. Service consumer sends service request to the service provider and service provider sends the service response to the service consumer. The service connection is understandable to both service consumer and service provider.

Service provider< ---Request---------------- Service Consumer
		 --------Response------------>


*************************************************************************************************************************************************************


What would be the message format of SOAP protocol?

Generally, all the SOAP based web services are written by using XML language which uses standard message format that is accepted across the universe. In this format, it is easy to read, identify the errors, avoids interoperability problems etc.

Here’s the sample SOAP message format.

POST /InStock HTTP/1.1
Host: localhost
Content-Type: application/soap+xml; charset=utf-8
Content-Length: 399
SOAPAction: “http://www.example.com/soap-envelope”

<?xml version=”1.0??>
<soap:Envelope xmlns:soap=”http://www.example.com/soap-envelope”>
<soap:Header>
</soap:Header>
<soap:Body>
<m:TutorialName>SoapUI</m:TutorialName>
</soap:Body>
</soap:Envelope>

*************************************************************************************************************************************************************

Q #12. What does a soap document contain?

Ans. Envelope element is the top most tag which identifies the XML document as a SOAP message. Followed by Envelope element, you see the header element that has header information. The Body element specifies the call and response information. Finally, you have a Fault element which contains errors and status information.

*************************************************************************************************************************************************************

Q #13. What is meant by Protocols and what are the major types are used in web services?

A protocol is a set of standard rules that helps to communicate the hardware devices through the software applications. There are different types of protocols used in the Internet and Intranet applications. They are

TCP which stands for Transmission Control Protocol. It has the rules to exchange the messages between two different Internet applications.

Internet Protocol uses the rules for sending and receiving the information between two different Internet addresses.

Similarly, HTTP, FTP and DHCP protocols are used the set of rules to transfer the data other than Internet applications.

*************************************************************************************************************************************************************

 What is XML?

Ans. XML (eXtensible Markup Language) is a mark-up language that is used for storing, sharing and formatting data. In general, an XML document is built by the tags.


************************************************************************************************************************************************************* 


Difference between soapui and soapui pro
1.Pro has scripting libraries(grovvy script libraries)
2.Pro supports groovy code templates
3.Data source driven test and data collection is possible in pro
4.Many assertions  are present in pro are not avaible in soapui
SoapUI can help create functional, security and load testing test suites. SoapUI Pro does all that with advanced drag and drop, data driven testing, advanced reporting and coverage analysis.


Q #16. What we can do with the help of SoapUI?

SoapUI offers us to perform automation testing which includes functional testing, load testing and data driven testing.
It also provides in build reporting tool and export test results log provision
We assert our services using various types of assertions



In a SoapUI project, the following order should be maintained.
TestSuite – This is combination of functional tests and logical blocks
Testcase – Its a group that contains several test steps for the specific aspects of the service.
Teststep – it contains the set of functional tests



Q #18. What is the basic method to automate web services in SoapUI?

Ans.

Create a project and add the WSDL file
Add test suites, Test cases and Test cases- in that order
Include custom programming/validation using by adding Groovy steps
Call external data sources if using
Add assertions if necessary
Then RUN.


Q #19. What are SoapUI assertions?

Ans. Assertions compare the parts/all of the response message to the expected outcome.



Q #20. What are the major types of assertions available in SoapUI?

Assertions are the one of the major feature in SoapUI. It offers the following types of assertions.

Simple contains
Schema compliance
Simple not contains
Soap Faults
Response SLA
XPath Match
XQuery Match
WS security status
Script Assertion
WS- Addressing Request or Response Assertion
Additionally Equals assertion is introduced in SoapUI NG Pro version.



Q #21. Explain about XPath Assertion in SoapUI

In SoapUI, XPath assertion is used for asserting the web service response value by specifying the absolute path. If the absolute path is matched with the response value, then the test case or test suite will be considered as PASS otherwise it will be notified as FAILED. We can see the results of assertion at bottom of the screen where the Assertion tab will have resultant information.


Q #25. What is Groovy script and where can it be used?

Ans. Groovy is a scripting language which internally includes all the java libraries – it helps us to customize and add custom validations to SoapUI tests


 What are the properties available in SoapUI?
In SoapUI, there are three levels of properties available. They are,
Custom Properties or Project Level Properties:
These properties are added several times based on our needs and they can be utilized at any test suites, test cases or test steps that belongs to the current project.


Test Suite Level Properties:
Tester can add his own properties with relevant information under the test suites. These properties are available under the corresponding test suite only


Test case Level Properties: If the tester needs to store their test data within the test cases they can create their own properties inside the test case. So these properties can be accessed within the respective test cases.









My project name is SITA -DCS
Project size is 200+ members.
we are following agile methodology. We have 11 sprint teams working for the project.
Sprint cycle is 1 month duration.
Project belongs to airline domain. We provide software to thw airline industry which is used by the agents at the airport or subscriber for managing flight and passenger journey.
Project maining has 4 modules 
Seats --- we create pysical picture of seat map for the aircraft lilke defining how many cabin should be present , how many decks , whta type of seat characteristic it can have . All such stuff will be managed in seats module
Flights --- we schedule a flight and manages flight life cycle activity here
Checkin --- manages passenger checkin operations like accept, board, deplane , offload upadting passenger details etc
travel --- manages baggage details of the passengers 


About Webservice Automation framework 
1.We are using hybrid framework for our automation
we use modular driven and data driven framework.
We achieve Modular driver by having mudules or methods for generating data and calling those methods in our groovy script,which generates dynamic data required for our request.

Data driven is we have used property file request in our suite that will have data which are constant throuhgt our script.
And in txt file we have data set which we will load in soapui under global property which will common property consumed by the service.
We run our script using batch file , report will be generated in PDF format with passed , failed test case count . alos passed and failed tes case details.

We run our script through batch file , where we have commands to generate report. Report will be generated in PDF format as well as in HTML foramat with pass and failed test case details.

We have written VB script to generate report in html format.

batch file is located in bin folder of soapui tool as loadTestRunner. There we modify to specify the tool (soapUI tool version)which we are using and project name. with some command lines to generate report.

steps
1.First we Create soap Project 
2.Add wsdl /import wsdl files
3.Add test suite  
4.Add test case 
5.Add test steps
For each of the test steps we add test request step 
For Property Transfer from one step to other we add property transfer step
Groovy step is included for dynamic data generation as well as validating reponse.
JDBC step is included to validate response content against data base
6.In the test request we add working request and parameterise the data fields
7.endpoint and wsa adressing will be parameterized
8.Add appropriate assertions to the test request
9.Run test suite using batch file 
10 verify result in result folder which gets created in PDF format.

Web Services Addressing (WS-Addressing) is a specification of transport-neutral mechanism that allows web services to communicate addressing information.

Testing activities in your project.

When the sprint is started we get story/scope for the current sprint.
we analyse the scope/story 
requirement analysis and clarication will be done within 4 to 5 days.
Then we identify scenarios and write test cases based on the scenarios we identied.
Then it will be sent to the BA for review . 
We identify scenarios for test scripts automation.
We create scripts and keep it ready before we get build.
Once we recieve build we do smoke testing.
Once smoke test is done ,parallely we will do script execution and manual testing.
we raise defects identified in manual and automation testing 
we will be executing test cases in QC and defect tracking is also done in QC.
During final release we upload our test scripts to the SVN which will be shared with the clients






Distinct

SELECT DISTINCT column_name,column_name
FROM table_name;


INSERT 
The INSERT INTO statement is used to insert new records in a table.
INSERT INTO Customers (CustomerName, Address)
VALUES ('Cardinal','Skagen 21');


UPDATE 
The UPDATE statement is used to update records in a table.
UPDATE Customers
SET ContactName='Alfred Schmidt', City='Hamburg'
WHERE CustomerName='Alfreds Futterkiste';


DELETE 
The DELETE statement is used to delete rows in a table.
DELETE FROM table_name
WHERE some_column=some_value;


TOP
SELECT TOP 2 * FROM Customers;
The SELECT TOP clause is used to specify the number of records to return.

select EMployeeName from (select EmployeeName,DenseRank Over(OrderBy salary) As rank from table) where rank=1;

LIKE
The LIKE operator is used to search for a specified pattern in a column.

The following SQL statement selects all customers with a City starting with the letter "s":
SELECT * FROM Customers
WHERE City LIKE 's%';


The following SQL statement selects all customers with a Country containing the pattern "land":

SELECT * FROM Customers
WHERE Country LIKE '%land%';


WILD CARD

In SQL, wildcard characters are used with the SQL LIKE operator.


The following SQL statement selects all customers with a City starting with "ber":

Example
SELECT * FROM Customers
WHERE City LIKE 'ber%';


Using the SQL [charlist] Wildcard
The following SQL statement selects all customers with a City starting with "b", "s", or "p":

Example
SELECT * FROM Customers
WHERE City LIKE '[bsp]%';


The IN Operator
The IN operator allows you to specify multiple values in a WHERE clause.

SELECT * FROM Customers
WHERE City IN ('Paris','London');


The SQL BETWEEN Operator
The BETWEEN operator selects values within a range. The values can be numbers, text, or dates.

SELECT * FROM Products
WHERE Price NOT BETWEEN 10 AND 20;


SQL Aliases
SQL aliases are used to give a database table, or a column in a table, a temporary name.

SELECT CustomerName AS Customer, ContactName AS [Contact Person]
FROM Customers;


JOIN
An SQL JOIN clause is used to combine rows from two or more tables, based on a common field between them.


INNER JOIN: Returns all rows when there is at least one match in BOTH tables
LEFT JOIN: Return all rows from the left table, and the matched rows from the right table
RIGHT JOIN: Return all rows from the right table, and the matched rows from the left table
FULL JOIN: Return all rows when there is a match in ONE of the tables


SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate
FROM Orders
INNER JOIN Customers
ON Orders.CustomerID=Customers.CustomerID;

INNER JOIN

SELECT column_name(s)
FROM table1
INNER JOIN table2
ON table1.column_name=table2.column_name;


LEFT JOIN

SELECT column_name(s)
FROM table1
LEFT JOIN table2
ON table1.column_name=table2.column_name;


SELECT column_name(s)
FROM table1
FULL OUTER JOIN table2
ON table1.column_name=table2.column_name;



The SQL CREATE DATABASE Statement
The CREATE DATABASE statement is used to create a database.

SQL CREATE DATABASE Syntax
CREATE DATABASE dbname;


The SQL CREATE TABLE Statement
The CREATE TABLE statement is used to create a table in a database.

Tables are organized into rows and columns; and each table must have a name.

SQL CREATE TABLE Syntax
CREATE TABLE table_name
(column_name1 data_type(size),column_name2 data_type(size),column_name3 data_type(size),....);

CREATE TABLE Persons
(PersonID int,LastName varchar(255),FirstName varchar(255),Address varchar(255),City varchar(255));



SQL Constraints
SQL constraints are used to specify rules for the data in a table.

 If there is any violation between the constraint and the data action, the action is aborted by the constraint.

 In SQL, we have the following constraints:

NOT NULL - Indicates that a column cannot store NULL value
UNIQUE - Ensures that each row for a column must have a unique value
PRIMARY KEY - A combination of a NOT NULL and UNIQUE. Ensures that a column (or combination of two or more columns) have a unique identity which helps to find a particular record in a table more easily and quickly
FOREIGN KEY - Ensure the referential integrity of the data in one table to match values in another table
CHECK - Ensures that the value in a column meets a specific condition
DEFAULT - Specifies a default value for a column



NOT NULL

CREATE TABLE PersonsNotNull
(P_Id int NOT NULL,LastName varchar(255) NOT NULL,FirstName varchar(255),Address varchar(255),City varchar(255))


UNIQUE

CREATE TABLE Persons
(P_Id int NOT NULL UNIQUE,LastName varchar(255) NOT NULL,FirstName varchar(255),Address varchar(255),City varchar(255))


PRIMARY KEY
CREATE TABLE Persons
(P_Id int NOT NULL PRIMARY KEY,LastName varchar(255) NOT NULL,FirstName varchar(255),Address varchar(255),City varchar(255))


FOREIGN KEY REFERENCES

CREATE TABLE Orders
(O_Id int NOT NULL PRIMARY KEY,OrderNo int NOT NULL,P_Id int FOREIGN KEY REFERENCES Persons(P_Id))


CHECK
The CHECK constraint is used to limit the value range that can be placed in a column.
CREATE TABLE Persons
(P_Id int NOT NULL CHECK (P_Id>0),LastName varchar(255) NOT NULL,FirstName varchar(255),Address varchar(255),City varchar(255))

SQL DEFAULT Constraint
The DEFAULT constraint is used to insert a default value into a column.

CREATE TABLE Orders
(
O_Id int NOT NULL,
OrderNo int NOT NULL,
P_Id int,
OrderDate date DEFAULT GETDATE()
)


ALTER TABLE Persons
ALTER COLUMN City SET DEFAULT 'SANDNES'

ALTER TABLE Persons
ALTER COLUMN City DROP DEFAULT


The DROP TABLE Statement
The DROP TABLE statement is used to delete a table.

DROP TABLE table_name


The DROP DATABASE Statement
The DROP DATABASE statement is used to delete a database.

DROP DATABASE database_name

The TRUNCATE TABLE Statement
What if we only want to delete the data inside the table, and not the table itself?

Then, use the TRUNCATE TABLE statement:

TRUNCATE TABLE table_name


The ALTER TABLE Statement
The ALTER TABLE statement is used to add, delete, or modify columns in an existing table.

ALTER TABLE Persons ADD DateOfBirth date

ALTER TABLE Persons DROP DateOfBirth date

ALTER TABLE Persons ALTER DateOfBirth date


AUTO_INCREMENT



CREATE TABLE Persons
(
ID int NOT NULL AUTO_INCREMENT,
LastName varchar(255) NOT NULL,
FirstName varchar(255),
Address varchar(255),
City varchar(255),
PRIMARY KEY (ID)
)


SELECT Employees.LastName, COUNT(Orders.OrderID) AS NumberOfOrders FROM (Orders
INNER JOIN Employees
ON Orders.EmployeeID=Employees.EmployeeID)
GROUP BY LastName
HAVING COUNT(Orders.OrderID) > 10;





Working with TestSteps

TestSteps are the core building blocks of functional tests in soapUI; each TestStep performs some step for validating the functionality to be tested. TestSteps are by default executed sequentially, but several possibilities exist for branching, looping and even calling other TestCases, making complex testing possible when required. 

different types of TestSteps available 

Sampler TestSteps
These are the main TestSteps for validating the functionality of your services. They are primarily used to either send or receive messages, which can then be validate via an standard assertion mechanism (described in Validating Messages). The actual content of messages that have been received by a sampler can further be used in several other ways:
As source for property-transfers, allowing you transfer part(s) of a message to some other message (for example a session-id in a response to a following request) or property.
For advanced processing and validation in a following script TestStep
As the source for a DataSource TestStep using the XML DataSource, allowing you to use the result of one request to drive the following TestSteps
etc.

Currently the following sampler TestSteps are available:

SOAP Request - sends a SOAP Request over either HTTP, HTTPS or JMS and receives the response if there is one. SOAP Request TestSteps are tied to a corresponding WSDL Operation and its WSDL Interface added to a project when importing its WSDL.

REST Request - sends a REST request over HTTP, HTTPS or JMS and receives the response if there is one. REST Request TestSteps are tied to a corresponding REST Service, Resource and Method in the containing soapUI Project.

JDBC Request - sends a database query or stored procedure call to the configured database and returns the result as an XML string
AMF Request - sends an AMF request over HTTP or HTTPS and returns the result as an XML String

HTTP Request - sends an arbitrary HTTP Request over HTTP, HTTPS or JMS and returns the results as an XML String

MockResponse - listens and waits for an HTTP or HTTPS request and returns a configured response; used for testing of callbacks and asynchronous processes.

You can combine as many samplers as you want in a TestCase and easily share data between them, for example you might log on to a service using a standard HTTP Request, then use the retrieved HTTP Session in following SOAP Requests and the finally validate the resulting content of a database with the JDBC Teststep.




Property-related TestSteps
Property TestSteps manage properties that are commonly used to parameterize the logic and execution of a TestCase. The TestSteps are:


Properties - allows you to define an arbitrary number of properties that can optionally be read from or written to a file. These can then be used for parameterization of requests, assertions, etc.

Property Transfer - allows you to transfer or extract property values between TestSteps, for example you can extract a value from a response message and write it to a DataSink TestStep (see below) for external storage.

DataGen (SoapUI Pro) - allows you to create dynamic properties for creating counters, random property values, etc.


Data-related TestSteps
SoapUI Pro adds a number of TestSteps used for interacting with external DataSources, both for reading and writing. These are:

DataSource - allows you to read property-values from a variety of external sources (Databases, Excel files, directories, etc), which can then for example be used to populate requests (via a property-transfer), validate responses or serve as input for nested DataSources.

DataSource Loop - pairs up with the DataSource TestStep to allow for iterating over a sequence of TestSteps that should be executed for each row of values available in the DataSource. In soapUI this forms the basis of data-driven testing.

DataSink - allows you to write property-values to a number of external storages (Databases, Excel, etc) for later analysis or processing.


Execution Flow TestSteps

Although the initial flow of TestStep execution in a TestCase is sequential, there are a number of TestSteps that allow you to do branching, looping, etc:

Conditional Goto - Checks for specific values in the most previously received message in the TestCase and jumps to a correspondingly configured target TestStep.

Delay - Pauses the execution of the TestCase for the configured number of milliseconds.

Run TestCase - transfers execution of the TestCase to the specified target TestCase, setting properties on this TestCase as configured. This allows for powerful modularization of TestCases, which can be useful when for example the same sequence of TestSteps should be run in the beginning of a number of TestCases.

DataSource Loop - as mentioned above, for iterating over a sequence of TestSteps for each row in the configured DataSource.



Miscellanous
There is one more TestStep that does anything you want it to;

Script TestStep - holds an arbitrary script (written in either Groovy or JavaScript) that can do almost anything that might be necessary. Common usages are:
Complex validations of messages not possible with default assertion mechanisms.

Complex looping or branching.
Modification of the underlying TestCase (for example dynamic generation of TestSteps from a Database) for advanced DataDriven scenarios.
Integration with external systems for reading or writing data.
Triggering of external actions or processes, for example sending email or starting other programs.
Interacting with the user (dialogs, prompts, etc) for getting input or controlling execution.
etc.



Saving all TestStep's results into files

To save the result (request data, response data, response time, etc.) of every executed TestStep in a Project, create a Project EventHandler (Project Window > Events tab > Add new EventHandler) of type TestRunListener.afterStep with the following content:

filePath = 'c:/users/henrik/soapUI-results/'
fos = new FileOutputStream( filePath + testStepResult.testStep.label + '.txt', true )
pw = new PrintWriter( fos )
testStepResult.writeTo( pw )
pw.close()
fos.close()



What is Groovy?
It is an object oriented programming language for the java platform.

Connection to DB

import groovy.sql.sql;
//establish JDBC connection to DB
public static final String username ="USER"
public static Final String Pwd= "USER"
public static final String Url="jdbc:oracle:thin:UESR/USER@hostname:POrt:ServiceName"
public static final  String driver="oracle:jdbc:driver:OracleDriver"
def Con=Sql.newInstance("Url","username","pwd","driver")
def response=Con.rows("Select * from db")


def utils =new  com.eviware.soapui.support.GroovyUtilsPro(context);

context.dbConnection= utils.getJdbcConnection(“StoreageDB”)

context.statement= context.dbConnection.createStatement()

def query = “select * from table_name”

def rs = context.statement.executeQuery(query)

while(rs.next()){

// do your program here

}

rs.close()

context.statement.close()

context.statement.close()


How to get test instance test case name
def testCaseName=testRunner.testCase.name

How to get test instance test step name
def testStepName=testRunner.getTestCase().getTestSuite().getTestCaseByName(testCaseName).getTestStepByname("teststepName")


How to Set proprty value to test steps using Groovy
def propertystep=testRunner.getTestCase().getTestSuite().getTestCaseByName(testCaseName).getTestStepByName("teststepName")

propertystep.setPropertyValue("Field","value")



How to get property value from test steps using Groovy
context.expand( '${StaticData#AgeCategoryType}' )
testRunner.testCase.testSteps['Properties step'].getPropertyValue("SomeProp")


How to Set property value from test steps using Groovy
context.expand( '${StaticData#AgeCategoryType}' )
testRunner.testCase.testSteps['Properties step'].setPropertyValue("ProprtyName","Value")


generate Random number using groovy


Random rnd = new Random(System.currentTimeMillis());
for (int index = 0; index < 100; index++) {
    System.out.println(rnd.nextInt(900) + 100);
}



// How to Get the Response in SOAPUI using groovy Script

def response = context.expand( '${Test Request: login#Response}' )


// How to Update a Property to update a Request in SOAPUI using groovy Script

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 

// get XmlHolder for request message 
def holder = groovyUtils.getXmlHolder( "login#Request" )

// change password using XPath

holder["//username"] = "test"

// write updated request back to teststep

holder.updateProperty()

context.requestContent = holder.xml

Call or run testcase from different testsuite
def tc= testRunner.testCase.testSuite.project.testSuites("IDM_Login").testCases("Login")
def runner=tc.run(null,false)

run(null,false) is used to run test  synchronously


Request means that you look at the XML request that will be sent by SoapUI.
You can replace Request with Response and get the result of the API call.
context.expend allows you to get the value of the request or the response as well as specific XPaths within them.


Explain how Groovy string is expressed?
Groovy string is referred as Gstring.

It is surrounded by double quotes, for regular strings it uses single quotes
It may contain Groovy Expressions noted in ${}
Square bracket syntax may be applied like charAt(i)


Explain what is ExpandoMetaClass in Groovy?
ExpandoMetaClass is used to add methods, properties, static methods and constructors. Expandoclass does not inherited by default; you have to call ExpandoMetaClass.enableGlobally()

Explain how Scripts are run in Groovy?
Groovy supports plain script; it does not require a class declaration. At the front of the script, imports are supported at the same way that it can be at the front of a class. In Groovy, you have to use word def to declare a function outside of a class.

Explain GroovyDoc comment?

Like multiline comments, GroovyDoc comments are multiline but it starts with a /** and end with */. Those comments are related with

Type definitions (classes, interfaces, enums, annotations)
Fields and properties definitions
Methods definitions


Explain what is Groovysh?
Groovysh is a command line application that enables an easy access to evaluate Groovy expressions, define classes and run experiments.


Mention what is the license for Groovy?
Groovy depend at runtime on the ASM library as well as Java 1.4 and the Groovy jar.


Read header values from Groovy Script test step.			
def header = testRunner.testCase.testSteps["add"].httpRequest.getRequestHeaders()
 header.each
 {
  key,val ->
  log.info "Key = "+key+" ; value="+val
 }

set the request header values using groovy

 def headers = new StringToStringMap()
 headers.put("name","value");	
testRunner.testCase.testSteps["add"].getHttpRequest().setRequestHeaders(headers)
 
Delete property using Groovy Script    
context.testCase.removeProperty( "param1" );
context.testCase.testSuite.removeProperty( "param1" );
context.testCase.testSuite.project.removeProperty( "param1" );

// How to  Create a New File and write the response in SOAPUI using groovy Script

new File( "C:/Users/eviware/" + currentUser + "_response.txt" ).write( response )

// How to get Global  property  in SOAPUI using groovy Script

def globalProperty = com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "MyProp" )


How to Get testCase property from Script Assertion in SOAPUI using groovy Script

def testCaseProperty = messageExchange.modelItem.testStep.testCase.getPropertyValue( "MyProp" ) 


//Get the name of the step been executed:
context.getCurrentStep().getLabel()


 Access SOAP Operations / REST Resources
import com.eviware.soapui.impl.wsdl.WsdlInterface
myInterface = (WsdlInterface) testRunner.testCase.testSuite.project.getInterfaceByName("SampleServiceSoapBinding")
myOperation = myInterface.getOperationByName("login")
myRequest = myOperation.getRequestByName("Request 1")


//Run a TestCase located in another project

def prj = testRunner.testCase.testSuite.project.workspace.getProjectByName("ProjectName")
tCase = prj.testSuites['TestSuiteName'].testCases['TestCaseName']
tStep = tCase.getTestStepByName("TestStepName")
def runner = tStep.run(testRunner, context)
log.info ("runner status ....... : " + runner.hasResponse())




Difference between Groovy and Java



Groovy is a JVM based dynamic language that runs on the Java Compiler. Groovy contains Java like syntax and design pattern most of the Java code is also valid in groovy but not all, rather groovy is much more dynamic and a new version of Java in a better and productive manner.




1 - In Java we have 'java.lang' package imported by default, but now in groovy we have some others general purpose packages and classes that are imported by default some of them are :

    groovy.lang.*
    groovy.util.*
    java.io.*
    java.net.*
    java.util.*
    java.lang.*
    java.math.BigDecimal
    java.math.BigInteger

That means using groovy we do not need to import these packages explicitly, this feature gives groovy developers a quick development start.

2 - In java we uses '==' to compare primitive types and '.equals()' to compare two objects, but in groovy we can use '==' to compare both     primitive and object types. Although in groovy '.equals()' also works for comparing object.

3 - In groovy semicolons are optional, use them only if you like or if you want to write more than one statement in one line.

4 - In groovy 'in' is a keyword and we can not use it as a variable name.

5 - When declaring an array we can not write 

    int arr[] = {1,2,3,4...}

    rather we need to right it as

    int arr[] = [1,2,3,4...]

6 - As in most of the tasks we use a for loop, in groovy declaring for loop is much easier, we can declare a for loop as

    for (i in 0..size-1) {}
        or
    for (i in 0..<size) {}
        or
    size.times {}

    Although for(int i;i<-size;i++){} is also valid in groovy.

7 - In java it is necessary to return a value if the method is not a void one, but in groovy return statement is fully optional. Write a return statement only if you want to return something from a method.

    int addNumbers(){
        sum = num1+num2
    }
    
is perfectly valid in groovy and does not gives a syntax error for return statement.

8 - In groovy all methods and classes are public by default, you dont need to add a public keyword to make them public.

9 - In groovy there is no difference between a 'checked' or a 'unchecked' exception, so if you are writing 'throws' keyword in your code, this is not going to be compiled by groovy compiler.

10 - In groovy you do not need to specify a primitive type like int, float... or a class type to create an object, All you need is to put a keyword 'def' and groovy compiler is smart enough to detect type of value or reference you are assigning to a variable.

def a = 10
def f = 3.4
def str = "Hello World"
these statements are completely valid in groovy, although we can use java like declaration as well

int a =10
float f = 3.4
String str = "Hello World" ,these are also acceptable.

11 - While declaring an parameterised method in groovy, we do not need to specify types for parameters.

    def getValues(number1, string1,....)

this thing is perfectly right in groovy, although you can do this as

    def getValues(def number1,def string1,....)

or you can do this in jva style as well like

    def getValues(int number1,String string1,....)

12 - In groovy, while calling a parameterised method its not necessary to pass parameters as:

If we have a method like 

    def getValues(int number1,String string1,....)

Than it can be called as obj.getValues() , you will not get any error for not providing parameters values. But if parameters are passed than they must be matching to required type.

13 - In groovy inner classes are not supported, groovy provides closure implementation that covers need of inner classes.

There is much more to add here, but the point mentioned above will give you a quick and better understanding about, what is groovy ?, difference between java and groovy and other things. Let me finish this discussion by saying if you are a java guy or you have coded in java already than its very easy to start with groovy. At least give a chance to groovy and feel the difference.




























http://www.techiethoughts.com/technical-posts/soap-ui/soap-ui-groovy-useful-commands.html
// How to Iterate nodes in SOAPUI using groovy Script

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

def holder = groovyUtils.getXmlHolder( "Request 1#Response" )

for( item in holder.getNodeValues( "//item" ))

log.info "Item : [$item]"

// How to Register the Jdbc driver in SOAPUI using groovy Script

com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "com.mysql.jdbc.Driver" )



// How to Access Interface, Operation and Request in SOAPUI using groovy Script

import com.eviware.soapui.impl.wsdl.WsdlInterface

myInterface = (WsdlInterface) testRunner.testCase.testSuite.project.getInterfaceByName("SampleServiceSoapBinding")

myOperation = myInterface.getOperationByName("login")

myRequest = myOperation.getRequestByName("Request 1")



// How to Log the result messages of all TestSteps in all failing TestCases in SOAPUI using groovy Script

for ( testCaseResult in runner.results )

{

testCaseName = testCaseResult.getTestCase().name

log.info testCaseName

if ( testCaseResult.getStatus().toString() == 'FAILED' )

{

log.info "$testCaseName has failed"

for ( testStepResult in testCaseResult.getResults() )

{

testStepResult.messages.each() { msg -> log.info msg }

}

}

}

// How to Create Project Event Handler to Save all TestStep's results into files in SOAPUI using groovy Script

Create a Project EventHandler (Project Window > Events tab > Add new EventHandler) of type TestRunListener.afterStep with the following content:

filePath = 'c:/users/henrik/soapUI-results/'

 

fos = new FileOutputStream( filePath + testStepResult.testStep.label + '.txt', true )

pw = new PrintWriter( fos )

testStepResult.writeTo( pw )

pw.close()

fos.close()

A file output stream is an output stream for writing data to a File 
FileOutputStream is a bytes stream class that's used to handle raw binary data.To write the data to file, you have to convert the data into bytes and save it to file. 
public class PrintWriter; extends Writer. Print formatted representations of objects to a text-output stream.
 new FileOutputStream( file, append )
if append is true , byte will be appended at end 



// How to Loop a sequence of TestSteps many times in SOAPUI using groovy Script

A simple loop is easiest achieved by placing a Groovy Script TestStep after the last TestStep in the loop with the following content:

if( context.loopIndex == null )

context.loopIndex = 0

if( ++context.loopIndex < 10 )

testRunner.gotoStepByName( "Name of first TestStep in loop" )




// How to Update a Property to update a Request in SOAPUI using groovy Script

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 



// get XmlHolder for request message def

holder = groovyUtils.getXmlHolder( "login#Request" )

// change password using XPath

holder["//username"] = "test"


// write updated request back to teststep

holder.updateProperty()



// How to Get the Response Content and Change the content in SOAPUI using groovy Script

if( request.response == null )

return

// get response content

def content = context.httpResponse.responseContent

// manipulate content

content = content.replaceAll( "555", "444" )

// write it back

context.httpResponse.responseContent = content

 

Reference: http://www.soapui.org/Scripting-Properties/tips-a-tricks.htm

// How to Get the handle for current Testcase/TestSuite/Project using context/testRunner in SOAPUI using groovy Script

            Below command will be useful to get the handle of current Test case or Test suite.

Context.testCase

testRunner.testCase

def project = context.testCase.testSuite.project

def project = testRunner.testCase.testSuite.project

def myTestSuite = project.getTestSuiteAt(IndexNumber)

def myTestSuite = project.getTestSuiteByName(“Name of the TestSuite”)

 

def myTestCase = myTestSuite.getTestCaseAt(IndexNumber)

def myTestCase = myTestSuite.getTestCaseByName(“Name of the TestCase”)

 

 def myTestStep = myTestCase.getTestStepAt(IndexNumber)

 def myTestStep = myTestCase.getTestStepByName(“Name of the TestStep”)

 

// How to Get Time taken to process the Request/Response in SOAPUI using groovy Script

messageExchange.getTimeTaken()   

// How to Get the End Point in SOAPUI using groovy Script

messageExchange.getEndpoint()

// How to Run the SOAPUI Request in SOAPUI using groovy Script

testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);

testStepContext = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext(testStep);

testStep.run(testRunner, testStepContext);

 

// How to  get theRawRequest & RawResponse in SOAPUI using groovy Script

 messageExchange.getRequestContentAsXml.toString()

 messageExchange.getResponseContentAsXml.toString()

// How to use closures in SOAPUI using groovy Script

closures are similar to iterators. We mention an array or map of values, and write a closure to iterate over it.

To access the current value in the loop ‘it’ is to be used (but not ${it})

def  sampleArray = [“dev”, “integration”, “qa”, “prod”];

 

def a = 1;

sampleArray.each() {

log.info(a + ‘:’ + it);

a++;

}

def sampleMap = [ "Su" : "Sunday", "Mo" : "Monday", "Tu" : "Tuesday",

"We" : "Wednesday", "Th" : "Thursday", "Fr" : "Friday",

"Sa" : "Saturday" ];

then use

stringMap.each() {

log.info(it);

log.info( it.key + ‘:’ + it.value );

}

// How to Access Request/Response using Message Exchange in SOAPUI using groovy Script

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

def requsetHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )

def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )

 

// How to load property files from bin directory in SOAPUI using groovy Script

And this master property file could be placed in %SOAP_UI_HOME%\bin directory of the SOAP UI and can be easily accessed across the Suites

props = new java.util.Properties();

props.load( new FileInputStream(“testProps.properties”) );

and the property values can be obtained by:

props.getProperty(“QA_PROP_LOCATION”);

props.getProperty(“DEV_PROP_LOCATION”);

 

// How to create sql conection in SOAPUI using groovy Script

def  sql = Sql.newInstance(dbPath, dbUserName, dbPassword, dbDriverName);

res = sql.execute( “SELECT * FROM TABLE1 WHERE COL1=’123'” );

// How to Get the Project Path in SOAPUI using groovy Script

def groovyUtils=new  com.eviware.soapui.support.GroovyUtils(context)

def projectPath = groovyUtils.projectPath

// How to Loop the Response Nodes in SOAPUI using groovy Script

If the desired content is namespace qualified (very likely for SOAP responses), you need to define the namespace first.

holder.namespaces["ns"] = "http://acme.com/mynamspace"

loop item nodes in response message

for( item in holder.getNodeValues( "//ns:item" ))

log.info "Item : [$item]"

// How to Count nodes in SOAPUI using groovy Script

def numberOfLinksInParagraphs = holder["count(//html/body/p/a)"]

// How to Get Nodes in SOAPUI using groovy Script

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

def holder = groovyUtils.getXmlHolder("Properties#response")

log.info holder.getNodeValue("//id")

for( node in holder['//id'] )

log.info node

 

//How to Add Assertions to test steps in SOAPUI using groovy Script

TSName = "Test Case Name"

StepName = "Test Step Name"

project.getTestSuiteList().each {

                if(it.name == TSName)

                {

TS = it.name

  it.getTestCaseList().each {

TC =it.name

def asserting = project.getTestSuiteByName(TS).getTestCaseByName(TC).getTestStepByName(StepName).getAssertionByName("XPath Match")

if (asserting instanceof com.eviware.soapui.impl.wsdl.teststeps.assertions.basic.XPathContainsAssertion)

{

project.getTestSuiteByName(TS).getTestCaseByName(TC)getTestStepByName(StepName).removeAssertion(asserting)

}

def assertion = project.getTestSuiteByName(TS).getTestCaseByName(TC)getTestStepByName(StepName).addAssertion("XPath Match")

assertion.path = "declare namespace here”

assertion.expectedContent = "200" 

              

  }

}

 

}

 

// How  to assert a node value using holder  in SOAPUI using groovy Script

def holder = new XmlHolder( messageExchange.responseContentAsXml )

assert holder["//ns1:RequestId"] != null

def node = holder.getDomNode("//ns1:RequestId”)

// How  to assert a request and response time  value  in SOAPUI using groovy Script

assert messageExchange.timeTaken < 400

 



Xpath Assertion using Groovy Script
  def holder = new XmlHolder( s ) 
log.info(holder)
def Flight = holder.getNodeValue('//txme:TXM_Envelope/txme:TXM_Body/txme:TXM_Payload/@FlightNumber')
del flt=context.expand($(staticData#FlightNO))
assert flight.equals(flt)
assert flt.contains('FlightNumber=\'+FlightNo+'\")


 Methods
expand(property)  				returns value of property, if there are property expansions they are expanded. 
extractErrorLineNumber(error)			 returns line number where error occurred
getProjectPath() 				returns path to project file           
getXml(node)					returns xml as a string from passed node
getXmlHolder(xmlPropertyOrString) 		returns XmlHolder as a result of parsing passed Xml string           
registerJdbcDriver(driver) 			register JDBC driver for use in Groovy script
setPropertyValue(testStep, property, value) 	sets a value for given test step property


Few Examples

Assume you have response:

<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sim="http://www.example.org/SimpleSocialSOA/">
   <soapenv:Header/>
   <soapenv:Body>
      <sim:LoginResponse>
         <id>4456643453</id>
      </sim:LoginResponse>
   </soapenv:Body>
</soapenv:Envelope> 
For this examples I added a Properties Test Step  with property response.

1. Parsing XML

According to that to get id from response you can do:

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder("Properties#response")
log.info holder.getNodeValue("//id")
log.info holder['//id']

notice two ways to get node value with getNodeValue method and with [] operator. Difference is that getNodeValue will return first value that can be found with set XPath, while [] operator returns a array of values.
If you assume that response is like:

<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sim="http://www.example.org/SimpleSocialSOA/">
   <soapenv:Header/>
   <soapenv:Body>
      <sim:LoginResponse>
         <id>4456643453</id>
         <id>4456643452</id>
         <id>4456643451</id>
         <id>4456643450</id>
      </sim:LoginResponse>
   </soapenv:Body>
</soapenv:Envelope>
Than this script:
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder("Properties#response")
log.info holder.getNodeValue("//id")
for( node in holder['//id'] )
 log.info node
will produce result like this:
2. Updating XML

Response as above and we do:

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder("Properties#response")
holder.setNodeValue("//id", "aaaaa")
for( node in holder['//id'] )
 log.info node
def holder2 = groovyUtils.getXmlHolder("Properties#response")
holder2.getNodeValue("//id")
for( node in holder2['//id'] )
 log.info node





if there are several nodes as result of XPath expression only first's node value will be changed with setNodeValue
setting node value is not enough to update property value, we forgot to use updateProperty method
Correct Groovy script would be:


def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder("Properties#response")
holder.setNodeValue("//id", "aaaaa")
for( node in holder['//id'] )
 log.info node
holder.updateProperty()
def holder2 = groovyUtils.getXmlHolder("Properties#response")
holder2.getNodeValue("//id")
for( node in holder2['//id'] )
 log.info node

Instead of using:
holder.setNodeValue("//id", "aaaaa")
you can use also:
holder["//id"] = "aaaaa"
And if XmlNode is created from property as in example above use updateProperty method to apply your changes to property or use GroovyUtils.setPropertyValue method. 


Read data from Excel


public void readExcel() throws BiffException, IOException {
		String FilePath = "D:\\sampledoc.xls";
		FileInputStream fs = new FileInputStream(FilePath);
		Workbook wb = Workbook.getWorkbook(fs);

		// TO get the access to the sheet
		Sheet sh = wb.getSheet("Sheet1");

		// To get the number of rows present in sheet
		int totalNoOfRows = sh.getRows();

		// To get the number of columns present in sheet
		int totalNoOfCols = sh.getColumns();

		for (int row = 0; row < totalNoOfRows; row++) {

			for (int col = 0; col < totalNoOfCols; col++) {
				System.out.print(sh.getCell(col, row).getContents() + "\t");
			}
			System.out.println();
		}
	}

	public static void main(String args[]) throws BiffException, IOException {
		ReadExcelFile DT = new ReadExcelFile();
		DT.readExcel();
	}



CellType type = cell.getType();
                    if (type == CellType.LABEL) {
                        System.out.println("I got a label "
                                + cell.getContents());
                    }

                    if (type == CellType.NUMBER) {
                        System.out.println("I got a number "
                                + cell.getContents());
                    }



TestSuiteCOntroller - read data from excel and run in soapui

def GroovyUtils=com.eviware.soapui.support.GroovyUtils(context)
ProjectPath=GroovyUtils.projectPath
def testDatapath=projectPath+"\\testSuiteCOntroller.xls"
def testdatapath1=testDataPath.replace("\\","\\\\")
startIndex=context.expand(${#project#startIndex}).toInteger()
EndIndex=context.expand(${#project#EndIndex}).toInteger()
Workbook wb=Workbook.getWorkbook(new file("${testDataPath1}"))
Sheet sheet=wb.getSheet("testSuiteCOntroller")

rowCount=sheet.getRows()
for(i in startIndex..endIndex-1){
	Cell testSuiteName=sheet.getCell(0,i)
	String testSuiteNameInCell=testSuiteName.getContents()
	if(testSuiteNameInCell !=null && testSuiteNameInCell.length !=0){
		cell flag=sheet.getcell(1,i)
		string flagInCell=flag.getContents()
		
		if(flagInCell.toUpperCase()=='Y'){
		
		testSuites=testSuiteDirectory.listFiles()
		for(currentFile in testSuites){
			if(currentFile.exists()){
			if(currentFile.name.endswith('.xml')
			{
			
			if(currentFile.name==testSuiteNameInCell+".xml"){
			testSuitePath=new File("${currentFile}")
			project.importtestSuite(testSuitePath)
			for( TestSuite testsuite:project.getTestSuiteList){
			runtestSuite=testSuite.getName()
			def tc=testRunnner.testCase.testsuite.project.testSuites("${runtestSuite}")
			
			}
			
			}
			project.removeTestSuite(tc)
			
			
			project.remove
			
			
			}
			
			}
		
		}
		
		
		}
	
	}

}

XSD

XSD (XML Schema Definition) is a World Wide Web Consortium (W3C) recommendation that specifies how to formally describe the elements in an Extensible Markup Language (XML) document.

An XML Schema describes the structure of an XML document. The XML Schema language is also referred to as XML Schema Definition (XSD).

The XML Schema definition language (XSD) enables you to define the structure and data types for XML documents. An XML Schema defines the elements, attributes, and data types that conform to the World Wide Web Consortium (W3C) XML Schema 

XML
Used for storing sharing an formating data

Webservice
Web services are web components that transfer the data between client and application. 
It is used to commnicate with the web aplliaction through xml

WSDL
WSDL is an XML document that describes a web service. It shows which operations are available and how data should be structured to send to those operations.

WSDL documents have an associated XSD that show what is valid to put in a WSDL document.


Webservice description language
It uses xml language to define service layer document
It consist of
1.origin of webservice
2.header information
3.Port type
4.Input and output messages


components of webservice 
1.WSDL
2.SOAP
3.UDDI - It is a directory or global repository where all webservice can be found
4.RDF
5.XML


Elements of WSDL
<Types> -- Defines dat type used by web service
<Message> - Defines Data element for each operation
<port type> --- Describes the operation that can be performed and the messages involved
<binding> -- Defines the protocol and data format for each port type




Types of assertion

Contains
Not Contains
Schema Compliance
Soap fault 
Not soap fault
xpath match
Xquery match
Invalid HTTP statuc code
Valid HTTP status code

Data source in soapui
1.Excel file 
2.CSV files

Difference between soapui and soapui pro
1.Pro has scripting libraries(grovvy script libraries)
2.Pro supports groovy code templates
3.Data source driven test and data collection is possible in pro
4.Many assertions  are present in pro are not avaible in soapui



What is soap
Simple object access protocol that uses xml to interact with the web appllication.
Uses http rpotocol for transport


what is REST
Represenational state transfer is archetecture style.

Rest HTTP Methods
PUT --http create
GET--Http Find
DELETE ---http delete
POST---http update


Differene between soap and rest

1)  	SOAP is a protocol.						REST is an architectural style.
2)	SOAP stands for Simple Object Access Protocol.			REST stands for REpresentational State Transfer.
3)	SOAP can't use REST because it is a protocol.			REST can use SOAP web services because it is a concept and can use any protocol like HTTP,SOAP.
4)	SOAP uses services interfaces to expose the business logic.	REST uses URI to expose business logic.
5)	JAX-WS is the java API for SOAP web services.			JAX-RS is the java API for RESTful web services.
6)	SOAP defines standards to be strictly followed.			REST does not define too much standards like SOAP.
7)	SOAP requires more bandwidth and resource than REST.		REST requires less bandwidth and resource than SOAP.
8)	SOAP defines its own security.					RESTful web services inherits security measures from the underlying transport.
9)	SOAP permits XML data format only.				REST permits different data format such as Plain text, HTML, XML, JSON etc.
10)	SOAP is less preferred than REST.				REST more preferred than SOAP.




Http Error code
2XX---		Success
	200-	OK
	201- 	Created
3XX----		Redirection
	301-	Permanent Redirect
	303-	Redirect for undefined reason
4xx----		Application Error
	400-	Bad Request
	401-	UnAuthorized
	403- 	Forbidden
	404-	Not found
	409-	Conflict
5xx	Server Error
	500- server error


Communicaiton channels for websrvices
1.HTTP/POST --protocol transfer the information between clients with secure mode
2.HTTP/GET--- Allows the clients to view transferred data
3.SOAP-- protocol transferring the confidential data safely


Operatoin in WSDL
One-way --- Operation can recieve a message but will not send response
Request-Response---Operation can recieve a message and respond back with the response
Solicit-response--- Operation can send a request and wait for a response
Notification----Operation can send a request /message and will not wait for a response


Service-oriented architecture
				Registry

		  						REgistry Query
Service description using WSDL			Query response using WSDl
		
	
Service		 <--Service Request---------------------------  Service
Provider	------SErvice REsponse------------------------> Consumer
 	

Services consumer send request to the service provider.
The service provider returns a response message to the service consumer
A service provider can also be a service consumer.

A service provider describes its service using WSDL.This definition is published to a repository of services.he repository could use Universal Description, Discovery, and Integration (UDDI). Other forms of directories could also be used.
A service consumer issues one or more queries to the repository to locate a service and determine how to communicate with that service. 

Part of the WSDL provided by the service provider is passed to the service consumer. This tells the service consumer what the requests and responses are for the service provider.
The service consumer uses the WSDL to send a request to the service provider.
The service provider provides the expected response to the service consumer.

Web Services Description Language (WSDL)

The Web Services Description Language (WSDL) forms the basis for the original Web Services specification. T

Universal Description, Discovery, and Integration (UDDI)

The repository shown in the above figure could be a UDDI registry. The UDDI registry was intended to eventually serve as a means of "discovering" Web Services described using WSDL. The idea is that the UDDI registry can be searched in various ways to obtain contact information and the Web Services available for various organizations. How much "discovery" was ever used is open to discussion. Nevertheless, even without the discovery portion, the UDDI registry is a way to keep up-to-date on the Web Services your organization currently uses. It can be used at design time and with governance. An alternative to UDDI is the ebXML Registry. More on Universal Description, Discovery, and Integration.

SOAP

All the messages shown in the above figure are sent using SOAP. (SOAP at one time stood for Simple Object Access Protocol. Now, the letters in the acronym have no particular meaning .) SOAP essentially provides the envelope for sending the Web Services messages. SOAP generally uses HTTP , but other means of connection may be used. HTTP is the familiar connection we all use for the Internet. 



Web Services Messages

At the right of this figure is a fragment of the WSDL being sent to the service consumer. This is the same fragment sent to the repository by the service provider. The service consumer uses this WSDL to create the service request shown above the arrow connecting the service consumer to the service provider. Upon receiving the request, the service provider returns a message using the format described in the original WSDL. That message appears at the bottom of the figure.

XML is used to define messages. 



XSD defines a schema which is a definition of how an XML document can be structured. You can use it to check that a given XML document is valid and follows the rules you've laid out in the schema.

WSDL is an XML document that describes a web service. It shows which operations are available and how data should be structured to send to those operations.

WSDL documents have an associated XSD that show what is valid to put in a WSDL document.


What are webservices?

Ans. Web services are web components that transfer data between client and server. Client sends a web request to the server and the server then responds to client. The response and request are related and different requests evoke the corresponding response.

Web Service is a web component or software program that can be accessed on the Internet. It is mainly used to communicate with the web based applications through XML messaging concepts. For example, if we want to access a particular location using Google Maps, we can use the corresponding web service URL. For that we have to pass the appropriate inputs

*************************************************************************************************************************************************************

What are the advantages of web services?

Interoperability: By the help of web services, an application can communicate with other application developed in any language.
Reuability: We can expose the web service so that other applications can use it.
Modularity: By the help of web service, we can create a service for a specific task such as tax calculation etc.

*************************************************************************************************************************************************************

What are the different types of web services?
There are two types of web services:
SOAP
RESTful
*************************************************************************************************************************************************************

What is SOAP?
SOAP stands for Simple Object Access Protocol. It is a XML-based protocol for accessing web services

*************************************************************************************************************************************************************


Advantages of Soap Web Services
WS Security: SOAP defines its own security known as WS Security.
Language and Platform independent: SOAP web services can be written in any programming language and executed in any platform.
*************************************************************************************************************************************************************



Disadvantages of Soap Web Services
Slow: SOAP uses XML format that must be parsed to be read. It defines many standards that must be followed while developing the SOAP applications. So it is slow and consumes more bandwidth and resource.
WSDL dependent: SOAP uses WSDL and doesn't have any other mechanism to discover the service.

*************************************************************************************************************************************************************


What is WSDL
WSDL is an acronym for Web Services Description Language.
WSDL is a xml document containing information about web services such as method name, method parameter and how to access it.
WSDL is a part of UDDI. It acts as a interface between web service applications.

*************************************************************************************************************************************************************
Web Service Components
There are three major web service components.
SOAP
WSDL
UDDI


UDDI
UDDI is an acronym for Universal Description, Discovery and Integration.
UDDI is a XML based framework for describing, discovering and integrating web services.
UDDI is a directory of web service interfaces described by WSDL, containing information about web services.

*************************************************************************************************************************************************************

What is REST
REST stands for REpresentational State Transfer.
REST is an architectural style not a protocol.

*************************************************************************************************************************************************************
Advantages of RESTful webservice
Fast: RESTful Web Services are fast because there is no strict specification like SOAP. It consumes less bandwidth and resource.
Language and Platform independent: RESTful web services can be written in any programming language and executed in any platform.
Can use SOAP: RESTful web services can use SOAP web services as the implementation.
Permits different data format: RESTful web service permits different data format such as Plain Text, HTML, XML and JSON.

*************************************************************************************************************************************************************
SOAP												REST
1)	SOAP is a protocol.								REST is an architectural style.
2)	SOAP stands for Simple Object Access Protocol.					REST stands for REpresentational State Transfer.
3)	SOAP can't use REST because it is a protocol.					REST can use SOAP web services because it is a concept and can use any protocol 											like HTTP, SOAP.
4)	SOAP uses services interfaces to expose the business logic.			REST uses URI to expose business logic.
5)	JAX-WS is the java API for SOAP web services.					JAX-RS is the java API for RESTful web services.
6)	SOAP defines standards to be strictly followed.					REST does not define too much standards like SOAP.
7)	SOAP requires more bandwidth and resource than REST.				REST requires less bandwidth and resource than SOAP.
8)	SOAP defines its own security.							RESTful web services inherits security measures from the underlying transport.
9)	SOAP permits XML data format only.						REST permits different data format such as Plain text, HTML, XML, JSON etc.
10)	SOAP is less preferred than REST.						REST more preferred than SOAP.


*************************************************************************************************************************************************************
Explain SOA architecuture
Service Oriented Architecture (SOA)

Service Oriented Architecture or SOA is a design pattern. It is designed to provide services to other applications through protocol. It is a concept only and not tied to any programming language or platform.

Web services is a technology of SOA most likely.

Service
A service is well-defined, self-contained function that represents unit of functionality. A service can exchange information from another service. It is not dependent on the state of another service.

Service Connections
The figure given below illustrates the service oriented architecture. Service consumer sends service request to the service provider and service provider sends the service response to the service consumer. The service connection is understandable to both service consumer and service provider.

Service provider< ---Request---------------- Service Consumer
		 --------Response------------>


*************************************************************************************************************************************************************


What would be the message format of SOAP protocol?

Generally, all the SOAP based web services are written by using XML language which uses standard message format that is accepted across the universe. In this format, it is easy to read, identify the errors, avoids interoperability problems etc.

Here’s the sample SOAP message format.

POST /InStock HTTP/1.1
Host: localhost
Content-Type: application/soap+xml; charset=utf-8
Content-Length: 399
SOAPAction: “http://www.example.com/soap-envelope”

<?xml version=”1.0??>
<soap:Envelope xmlns:soap=”http://www.example.com/soap-envelope”>
<soap:Header>
</soap:Header>
<soap:Body>
<m:TutorialName>SoapUI</m:TutorialName>
</soap:Body>
</soap:Envelope>

*************************************************************************************************************************************************************

Q #12. What does a soap document contain?

Ans. Envelope element is the top most tag which identifies the XML document as a SOAP message. Followed by Envelope element, you see the header element that has header information. The Body element specifies the call and response information. Finally, you have a Fault element which contains errors and status information.

*************************************************************************************************************************************************************

Q #13. What is meant by Protocols and what are the major types are used in web services?

A protocol is a set of standard rules that helps to communicate the hardware devices through the software applications. There are different types of protocols used in the Internet and Intranet applications. They are

TCP which stands for Transmission Control Protocol. It has the rules to exchange the messages between two different Internet applications.

Internet Protocol uses the rules for sending and receiving the information between two different Internet addresses.

Similarly, HTTP, FTP and DHCP protocols are used the set of rules to transfer the data other than Internet applications.

*************************************************************************************************************************************************************

 What is XML?

Ans. XML (eXtensible Markup Language) is a mark-up language that is used for storing, sharing and formatting data. In general, an XML document is built by the tags.


************************************************************************************************************************************************************* 


Difference between soapui and soapui pro
1.Pro has scripting libraries(grovvy script libraries)
2.Pro supports groovy code templates
3.Data source driven test and data collection is possible in pro
4.Many assertions  are present in pro are not avaible in soapui
SoapUI can help create functional, security and load testing test suites. SoapUI Pro does all that with advanced drag and drop, data driven testing, advanced reporting and coverage analysis.


Q #16. What we can do with the help of SoapUI?

SoapUI offers us to perform automation testing which includes functional testing, load testing and data driven testing.
It also provides in build reporting tool and export test results log provision
We assert our services using various types of assertions



In a SoapUI project, the following order should be maintained.
TestSuite – This is combination of functional tests and logical blocks
Testcase – Its a group that contains several test steps for the specific aspects of the service.
Teststep – it contains the set of functional tests



Q #18. What is the basic method to automate web services in SoapUI?

Ans.

Create a project and add the WSDL file
Add test suites, Test cases and Test cases- in that order
Include custom programming/validation using by adding Groovy steps
Call external data sources if using
Add assertions if necessary
Then RUN.


Q #19. What are SoapUI assertions?

Ans. Assertions compare the parts/all of the response message to the expected outcome.



Q #20. What are the major types of assertions available in SoapUI?

Assertions are the one of the major feature in SoapUI. It offers the following types of assertions.

Simple contains
Schema compliance
Simple not contains
Soap Faults
Response SLA
XPath Match
XQuery Match
WS security status
Script Assertion
WS- Addressing Request or Response Assertion
Additionally Equals assertion is introduced in SoapUI NG Pro version.



Q #21. Explain about XPath Assertion in SoapUI

In SoapUI, XPath assertion is used for asserting the web service response value by specifying the absolute path. If the absolute path is matched with the response value, then the test case or test suite will be considered as PASS otherwise it will be notified as FAILED. We can see the results of assertion at bottom of the screen where the Assertion tab will have resultant information.


Q #25. What is Groovy script and where can it be used?

Ans. Groovy is a scripting language which internally includes all the java libraries – it helps us to customize and add custom validations to SoapUI tests


 What are the properties available in SoapUI?
In SoapUI, there are three levels of properties available. They are,
Custom Properties or Project Level Properties:
These properties are added several times based on our needs and they can be utilized at any test suites, test cases or test steps that belongs to the current project.


Test Suite Level Properties:
Tester can add his own properties with relevant information under the test suites. These properties are available under the corresponding test suite only


Test case Level Properties: If the tester needs to store their test data within the test cases they can create their own properties inside the test case. So these properties can be accessed within the respective test cases.


To read global property
${PropertyName}

Project Property
${#Project#PropertyName}

Test case Prope



HTTPS secures the transmission of the message over the network and provides some assurance to the client about the identity of the server. This is what's important to your bank or online stock broker. Their interest in authenticating the client is not in the identity of the computer, but in your identity. So card numbers, user names, passwords etc. are used to authenticate you. Some precautions are then usually taken to ensure that submissions haven't been tampered with, but on the whole whatever happens over in the session is regarded as having been initiated by you.

WS-Security offers confidentiality and integrity protection from the creation of the message to it's consumption. So instead of ensuring that the content of the communications can only be read by the right server it ensures that it can only be read by the right process on the server. Instead of assuming that all the communications in the securely initiated session are from the authenticated user each one has to be signed.

There's an amusing explanation involving naked motorcyclists here:

http://blogs.msdn.com/vbertocci/archive/2005/04/25/end-to-end-security-or-why-you-shouldn-t-drive-your-motorcycle-naked.aspx

So WS-Security offers more protection than HTTPS would, and SOAP offers a richer API than REST. My opinion is that unless you really need the additional features or protection you should skip the overhead of SOAP and WS-Security. I know it's a bit of a cop-out but the decisions about how much protection is actually justified (not just what would be cool to buil d) need to be made by those who know the problem intimately.


RPC are sometimes blocked by firewalls and proxy servers -soap overcomes that
Remote Procedure Call (RPC) is a protocol that one program can use to request a service from a program located in another computer on a network without having to understand the network's details

XML namespaces play an important role in SOAP messages. A SOAP message may include several different XML elements in the Header and Body elements, and to avoid name collisions each of these elements should be identified by a unique namespace.
This namespace determines the version of SOAP used 



Conditional Go to

 These are applied to the nearest Response of a previous Sampler TestStep; the configured XPath expressions are applied top-to-bottom and when an XPath expression evaluates to true the Conditional Goto will transfer execution to the specified TestStep.

Provide Condition
Provide xpath of previous test test
Provide target location(test step) from where execution should start.



Property Test Step


The Properties TestStep is used for defining custom properties to be used within a TestCase. Its main advantages over defining properties at the TestCase level are:
You can organize properties into multiple Properties TestSteps (if you have many of them)


Data Source
A DataSource TestStep is available for reading test-data into standard SoapUI properties from a number of external sources (Excel files, XML properties, JDBC sources, files/directories, etc), these can then be used in following TestSteps (requests, assertions, xpath-queries, scripts, etc,) either via Property-Transfers or standard Property-Expansions.


Data Source Loop
Finally follows a DataSource Loop TestStep which is configured to loop back over the previous TestSteps for each row/record in the DataSource.


Data Sink 
The Data Sink test step is used to parse the values from your tests and store them in external files. This allows you to consolidate data from different parts of your tests in SoapUI Pro and output them to an Excel file, CSV, Database, etc.



Property Transfer


Property Transfer TestSteps are used to transfer properties between TestSteps and their containing TestCase, TestSuite and Project. They are extremely useful in a number of situations, especially when properties containing XML are involved, for example when you need to

Extracting a value from an XML message, for example a TokenID from a SOAP Response
Write a value into an XML message, for example a saved sessionID or authentication data
Transfer complex XML content between properties
etc

Provide Transfer property Name-> SPecify Source test step name and property -->Provide Target folder(test step) and target property name.


Delay
Wait for specified time in milliseconds before going to nxt step.


Run Test Case

Use this test step to run an existing test case from your test project. It is similar to a method call in programming languages like Java or C++. When executing this test step, ReadyAPI goes directly to the called test case. After the called test case is over, ReadyAPI returns back to the original test case.



SOAP Request - 

sends a SOAP Request over either HTTP, HTTPS or JMS and receives the response if there is one. SOAP Request TestSteps are tied to a corresponding WSDL Operation and its WSDL Interface added to a project when importing its WSDL.


REST Request - 

sends a REST request over HTTP, HTTPS or JMS and receives the response if there is one. REST Request TestSteps are tied to a corresponding REST Service, Resource and Method in the containing soapUI Project.


HTTP Request - 
sends an arbitrary HTTP Request over HTTP, HTTPS or JMS and returns the results as an XML String

Mock Response
Listens and waits for an HTTP or HTTPS request and returns a configured response; used for testing of callbacks and asynchronous processes.


AMF Request - sends an AMF request over HTTP or HTTPS and returns the result as an XML String



WebDriver Interface
RemoteWebdriver implements WebDriver
FIrefox/chrome extends  remoteWebdriver

############  Selenium  #############
1. Tell about framework what you have developed.

1.We have designed hybrid Framework: It consist of data drivena and modular driven framework
2.We are storing our data in xml file.thus acheiving data driven framework
3.We have written common methods in library  classes thus acheiving modular driven framwwork
4.WE are using TestNG framework to run the test cases and maven is used for project management.i.e build life cycle -downloading jars and dependencies automatically.
5.We have used maven for build management.which will download all the required jars for the project.
6.Maven Surefire reports for report generation


*********************************************************************************************************************************************************************
2.Issues/Challenges faced in Automation testing.

Selenium
1.Timing issue with locating elements. 
	To overcome this we used explicit wait for the command which takes long time to locate.
2.Removed Absolute xpath to overcome xpath updation when element gets changed using relative xpath.
3.Whenever test case  fails we used to take screenshot . We had to write this for each of the test cases.Whenever it fails for undefined/unexpected situation, it was diffucult to debug.To avoid this we used Listeners in testNG xml to take screenshot whenever tes case fails .Which helped in debugging.
4.Some of the commands does not work in IE. Like Click command.
	To overcome this we have written method to click until it is clicked on the webElement
5.There was web page where in we had multiple frames ,  when we were trying to switch from one frame another frame , we were not able to locate the element in the other frame.
By performing SwitchTo.DefaultContent()  and then switching to second frame this issue was resolved


** locators in different browsers like click wont work in IE that works in FF.
	Work around click again if expected element not found.
** xpath "[(text=)]" and "[contains(.,"")]" wont work in IE, but [contains(text(),'')] works in IE,FF,Chrome.
** In iframes if you are using actions, then to click if you use linktext click wont work, for that use action click only.
** If you want perform any action its there in edge of windows frame. Those action wont perform for that you have scroll browser then perform actions.
** Locators updating for successful releases.
** Timing issue in different browsers.
** Data populating issue in application.
** Created dynamic data, that helped while debugging the failures.


public void click(WebElement element){
WebDriverWait wait=new WebDriverWait(driver,10)
wait.until(expectedConditions.PresenceOfElementLocatedBy(element)
}

A locator is nothing more than an abstract way of defining how an element will be found.

A WebElement is just the reference to that element within the DOM.
*********************************************************************************************************************************************************************
XAPTH
								
	td1
	td2
	
	div1
		div2
			div3
		/div2
	/div1
	
	div3: Ancestors are div2 and div1 : parents
	div3:preceding's are td2 and td1 : Before starting tag elements
	
	div2: descendant are div3 : Children's
	div2: following are div1 : All the nodes after the closing tag of current node
	
*********************************************************************************************************************************************************************


3.How to count rows and column in table.
locate elememt using xpath till tr

	int rowCount=driver.findElements(By.xpath("//div[@id='post-body-4292417847084983089']/div/table/tbody/tr")).size();
then get size of row which will return number of rows in the table

To Count NUmber of Columns
LOcate Element till tr[1]/td

int col=driver.findElements(By.xpath("//div/table/tbody/tr[1]/td")).size();

*********************************************************************************************************************************************************************


4.What are the different types of waits in Selenium.

Implicit Waits
An implicit wait is to tell WebDriver to poll the DOM for a certain amount of time when trying to find an element or elements if they are not immediately available. The default setting is 0. Once set, the implicit wait is set for the life of the WebDriver object instance.
driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

Explicit Waits
An explicit wait is code you define to wait for a certain condition to occur before proceeding further in the code. The worst case of this is Thread.sleep(), which sets the condition to an exact time period to wait. There are some convenience methods like ExpectedCondition that will wait only as long as required. 
Example

WebDriver driver = new FirefoxDriver();
driver.get("http://google.com");
WebElement myDynamicElement = (new WebDriverWait(driver, 10)).until(ExpectedConditions.presenceOfElementLocated(By.id("myDynamicElement")));


ExpectedCOnditions.alertsPresent()
ExpectedCOnditions.ElementToBeClickable()
EpectedCOndtions.titleContains()

*********************************************************************************************************************************************************************


5. How to handle Iframe, Alerts and windows in selenium.


Iframes-  driver.switchTo().frame(driver)

Alert-  Alert alert= driver.switchTo.alert();
	alert.accept();
	alert.dismiss();
Windows-
	
For single window
	String window1=driver.getWindowhandle();
	driver.switchTo().window(window1).getTitle();

For multiple Window
Set<String> wins=driver.getWindowHandles();
for(String str:wins){
	driver.switchTo.window(str).getTitle();
}
	
*********************************************************************************************************************************************************************

6.How to select multiple drop down options in selenium.
Using Select class

Select sel=new Select(WebElement);
sel.selectByVisibleText(); or sel.selectByIndex(); or sel.selectByValue();

7.Tell more about action class.

Actions class is needed while handling keyboard events and mouse events. ex: drag and drop, double click, click with ctrl key.Mouse hover actions.

Actions action=new Actions(driver);

// To click on the element
action.moveToElement(element).click().perform();

The following are the regularly used mouse and keyboard events :
Method :clickAndHold()
Purpose: Clicks without releasing the current mouse location

Method : contentClick()
Purpose: Performs a context-click at the current mouse location.


Method: doubleClick()
Purpose: Performs a double click at the current mouse location


Method: dragAndDrop(source,target)
Purpose: Performs click and hold at the location of the source element and moves to the location of the target element then releases the mouse.

Method: keyDown(modifier_key)
Parameters: Modifier_key (keys.ALT or Keys.SHIFT or Keys.CONROL)
Purpose: Performs a modifier key press, doesn't release the modifier key. Subsequent interactions may assume it's kept pressed

Method: keyUp(modifier_key)
Parameters: Modifier_key (keys.ALT or Keys.SHIFT or Keys.CONROL)
Purpose: Performs a key release.

Method: moveByOffset(x-offset, y-offset)
Parameters: X-Offset , Horizontal offset, a negative value means moving the mouse to left side.
Y-Offset, vertical offset, a negative value means moving the mouse to up.
Purpose: Moves the mouse position from its current position by the given offset.

*********************************************************************************************************************************************************************
 Cutomaised wait method to wait for window to be loaded 

public void clickAndSwitchToSecondWindow()
{
//Perform the click operation that opens new window

driver.findElement(By.id(“id of the link/button which opens new window”)).click();
//wait till two windows are not opened
waitForNumberofWindowsToEqual(2);//this method is for wait

Set handles = driver.getWindowHandles();
firstWinHandle = driver.getWindowHandle(); handles.remove(firstWinHandle);
String winHandle=handles.iterator().next();
if (winHandle!=firstWinHandle){
//To retrieve the handle of second window, extracting the handle which does not match to first window handle
secondWinHandle=winHandle; //Storing handle of second window handle

//Switch control to new window
driver.switchTo().window(secondWinHandle);
//Control is switched now
}


public void waitForNumberOfWindowsToEqual(final int numberOfWindows)
{

//Making a new expected condition
new WebDriverWait(driver,3){}.until(new ExpectedCondition()
{
@Override public Boolean apply(WebDriver driver)
{
return (driver.getWindowHandles().size() == numberOfWindows);
}
});

}

*********************************************************************************************************************************************************************




7.Read XML data and store it in 2D array.

8.What type test cases should automate.
High Risk - Business Critical test cases
Test cases that are executed repeatedly
Test Cases that are very tedious or difficult to perform manually
Test Cases which are time consuming

*********************************************************************************************************************************************************************

13. Which test cases are not suitable for Automation Testing.
Test Cases that are newly designed and not executed manually  atleast once
Test Cases for which the requirements are changing frequently
Test cases which are executed on ad-hoc basis.

*********************************************************************************************************************************************************************

11. Advantages and disadvantages of automation Testing.
Advantages

Reliable: Tests perform precisely the same operations each time they are run, thereby eliminating human error
Repeatable: You can test how the software reacts under repeated execution of the same operations. 
Programmable: You can program sophisticated tests that bring out hidden information from the application. 
Comprehensive: You can build a suite of tests that covers every feature in your application.
Reusable: You can reuse tests on different versions of an application, even if the user interface changes.
Better Quality Software: Because you can run more tests in less time with fewer resources
Fast: Automated Tools run tests significantly faster than human users.
Cost Reduction: As the number of resources for regression test are reduced.


Disadvantages

• Proficiency is required to write the automation test scripts. 
• Debugging the test script is major issue. If any error is present in the test script, sometimes it may lead to deadly consequences. 
• Test maintenance is costly in case of playback methods. Even though a minor change occurs in the GUI, the test script has to be rerecorded or replaced by a new test script. 
• Maintenance of test data files is difficult, if the test script tests more screens. 


**  Advantages of Automation :
1. Better speed in increase execution speed.
2. Can reduce humen resource. So cost cutting and humen intervention is not required while executing.
3. Execute test cases in different browsers/platforms more quickely.
4. Same test cases can execute in subsequent releases.
5. Inrease consistency,reliabilty and accurecy. Since exact same test will execute again.
6. 

** Disadvantages of Automation :
1. Initial investment will be more without ROI(Return of Investement).
2. Requires expertise in domain. 

*********************************************************************************************************************************************************************

12. Advantages and disadvantages of Selenium Web driver.


Advantages: 

1. Selenium is pure open source, freeware and portable tool. 
2. Selenium supports variety of languages that include Java, Perl, Python, C#, Ruby, Groovy, Java Script, and VB Script. etc. 
3. Selenium supports many operating systems like Windows, Macintosh, Linux, Unix etc. 
4. Selenium supports many browsers like Internet explorer, Chrome, Firefox, Opera, Safari etc. 
5. Selenium can be integrated with ANT or Maven kind of framework for source code compilation. 
6. Selenium can be integrated with TestNG testing framework for testing our applications and generating reports. 
7. Selenium can be integrated with Jenkins or Hudson for continuous integration. 
8. Selenium can be integrated with other open source tools for supporting other features. 
9. Selenium can be used for Android, IPhone, Blackberry etc. based application testing. 
10. Selenium supports very less CPU and RAM consumption for script execution. 
11. Selenium comes with different component to provide support to its parent which is Selenium IDE, Selenium Grid and Selenium Remote Control (RC). 

Disadvantages: 

2. Selenium only supports web based application and does not support windows based application. 
3. It is difficult to test Image based application. 
4. Selenium need outside support for report generation activity like dependence on TestNG or Jenkins. 
5. Selenium does not support built in add-ins support. 
7. Selenium does not provide any built in IDE for script generation and it need other IDE like Eclipse for writing scripts. 
9. Selenium script creation time is bit high. 
10. Selenium does not support file upload facility. 
11. Selenium partially supports for Dialog boxes.


#############   TestNg   #############

1. What is testNg framework.
TestNg is testing framework inspired from Junit and Nunit.TestNG: Test next generation.
TestNG is a testing framework designed to simplify a broad range of testing needs, from unit testing (testing a class in isolation of the others) to integration testing (testing entire systems made of several classes, several packages and even several external frameworks, such as application servers).

*********************************************************************************************************************************************************************

2. What and all annotations TestngNg provides and how they works.

@Test: Marks a class or a method as part of the test.
@BeforeSuite: The annotated method will be run before all tests in this suite have run. 
@AfterSuite: The annotated method will be run after all tests in this suite have run. 
@BeforeTest: The annotated method will be run before any test method belonging to the classes inside the <test> tag is run. 
@AfterTest: The annotated method will be run after all the test methods belonging to the classes inside the <test> tag have run. 
@BeforeGroups: The list of groups that this configuration method will run before. This method is guaranteed to run shortly before the first test method that belongs to any of these groups is invoked. 
@AfterGroups: The list of groups that this configuration method will run after. This method is guaranteed to run shortly after the last test method that belongs to any of these groups is invoked. 
@BeforeClass: The annotated method will be run before the first test method in the current class is invoked. 
@AfterClass: The annotated method will be run after all the test methods in the current class have been run. 
@BeforeMethod: The annotated method will be run before each test method. 
@AfterMethod: The annotated method will be run after each test method.

@DataProvider:Marks a method as supplying data for a test method. The annotated method must return an Object[][].
The @Test method that wants to receive data from this DataProvider needs to use a dataProvider name equals to the name of this annotation.
 
@Listeners	Defines listeners on a test class.


*********************************************************************************************************************************************************************

3. What and all different types of annotations you have used.

@Test
@BeforeMethod
@AfterMethod
@DataProvider
@Listener

*********************************************************************************************************************************************************************
4. How to run Test cases in data driven and parallel driven mode.
By providing parallel ="true" in dataProvider annotation

or by incluing parallel="tests" thread-count="2" in testNG


5. How can you control the test case execution flow.
by allocating priority to the test  methods
@Test(priority=1)

6. Write sample testng.xml.


<Suite name="my suite" verbose="2">
	<test name="ClassName">
		<groups>
		     <run>
			<include name="Prerequisite"/>
			<exclude name="Functional"/>
		     </run>
		</groups>
		<classes>
			<class name="package.className"/>
		</classes>
	</test>
</Suite>

A suite is represented by one XML file. It can contain one or more tests and is defined by the <suite> tag.
A test is represented by <test> and can contain one or more TestNG classes.
A TestNG class is a Java class that contains at least one TestNG annotation. It is represented by the <class> tag and can contain one or more test methods.
A test method is a Java method annotated by @Test in your source.


*********************************************************************************************************************************************************************

#############   Maven    #############
1. What is Maven and explain its build life cycle.
Maven is a build tool. It is a software project management tool which provides new concept of project object model (POM). 
As Maven Is build management tool, It will helps you to manage your selenium project's build easily.

It will manage your selenium test project's build compilation, documentation and other related project tasks. It will helps you to create right project structure, add and manage jar files In project's build path etc. 
Maven uses POM.xml configuration file which kept all project configuration related Information.

 MAVEN DEFAULT LIFECYCLE 
Step 1: Clean---remove all files generated by the previous build(mvn clean:clean)
Step 2: Build--This is the primary life cycle of Maven and is used to build the application(mvn deploy:deploy)
Step 3 : Site----generate the project's site documentation.Maven Site plugin is generally used to create fresh documentation to create reports, deploy site etc.
(mvn site:site)
 
*********************************************************************************************************************************************************************

2. What are the different types of repository in Maven Build life cycle.
1. Local Repository : This folder get creates in local machine, when first maven commond runs. Here maven stores all the dependency and plugins from central and remote repo if any to avoid references to remote and cental repo for every builds.
2. Central Repository : Maven central repository is repository provided by Maven community. It contains a large number of commonly used libraries.
3. Remote Repository : Remote Repository which is developer's own custom repository containing required libraries or other project jars.


*********************************************************************************************************************************************************************
3. Write sample Pom.xml file.
<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mindtree.dcs</groupId>
	<artefactId>sitadcs</artefactId>
	<version>2.0</version>
	<name>flights</name>
		<dependecies>
			<dependency>
				<groupId>org.testng</groupId>
				<artefactId>sitadcs</artefactId>
				<version>6.8</version>
			</dependency>
		</dependecies>
		<build>
			<plugins>
				<plugin>
					<groupId>org.testng</groupId>
					<artefactId>sitadcs</artefactId>
					<version>6.8</version>
				<configuration>
				</configuration>
			</plugin>
			</plugins>
		</build>

</project>




##############################################    JAVA    ##########################################################################

1. What and all OPP's concepts you have used in your project?
            OR
	Explain about Java OOPS concepts:
		a. Abstraction
		b. Inheritance
		c. Polymorphism
		d. Encapsulation
We have used inheritance and method overloading concept in our automation script.

We have different set of clasess which extends prerequisite class which will have common methods. 

And We have functioanlity for example create message address which can accept either email address or TYpeB address code which will be numeric Only or it cn have both typeb and email adress.
In this case we have used method overloading with same method name with different parameters


Abstraction

Abstraction is process of hiding implementation details and showing functionality to the user.
Example: 
Class bike is abstract class in that we have run  method without any method body.
Class honda which extends bike class has run method with method body


public Abstract Class Bike{
abstract void run();
}

public class Honda extends Bike{

public static void main(String[] args){
Bike obj=new Honda();
obj.run();
}
public void run(){
 system.out.println("RUNNIng");

}
}




Inheritance
Inheritance is a  mechanism in which one object acquires all properties and behaviour of parent object.
Represents Is-A relationship.

This concept is used to achieve method overriding and  for code reusability.

Class A{
methods and fields
}
Class B extends Class A{

}
 


Polymorphism
Ability of object to take many forms.
One action performed in different ways.

Two types
Compile time polymorphism------   Method Overloading
RunTime Polymorphism-----Method Overriding

Runtime Polymorphism/Dynamic Polymorphism is a process in which a call to overriden method is resolved at runtime rather than compile time.
Since method invocation is determined by the JVM not compiler, it is known as runtime polymorphism.


Upcasting
When reference variable of Parent class refers to the object of Child class, it is known as upcasting.
Class A{
methods and fields
}
Class B extends Class A{

A obj=new B();

REal Example: rate of interest calculation in bank is specific to the bank.
we have bank class with method Rate ofInterest(). we have classes like SBI , ICICI, CITI Bank which will have rate of interest method with there own calculation.SO it overrides method of bank class to have its own implementati


Method Overloading.
If a class have multiple methods by same name but different parameters, it is known as Method Overloading.

There are two ways to overload the method in java
By changing number of arguments
By changing the data type



Encapsulation
It is mechanism to wrapping the data and code acting on that data together as single unit.
In encapsulation variables of a class will be hidden from the other classes and canbe accessed only thorough the methods of their current class, therefore it is also known as data hiding.
Variable will be declared as private and , using getter setter method able to modify or view the variable values


Class A{
 Private data;
public int getdata();
{
return data;
}
public void setdata(int data1){
data=data1;
}
}

class B{
A obj=new A();
obj.setdata(98);
}

*********************************************************************************************************************************************************************

2.Difference between Abstraction and  Interface


	Abstraction											Interface
1.Abstract Keyword is used to declare abstract class					1.Interface Keyword id used to declare class
2.It can have abstract and non abstract methods						2.Can have only abstract methods
3.it can have static , non static, final and non final variables			3.Can have onlt static and final variables 
4.Doesnot Support multiple inheritance							4.Supports multiple inheritance
5.Abstract class can have static methods, main method and constructor.			5.Interface can't have static methods, main method or constructor.
6.Abstract class can provide the implementation of interface				6.Interface can't provide the implementation of abstract class.



3. Why String is immutable.
String object is immutable means it is unmodifiable or unchangeable.
Once String object is created  its data or state  cant be changed  but a new string object is created.
for example:
String s="ABC";
s.concat("DEF");
System.out.println(s)

o/p is ABC

*********************************************************************************************************************************************************************

4.Difference between method overloading and overriding.

Overloading										Overriding
1.Method name is same with different parameters					1.Method name and parameters should be same
2.Happens at compile time							2.happens at runtime
3.Overloading is performed within the class					3.perfored between two classes that have IS-A relationship
4.Used to increase readability of program					4.Used to provide specific implementation of the method that is already provided by the  										parent class
5.Cannot achieve overloading by changing return type of method			5.return type should be same


*********************************************************************************************************************************************************************

5.Difference between ArrayList and LinkedList.

	ArrayList										Linked List
1.Arraylist has index based accessing/searching element					1.LinkedList doesnot provide index based accessing
2.Manipulation with ArrayList is slow because it internally uses array.			2.Manipulation with LinkedList is faster than ArrayList 
as you need to rearrange all elements. 							there is no risk of resizing array
3.ArrayList is better for storing and accessing data.					3.LinkedList is better for manipulating data.



*********************************************************************************************************************************************************************
6. Difference between List and Set.
	List											Set
1.List is an ordered Collection							1.Set is an unordered collection.
2.Allows duplicate elements							2.doesnot allow duplicate elements
3.List maintains insertion order of elements, means any element			3.Set doesnot maintain any order
 which is inserted before will go on lower index than any element 
which is inserted after.
4.List interface in Java includes ArrayList, Vector and LinkedList.		4.Set interface includes HashSet, TreeSet and LinkedHashSet.



*********************************************************************************************************************************************************************
7.How hash map works in Java.
Hashmap in java works on hashing principle.In hashing , hash functions are used to  link key and value in hashmap.Objects are stored by calling put(key,value) method of hashmap.and retrieved by get(key)method,
When we call put method, hashcode() method of the key object is called so that hash function of the map can find a bucket location to store value object, which is actually an index of the internal array, known as the table. HashMap internally stores mapping in the form of Map.Entry object which contains both key and value object.

When get() method is used to retrieve value, again key object is used to calculate a hash which is used then to find a bucket where that particular key is stored.


*********************************************************************************************************************************************************************

8.Difference between HashMap, Linked HashMap and TreeMap.

	 
	+-------------------------------------------------------------------------------+
	¦   Property   ¦       HashMap       ¦      TreeMap      ¦     LinkedHashMap    ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦  no guarantee order ¦ sorted according  ¦                      ¦
	¦   Order      ¦ will remain constant¦ to the natural    ¦    insertion-order   ¦
	¦              ¦      over time      ¦    ordering       ¦                      ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦  Get/put     ¦                     ¦                   ¦                      ¦
	¦   remove     ¦         O(1)        ¦      O(log(n))    ¦         O(1)         ¦
	¦ containsKey  ¦                     ¦                   ¦                      ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦                     ¦   NavigableMap    ¦                      ¦
	¦  Interfaces  ¦         Map         ¦       Map         ¦         Map          ¦
	¦              ¦                     ¦    SortedMap      ¦                      ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦                     ¦                   ¦                      ¦
	¦     Null     ¦       allowed       ¦    only values    ¦       allowed        ¦
	¦ values/keys  ¦                     ¦                   ¦                      ¦
	¦--------------+----------------------------------------------------------------¦
	¦              ¦   Fail-fast behavior of an iterator cannot be guaranteed       ¦
	¦   Fail-fast  ¦ impossible to make any hard guarantees in the presence of      ¦
	¦   behavior   ¦           unsynchronized concurrent modification               ¦
	¦--------------+----------------------------------------------------------------¦
	¦      Is      ¦                                                                ¦
	¦ synchronized ¦              implementation is not synchronized                ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦                     ¦                   ¦                      ¦
	¦   Memory     ¦  < LHS and TS       ¦ >HS and LHS       ¦    < HS but >TS      ¦
	¦--------------+---------------------+-------------------+----------------------¦
	¦              ¦                     ¦                   ¦                      ¦
	¦  When to     ¦ When no insertion   ¦ when Sorting is   ¦   when insertion     ¦
	¦   use        ¦ order and sorting   ¦    needed         ¦   order is required  ¦
	+-------------------------------------------------------------------------------+

*********************************************************************************************************************************************************************

9.dIfference between Arraylist and vector


ArrayList													Vector
1) ArrayList is not synchronized.It is not thread safe				Vector is synchronized.thread Safe.
2) ArrayList increments 50% of current array size if number 			Vector increments 100% means doubles the array size if total   number of element exceeds than its capacity.							exceeds than its capacity.
3) ArrayList is not a legacy class, it is introduced in JDK 1.2.		Vector is a legacy class.
4) ArrayList is fast because it is non-synchronized.				Vector is slow because it is synchronized i.e. in multithreading environment, 												it will hold the other threads in runnable or non-runnable state until current thread 											releases the lock of object.
5) ArrayList uses Iterator interface to traverse the elements.			Vector uses Enumeration interface to traverse the elements.But it can use Iterator also										


synchronized
If you use the same Array List from two threads at the same time, they can't corrupt the state. However, this makes it slower.
Accessing an ArrayList instance from multiple threads may not be safe 


*********************************************************************************************************************************************************************

10.Difference between HashMap and HashTable
	HashMap														Hashtable
1) HashMap is non synchronized. It is not-thread safe and can't be shared 	Hashtable is synchronized. It is thread-safe and can be shared with many threads.
between many threads without proper synchronization code.	
2) HashMap allows one null key and multiple null values.			Hashtable doesn't allow any null key or value.
3) HashMap is a new class introduced in JDK 1.2.				Hashtable is a legacy class.
4) HashMap is fast.								Hashtable is slow.
5) We can make the HashMap as synchronized by calling this code
Map m = Collections.synchronizedMap(hashMap);					Hashtable is internally synchronized and can't be unsynchronized.
6) HashMap is traversed by Iterator.						Hashtable is traversed by Enumerator and Iterator.
7) Iterator in HashMap is fail-fast.						Enumerator in Hashtable is not fail-fast.
8) HashMap inherits AbstractMap class.						Hashtable inherits Dictionary class.



HashTable<Integer, String> ht=new HashTable<Integer,String>()
Set<String> keys=ht.keySet()
Iterator itr=keys.iterator()

While(itr.hasNext()){

String str=itr.next()

}




12. Programs for prime no, Fibonacci Series, Bubble sort, perfect No, Reverse the string, Sort the String, Repetitive words count. 





*********************************************************************************************************************************************************************

1.Connection to databaes using java

Class.forName("oracle.jdbc.driver.OracleDriver") 				 // load the driver class  
Connection con=DriverManager.getConnection(url,username,password)  	         //create the connection object  
Statement stmt=con.createStatement();					  	 //  create the statement object  
ResultSet rs=stmt.executeQuery("Select * from flight profile")
while(rs.next()){
Flight_Profile_Id=rs.getInt();
Flight_NUmber=rs.getString();
System.out.println(Flight_Profile_Id +" "+Flight_NUmber )
}


*********************************************************************************************************************************************************************

Explain about your reporting method.
We use surefire report for report generation. That is a plugin available in maven, which generates the test results report into HTML format.
mvn Surefire-report:report

*********************************************************************************************************************************************************************

Maven version---3.3.9
JAVA----7
JDK---1.7.0
Selenium----2.53.0
TestNG----6.8

Setting UP maven Project.
1.Path setting of JAVA_HOME and M2_HOME varibale name and variable path in environment varibales. 
2.Install TestNG plugin from eclipse software
3.Donload and install maven 
4.We can run maven either through pom.xml or maven command
mvn clean install –DskipTests

Right click on pom.xml and Run As Maven Clean and also as Maven install.



*********************************************************************************************************************************************************************



How will you read data from xml file.
We have used Dataprovider annoation of TestNG whihc returns two dimensinal object to read data form the xml.
We have written DataProvider method in our prerequisite class which has @DataProvider annotation
Test cases consuming the dataprovider has to have this class name and dataprovider name in the annoation.

For reading Xml data , first we find xpath of the data and take that data and pass to the method which is calling dataprovider.

	@DataProvider(name = "CustomDataProvider")
	public static Object[][] dataProvider(Method method) throws ParserConfigurationException, SAXException, IOException, XPathExpressionException{
		dbf = DocumentBuilderFactory.newInstance();
		db = dbf.newDocumentBuilder();
		doc = db.parse(new File("D:\\AutoLearn\\AutoLearn_WS\\sita\\src\\test\\resources\\data.xml"));
		xf = XPathFactory.newInstance();
		xpath = xf.newXPath();
		String name = method.getName();
		///[@name="login"]/
		NodeList tcs = (NodeList)xpath.compile("//testData/tcName[@name = '" + name + "']/tcData").evaluate(doc, XPathConstants.NODESET);
		int noOFTcs = tcs.getLength();
		//Rows - Number of times your test has to be repeated.
		//Columns - Number of parameters in test data.
		//Object[][] data = new Object[rows][columns];
		Object[][] data = new Object[noOFTcs][1];
		for(int i = 1; i <= noOFTcs; i++ ) {
			data[i-1][0] = i;
		}
		return  data;

				
	}
	
	public static void readData(int setIndex, String data) throws ParserConfigurationException, SAXException, IOException, XPathExpressionException {
		NodeList datas = (NodeList)xpath.compile("//dataSet[@name = '" + ans.get() + "']/set["+ setIndex +"]/data[@name='" + data + "']").evaluate(doc, XPathConstants.NODESET);
		System.out.println(datas.item(0).getTextContent());
	}



*********************************************************************************************************************************************************************
WindowHandle Related


 Switch to particular window and perform action on this(When you know title of the window)



Set<String> handle= driver.getWindowHandles();
firstwindow=driver.getWindowHandle();
handle.remove(firstWindow)
for(String st:handle){

driver.switchTo().window(st);
if(driver.getTitle.equals("title of second window")){

}


Working with two window


Set<String> handle= driver.getWindowHandles();

String window1= (String)handle.toArray()[0];
String window2=(String) handle.toArray()[1];

driver.switchTo().window(window2);




Customized method to wait until the new window is loaded


public static void waitforNumberofWindow(int numberOfWindow){


WebDriverwait wait=new WebDriverwait(driver.30)
wait.until(ExpectedConditions){
@Override
public boolen apply(Webdriver driver)
{
return(driver.getWindowHandles== numberOfWindow)

}







******************************     JAVA IMPORTANT      ***************************************
***** STRINGS  ********
Strings are immutable in Java to achieve Security and performance.
Since it is final no body can change it. Once it is created.

** String literals :
String str = "India";--- String literal
This double qouted literal is known as String literal.
Cache which stores these instances is known String pool.
String pool will be there in some part of heap area.
String str1 = new string("India") : String obejct
this string will be stored in Heap Area. And every time new object will be created.

To verify strings values in Java.Its recommended that use object.equals(object), insted of ==
beacuase == check the object reference(memory address).While equals checks the object value.
since str will stored in String pool.Its memory adress will be different than str1's heap area memory adress.
If you are not sure about the where the string will save, avoid using == and use equals method to compare the strings.

************************  String Interning  ******************************
In Java, when we talk about String interning, we describe how Java stores only one copy of every distinct String value in the string pool, in order to reuse String objects to save memory from a program.

This practically means, that each String object is stored only once in memory, regardless of how many times the same String may appear in the code.


Java automatically interns String literals. This means that in many cases, the == operator appears to work for Strings in the same way that it does for ints or other primitive values.

Since interning is automatic for String literals, the intern() method is to be used on Strings constructed with new String()

Using your example:

String s1 = "Rakesh";
String s2 = "Rakesh";
String s3 = "Rakesh".intern();
String s4 = new String("Rakesh");
String s5 = new String("Rakesh").intern();

if ( s1 == s2 ){
    System.out.println("s1 and s2 are same");  // 1.
}

if ( s1 == s3 ){
    System.out.println("s1 and s3 are same" );  // 2.
}

if ( s1 == s4 ){
    System.out.println("s1 and s4 are same" );  // 3.
}

if ( s1 == s5 ){
    System.out.println("s1 and s5 are same" );  // 4.
}
will return:

s1 and s2 are same
s1 and s3 are same
s1 and s5 are same


           String, StringBuilder and String Buffer
Threasafe    Y		N		Y
Immutable    Y          N               N
Class is     Y 		Y		T
Final

String Builder and String buffer internally uses an array to acchive it append or anyother modifuing methods
************************************************************************************************************************
**************************************    OOPS     **************************************************************
*****************************************************************************************************************

** Multiple Inheritence : 
Inheritence having all behaviour and properties of parent class in child class
			A
		B       C
		     D
			 
Above daigram shows Diamond problems.
If suppose A is method test();
B extends A, B is having its own test() method;
C also etends A, C is having its own test() method.
D extends both B,C and calls method test().
So its confuses which test method its refering. Whether A -> test(), B -> test() or C -> test().

To avoid this in Java multiple inheritence in class level its there, but its allowd in inheritence.
Because in interfece we will have only signaure of methods and implementation will be done concrete class.
*********************************************************************************************************************
			Types of inheritance: Acquiring another objects properties from another object in Java
Types of Inheritence In Java:
1. Single  A --> B
2. Multilevel Inheritence:
	A -->B --> C
3. Hierarchical: A --> B
		 A --> C
		 


Howa it made possible in Interface

Interface A{
test()
}

Interface B{
test()
}

Class C implements A,B{
test()
{
System.out.println("testing ")
}

Main{
test()
}

this will call test method of class C as it has implementaion of method test.

*********************************************************************************************************************

************** Difference between Abstaction, Encapsulation  **************
Abstaction : Information hiding- Providing the functionality to end user, with hiding implementation information.
Encasulation : Data hiding, by making the data members to bind with class. By using private modifiers.
Abstaction can be achieved through encasulation,abstract class and interface.

Abstract class:fields are public, static, final. Which is having abstract methods, will contains common implemented functionality and some signature methods without body. Provides 1to 100% abstraction
Interface is contact : Fields are by default public static final:
						Final because it will not change its value in its implementation class
						It is contains only signatures and its pure abstract class. It say's like your class will looks like this. whoever implemented they my class in that way

Car: Car driver dont know how start button but still uses its functionality.
syso:system.out.println we are using without knowing there implementation. This called an abstaction, This information/behavior hiding can be achieved through encasulation,Abastract class, interface.

********************************************************************************************************************************************************************

5. Access specifiers public, private, protected, default?
	public can accessed between packages(Anywhere),
	default can be accessed in same package,
	protected can be accessed in derived classes(Through inheritance only).
	private can be accessed only same class.
******************************************************************************************************************************************************************** 

6. Primitive and derived data types?
	Primitive data types are predefined by the language. There are 8 types Eg: int, float, double, long, char,Boolean, byte,short
	Derived Data types are reference data types Ex: class initialization A a = new A();

******************************************************************************************************************************************************************** 

7. String constant and string non constant pool ?
	String pool and constant pool, String pool contains collection of reference of string literals, Constant pool contains the constants those are not Java objects.Those special meaning to class loader.

v******************************************************************************************************************************************************************** 
8. How to compare 2 strings in Java?
	Using .equals, ==, comapreTo(ASCHI Checking)



******************************************************************************************************************************************************************** 
10. How many ways to implement threads in java---Implementing Runnable interface and 
extending Thread class.


******************************************************************************************************************************************************************** 
11. Call by value and reference

There is only call by value in java, not call by reference. If we call a method passing a value, it is known as call by value


******************************************************************************************************************************************************************** 

12. Length of the string without using length

public static void getLengthOfString(String str){
int length=0;
char[] c=str.toCharArray();
for(char ch:c){
	length++
}
return length;

}

******************************************************************************************************************************************************************** 
13. Challenges faced during project?


******************************************************************************************************************************************************************** 
14. Difference between  string, string builder, string buffer?
	String is immutable and more secured.
	String Buffer is mutable but synchronized.
	String Builder is mutable and non synchronized.

******************************************************************************************************************************************************************** 
15.Convert array to string Array list to Array vice versa.


Array to String 

char[] a=new char[];
String str=a.toString();


Array to list

String[] a=new String[1];
List<String> ls=Arrays.asList(a);

List to array
List<String> ls= new ArrayList<String>();
String[] a=ls.toArray();


******************************************************************************************************************************************************************** 

22. What is default package in Java?

Packages are used in Java in order to prevent naming conflicts, to control access, to make searching/locating and usage of classes, interfaces, enumerations and annotations easier, etc.


The default package is an unnamed package. The unnamed package contains java classes whose source files did not contain a package declaration. The purpose of default package is for convenience when developing small or temporary applications or when just beginning development.

Example
java.lang----bundles the fundamental classes

java.io -----classes for input , output functions are bundled in this package

******************************************************************************************************************************************************************** 
23. What are inner classes name them?

Java inner class or nested class is a class i.e. declared inside the class or interface.
It can access all the members of outer class including private data members and methods.

Syntax of Inner class

class Java_Outer_class{  
 //code  
 class Java_Inner_class{  
  //code  
 }  
} 


Advantage of java inner classes

There are basically three advantages of inner classes in java. They are as follows:

1) Nested classes represent a special type of relationship that is it can access all the members (data members and methods) of outer class including private.

2) Nested classes are used to develop more readable and maintainable code because it logically group classes and interfaces in one place only.

3) Code Optimization: It requires less code to write

Types of Nested classes

There are two types of nested classes non-static and static nested classes.The non-static nested classes are also known as inner classes.
Non-static nested class(inner class)


a.Member Inner Class		A class created within class and outside method.
b.Anonymous Inner Class		A class created for implementing interface or extending class. Its name is decided by the java compiler.
c.Local Inner Class		A class created within method.


Static Nested Class		A static class created within class.
Nested Interface		An interface created within class or interface.


******************************************************************************************************************************************************************** 
24. Difference between ==, comapre-to, equals?
	== :: Checks object reference
	.equlas :: Checks object value
	compare-to :: Checks value's ASCHI formate's returns '0'. If both strings ASCII values are same.


******************************************************************************************************************************************************************** 

25. Binary search program?

******************************************************************************************************************************************************************** 

26. Difference between hashmap and hashtable?
`		HashMap								HashTable						Concurrent Hash Map					
	HashMap is non synchronized, Hence its not thread safe.        Hashtable is synchronized, Hence its more safe.        Allows concurrency access of part of map.																    	
	Hash map is faster due to non synchronized.                    It is slower than Hash map.                                   Synchronized, hence thread safe. 
	Allows only one null keys and many null values.                Hash table not allows null in keys and values.                Locks the part of Map only.
	                                                                                                                             Fail safe iterator.
	Fail-fast Iterator: Fails as soon as get null value for key    Fail safe Iterator: Won't fail for concurrency modification   
																														Can execute 16 threads parallel, Map is divided
																														into 16 parts.																			 Not excepts null keys and values




******************************************************************************************************************************************************************** 

30. String buffer and tokenizer?
	String buffer is same as string but its mutable. It is used store sequence of characters
	Tokenizer is used divide the string in specified format.
	
31. Ajax flash and frame
32. Draw your framework?
33. JDBC connection?

******************************************************************************************************************************************************************** 
34. Interface and Abstract class
			** Interface:
	** Fields should be by default public static and final
	** Modifier should be public or abstract for method
	public interface myinterface() {
	void method1();
	}
			** Abstract class
	** Fields  should be public, protected, private, static, final, transient & volatile are permitted
	** For abstract method modifier should public, protected, private, abstract, static, final, synchronized
	   This class can have concrete class, abstract methods, also constructors for only variable initialization but you cant initialize the abstract class
	 public abstact class myabstract() {
	 public abstract();
	 }
	 
	 T0 implement interface we have to use "implementation" in concrete class and to implement abstract class we have to use "extends" keyword.
	 can use optional @override annotation on implemented method.
	 That makes is runtime polymorphism.

******************************************************************************************************************************************************************** 
35. Why main method is public static void:
	It because to call static method no need to create constructor, to maintain uniformity,Its static.
	If suppose its not static, we can have multiple constructor with same name as class and with multiple arugement expecting.
	So JVM which constructor should it call and what arguments it should pass.
	To avoid this confusion, core Java entry point is having constant signature.



What are the differences between Method Overloading and Method Overriding?


******************************************************************************************************************************************************************** 

What are the difference between this() calling and super() calling?

You can use this() to call no argument constructor of same class, while super() to call no argument or default constructor of parent class

Example


class Animal {
  void eat() {
    System.out.println("animal : eat");
  }
}

class Dog extends Animal {
  void eat() {
    System.out.println("dog : eat");
  }
  void anotherEat() {
    super.eat();
  }
}

public class Test {
  public static void main(String[] args) {
    Animal a = new Animal();
    a.eat();
    Dog d = new Dog();
    d.eat();
    d.anotherEat();
  }
}

The output is going to be

animal : eat
dog : eat
animal : eat
The third line is printing "animal:eat" because we are calling super.eat(). If we called this.eat(), it would have printed as "dog:eat".


******************************************************************************************************************************************************************** 

What are the difference between this keyword and super keyword?
What is inheritance and its types?
Single , multiple, multi level, hybrid, heirarchieal.



Why Multiple Inheritance is Not Possible in Java?

What is UpCasting and DownCasting?
What is PolyMorphism and its types? Give an example.
What is Abstraction?
What is Encapsulation and Explain all the Access Privileges in Java?
Write a Java Program to reverse a String?


What is the difference between List,Set and Queue Type of collection?
Write a java Program to handle Exception using Catch Block

******************************************************************************************************************************************************************** 
Explain Grbage Collection in Java?

The garbage collector is a program which runs on the Java Virtual Machine which gets rid of objects which are not being used by a Java application anymore. It is a form of automatic memory management

Advantage of Garbage Collection

It makes java memory efficient because garbage collector removes the unreferenced objects from heap memory.
It is automatically done by the garbage collector(a part of JVM) so we don't need to make extra efforts.

How can an object be unreferenced?
There are many ways:

By nulling the reference
By assigning a reference to another
By annonymous object etc.


1) By nulling a reference:

Employee e=new Employee();  
e=null;  
2) By assigning a reference to another:

Employee e1=new Employee();  
Employee e2=new Employee();  
e1=e2;//now the first object referred by e1 is available for garbage collection  
3) By annonymous object:

new Employee();  
finalize() method

The finalize() method is invoked each time before the object is garbage collected. This method can be used to perform cleanup processing.


What is the difference between final,finally and finalize in java?
What is the difference between Encapsultaion and Abstraction?

******************************************************************************************************************************************************************** 
Find the Count of numbers in the Given String "hey1234876hey"?


public static void main(String[] args) {
		String str="JKUI7798989UUIUI45745";
		int Count=0;
		for(int i=0;i<str.length()-1;i++){
			if(Character.isDigit(str.charAt(i))){
				Count++;
			}
			
		}
		System.out.println(Count);
		}
	}

******************************************************************************************************************************************************************** 


Write a Java Program to Exchange Name is James to James is Name?

				String str="Name is James";
				String[] s=str.split(" ");
				StringBuffer sb=new StringBuffer();
				for(int i=s.length-1; i>=0;i--){
					sb.append(s[i]).append(" ");
		
		
}
				System.out.println(sb);





TestNG.xml file------------ we have grouped based on fucntional , regression and smoke test cases and included within the group to include or exclude for run.
we have listeners in testng to take screen shot whenever test case fails. we can execute in multilple browsers by specifying parallel= test and thread count

Pom.xml---this will have all the required plugin and dependencies required for the project. Once  maven is run first time , all the required libraries will be stored in local M2 Folder.

plugin and dependecies available in Pom.xml are----- TestNg, Selenium, Surefire-report ,maven-clean, maven-test,common-configurations, maven -site-plugin

Log4J properties---we have kept log4j property file in resource folder of our project. We can define type of the log we want, like log.info, log.debug, log.error
 We can specify where we want to store  thaht log file , whether to display in console or to save in file, and which format it should be displayed and all.
Log.info will be added each of the methods to know the flow.
Log.debug is used for debug purpose.
Log.error will be logged in case of failure.
 
 Common Methods--- we have  WebdriverFactpry class which will have common methods which can be used across the project like driver intialisation, driver close methods, Dataprovider methods,ATU report configurations.
 
Config.PropertyFile--- here we keep common properties like URL, browserName, dataDriven yes/no , ATU configuration

TestData.xml file---  test data used in the test suites are kept in this file. Which we will supplied using dataProvider testNG Annotation.

Common pages---We have written separate classes for each of the page. So all the drivers and methods of 


that page will be found in that class.



ReverseString 


public class ReverseString {
	
	public static void main(String a[]){
		String str="JavaPROGRAM";
		String reverseStr="";
		char[] ch=str.toCharArray();
		for(int i=ch.length-1; i>=0; i--){
			reverseStr=reverseStr+ch[i];
		}
		System.out.println(reverseStr);

####################################################################################################################################################################

Prime Number


public static void main(String[] args) {
		System.out.println("Enter Number");
	Scanner scan=new Scanner(System.in);
	int num=scan.nextInt();
	if(num==1)
	{
	System.out.println("number is prime number");
	
	}
	
	for(int i=1;i<num;i++){
		if(num%i==0){
			
			System.out.println("number is not prime number");
			break;
		}
		else{
			System.out.println("Prime Number");
			break;

####################################################################################################################################################################

Fibonacci

public static void main(String[] args) {
		int limit=10;
		long[] array=new long[limit];
		array[0]=0;
		array[1]=1;
		for (int i=2; i<limit; i++){
			array[i]=array[i-1]+array[i-2];

		}
		for (int i=1; i<limit; i++ ){
			System.out.println(array[i]+"");
		}	


####################################################################################################################################################################
CheckIfStringContainsAnotherString 


public class CheckIfStringContainsAnotherString {

	public static void main(String[] args) {
		String str1="JAVAPROGRAM";
		String str2="PROGRAM";
		
		int index=str2.indexOf(str1);
		if(index<0){
			System.out.println("String contains anaothr string");
		}
		
	}

}



####################################################################################################################################################################
DuplicateCharsInString 

public class DuplicateCharsInString {
	
	   public void findDuplicateChars(String str){
	         
	        Map<Character, Integer> dupMap = new HashMap<Character, Integer>();
	        char[] chrs = str.toCharArray();//{j a v a 2 N o v i c e }
	        for(Character ch:chrs){               //1---->Java2Novice
	            if(dupMap.containsKey(ch)){    //map[1]---
	                dupMap.put(ch, dupMap.get(ch)+1); // map[j,1][a,2]
	            } else {
	                dupMap.put(ch, 1);     //[j,1][a,1]
	            }
	        }
	        Set<Character> keys = dupMap.keySet();
	        for(Character ch:keys){    				//1: 
	            if(dupMap.get(ch) > 1){
	                System.out.println(ch+"--->"+dupMap.get(ch));
	            }
	        }
	    }
	     
	    public static void main(String a[]){
	        DuplicateCharsInString dcs = new DuplicateCharsInString();
	        dcs.findDuplicateChars("Java2Novice");
	    }




####################################################################################################################################################################
FindDuplicateStringsInArray 

public class FindDuplicateStringsInArray {

	public static void main(String[] args) {
		String[] str=new String[]{"MKR","DMR","MKR"};
		HashMap<String, Integer> dupmap=new HashMap<String,Integer>();
		for(String st:str){
			if(dupmap.containsKey(st)){
				dupmap.put(st, dupmap.get(st)+1);
			}
			else{
				dupmap.put(st, 1);
			}
		}
		
		Set<String> data=dupmap.keySet();
		for(String st:data){
			if((dupmap.get(st))>1){
				System.out.println(st);
				System.out.println(dupmap.size());
			}
			
		}


####################################################################################################################################################################
FindDuplicatewordInString

	public static void main(String[] args) {
		String str="MY name is dhanya , my name is dhanya , my name sanvi";
		String[] str1=str.split(" ");
		int count=0;
		for(String st:str1){
		System.out.println(st);
		if(st.equals("dhanya")){
			count=count+1;
		}
		}
		System.out.println("dhanya is repeating "+count+ "times");

	}



####################################################################################################################################################################

RemoveDuplicateCharsInString

 public static void findDuplicateChars(String str){
	         
	        Map<Character, Integer> dupMap = new HashMap<Character, Integer>();
	        char[] chrs = str.toCharArray();//{j a v a 2 N o v i c e }
	        for(Character ch:chrs){               //1---->Java2Novice
	            if(dupMap.containsKey(ch)){    //map[1]---
	                dupMap.put(ch, dupMap.get(ch)+1); // map[j,1][a,2]
	            } else {
	                dupMap.put(ch, 1);     //[j,1][a,1]
	            }
	        }
	        Set<Character> keys = dupMap.keySet();
	        for(Character ch:keys){    				//1: 
	            if(dupMap.get(ch) <= 1){
	               
	            	System.out.println(ch);
	            }
	        }
	    }
	     
	    public static void main(String a[]){
	     
	       findDuplicateChars("Java2Novice");
	    }


####################################################################################################################################################################		
ReverseWordUsingLib 


public class ReverseWordUsingLib {

	public static void main(String[] args) {
		String str="JAVA IS A PRGRAMMING LAnguage";
		String[] word=str.split(" ");
		String reverseString="";
		StringBuilder sd= new StringBuilder();
			
			for(int j=word.length-1;j>=0;j--){
				reverseString=reverseString+word[j];
				sd=sd.append(word[j]).append(" ");
					
		}
		
		
		System.out.println(sd);
	}



Explanation about Automation Framework 
1.We have designed hybrid Framework: It consist of data drivena and modular driven framework
2.We are storing our data in xml file.thus acheiving data driven framework
3.We have written common methods in library  classes thus acheiving modular driven framwwork
4.WE are using TestNG framework to run the test cases and maven is used for project management.i.e build life cycle -downloading jars and dependencies automatically.
5.Maven Surefire reports for report generation

*********************************************************************************************************************************************************************

Step by Step procedure to create project 
1.	Create Maven Project in Eclipse:
		with following Details :
		groupId 	: com.myCompany.myProduct
		artifactId 	: MyProduct-Auto_Framework
		name 		: MyProduct Automation Framework
			description : Automation Framework for MyProduct
2.	Add the required dependencies in pom.xml
		1. Adding selenium-Java dependency
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-java</artifactId>
					<version>2.44.0</version>
				</dependency>
			</dependencies>
	
3.	Do mvn eclipse:clean eclipse:eclipse to build the maven project with downloading required jars automatically by Maven.
4.	Create new Package with Name : com.companyName.productName.webDriver under src.main.java folder.
5.	Create new class to include test case
6	Prepare TestNG.xml file which includes listener, include and exclude gruops. Also specifies classes in the  test node
7.	We have used POM (page object model) in our framework, which helps in easy maintanance.(for each web page in the application we created corresponding pages
	class.)
8.	Prepare Data.xml which contains data required for our test cases.Theses data will be used in the test cases with the help of dataProvider class in testNg.
9.	Create new branch in svn repository.

*********************************************************************************************************************************************************************

My Invlovement in the Automation


1.Identifying scenarios to automate
2.Adding test Cases 
3.Adding required dependies in the POM.xml file if needed.
4.Adding data in the data.xml  
5.Updating testNg accordignly
6.Executing project 
7.Uploading in svn 

*********************************************************************************************************************************************************************

Advantages and disadvantages of your framework

1.	Data Driven: since we are reading data from xml file , if we wanht to test to with different kinds of data we can just change in the data.xml file which will 		have all the data used in the test cases
2.	Modular: Achieved Code reusability to good extents by creating page objects through modular framework. ie for each page created one class using POM(Page Object 	Model) 
	This Page class will find the WebElements of that web page and also contains Page methods which perform operations on those WebElements.
	Hence script maintainance is easy.
3.	Supports multi browser capability.

*********************************************************************************************************************************************************************
 Issues faced during framework design
1. Reading xml files, tryied with different logic. Then finally  used xpath's to get data from xml.


*********************************************************************************************************************************************************************

 Roles and Responsibility

We are following Agile model in our project.Each sprint is 1 month duration.
Selenium scripts will be created for the previously delivered functionlity in the current iteration.And Webservice soapui scripts will be delivered for current iteration scope in the same iteration.

1. Understanding the requirements with help of reading the requirement and through KT.
2. Identifying the scenarios for new functionality or if there is any changes to the existing functionlity.
3. Understanding Reviewing the regression test cases and finalizing the test cases. Which all can automate for Web browser automation 
4. Identifying test cases for webservice Automation,depending on type of requirement.
5. Automating the Web browser regression test cases using selenium web driver and core Java, Maven, TestNg.
   Automating the soapui web service test cases using SOAPUI tool.
6. Reviewing the automated test cases
9. Running and fixing the failures of test cases.
10. Raising bugs if any found by automation scripts.
11. sharing results with Team
12. Giving KT to new joiners about Framework flow and automation process following in our  project.

*********************************************************************************************************************************************************************

Example scenarios used in your project.
1.create flight -> search for flight-> select flight from search list-> update flight profile-> Delete Flight profile
2.Create flight-> search flight-> modify flight route 
3.Create passenger->Accept passenger-> board passenger

*********************************************************************************************************************************************************************

2.Issues/Challenges faced in Automation testing.

Selenium
1.Timing issue with locating elements. 
	To overcome this we used explicit wait for the command which takes long time to locate.
2.Removed Absolute xpath to overcome xpath updation when element gets changed using relative xpath.
3.Whenever test case  fails we used take screenshot . We had to write this for each of the test cases.Whenever it fails for undefined/unexpected situation, it was diffucult to debug.To avoid this we used Listeners in testNG xml to take screenshot whenever tes case fails .Which helped in debugging.
4.Some of the commands does not work in IE. Like Click command.
	To overcome this we have written method to click until it is clicked on the webElement
5.There was web page where in we had multiple frames ,  when we were trying to switch from one frame another frame , we were not able to locate the element in the other frame.
By performing SwitchTo.DefaultContent()  and then switching to second frame this issue was resolved

*********************************************************************************************************************************************************************

3.How will you commit your code in SVN.
1.First we create new folder in repository for our project if not created.
2.We create local copy of repository by performing SVN checkout.Provide Svn path of the folder.
3.We install svn subsversion software for eclipse.
4.Once we checkout any project we will able to see in eclipse.
5.Whenever we do any changes , before commiting we check for conflicts in the files if any. By performing sychronoise with SVn repository.
6.if there is no conflicts we proceed to commit file.
7.if Any conflicts found , svn will peform merge process , while merge is happening, it will show conflicts for all the individual files, we need to see the difference between those conflict files and do the merge process





Java Access modifiers
Private----------------The private access modifier is accessible only within class.
public ------------------The public access modifier is accessible everywhere.
protected------------The protected access modifier is accessible within package and outside the package but through inheritance only.
default--------------The default modifier is accessible only within package

***********************************************************************************************************************************************************************
Java Non access modifiers
1.static
2.Final
3.Abstract
4.synchronized and volatile -----used for threads


static
Static keyword can be used for variables, methods, blocks and nested classes. It cannot be used for classes.
The static keyword belongs to the class rather than the instance of the class, means it is not required to instantiate the class to access its fields.
Why it is memory efficient is because the memory allocation happened to the static variable is just one time in whole program. And all the classes accessing the static variable are referring to the same memory location. Memory allocation happened for all the static variables at the start of the program. 

Only static & local variables can be accessed in static methods. But a static variable can be accessed outside the static method. The same way only static methods are accessible within the static method.


Final
If the Final modifier is used in the declaration of the class, it means the class is final and cannot be sub-classed or inherited

Final Static Variable
Final variables are often declare with static keyword in java and treated as constant.


final static fields are global constants.
All instances of the class share the member and its value cannot be changed.
***********************************************************************************************************************************************************************

Constructor 
Constructor in java is a special type of method that is used to initialize the object.
Java constructor is invoked at the time of object creation. It constructs the values i.e. provides data for the object that is why it is known as constructor.

Two types
1.Default 
2.Parameterized constructor 

There are basically two rules defined for the constructor.

Constructor name must be same as its class name
Constructor must have no explicit return type
If you don’t declare the constructor, compiler creates one for you.


***********************************************************************************************************************************************************************



Difference between Array and Arraylist
Array														ArrayList
Array is a fixed length data structure							ArrayList is a variable length Collection class.				You can not change length of Array once created in Java					ArrayList re-size itself when gets full depending upon capacity and load factor
Stores similar data of one type								Can store heterogeneous data types
Stores primitive data types and also objects						Stores only objects	
Cannot be synchronized									Can be obtained a synchronized version
Elements retrieved with for loop							Can be retrieved with for loop and iterators
Elements accessible with index number							Accessing methods like get() etc. are available	
It is not a class									It is a class with many methods
Defined in Java language itself as a fundamental data structure				Belongs to collections framework


***********************************************************************************************************************************************************************


Collections



Collection is a data structure in which Objects are stored.

Objects can be Added, Deleted and can traversed in Collection.

There are 4 type of basic Collection
List : Ordered, Duplicates are allowed, Indexed

Sets : May or may not Ordered. Duplicates are not allowed.

Maps : Duplicate keys are not allowed.

Queue : Ordered by FIFO or priority.

ArrayList : Fast Iteration & Fast Random Access.No duplicates

Vector: Synchronized Method.

LinkedList : Good for implementing Stack and Queue.No duplicated

HashSet : Fast Access, No Duplicates, No Ordering.


LinkedHashSet : No Duplicates, Iterates by insertion order.

TreeSet : No Duplicates, Iterates in sorted order.



Call static method of different class

className.methodName();


classA{
static method1()
}

classB{
static method2(){

classA.mathod1();
}
}

For Non static method create object instance of other class

classA{
 method1()
}

classB{
method2(){
classA obj=new classA();
obj.mathod1();
}
}




Coverting Array into list

String[] name=new String[n];
List list=Array.asList(name)

List to Array
List<String> ls=new ArrayList<String>();
String[] a=ls.toArray(new String[0])

List to Set
List<String> Ar=new ArrayList<String>();
Set<String> S=new HashSet<String>(ls);


Set to List
Set<Integer> st=new HashSet<Integer>();
List<Integer> ls=new ArrayList<Integer>(st);


***********************************************************************************************************************************************************************

Selection sort: repeatedly pick the smallest element to append to the result.
Insertion sort: repeatedly add new element to the sorted result.
Bubble sort: repeatedly compare neighbor pairs and swap if necessary.


Selection sort
Find the smallest element, and put it to the first position.
Find the next smallest element, and put it to the second position.
Repeat until all elements are in the right positions.
1 4 3 2 5 
1 4 3 2 5
1 3 4 2 5 
1 3 2 4 5
1 3 2 4 5
1 2 3 4 5


for(int i=0;i<data.length()-1;i++){   			
	for(int j=i+1; j<data.length(); j++){		
	if(data[j]<data[i]){				
		int smallnum=data[j]			
		data[j]=data[i]			
		data[i]=smallnum;		
}
}
}


Insertion sort
Take the first element as a sorted sub-array.
Insert the second element into the sorted sub-array (shift elements if needed).
Insert the third element into the sorted sub-array.
Repeat until all elements are inserted.


1 3 2 4 5
1 3 2 4 5
1 2 3 4 5
1 2 3 4 5

1 3 2 4 3 1
1 3 2 4 3 1
1 2 3 4 3 1
1 2 3 4 3 1
1 2 3 3 4 1
1 2 3 3 1 4
1 2 3 1 3 4
1 2 1 3 3 4
1 1 2 3 3 4

for(int i=1; i<array.length; i++){
			for(int j=i;j>0;j--){
				if(array[j]<array[j-1]){
				int temp=array[j]; 		
				array[j]=array[j-1];
				array[j-1]=temp; 		
				
				}
			}

Bubble sort
Scan the array, swapping adjacent pair of elements if they are not in relative order. This bubbles up the largest element to the end.
Scan the array again, bubbling up the second largest element.
Repeat until all elements are in order.


public static void bubbleSort (int[] data)
{
    for (int i = data.length - 1; i >= 0; i--)
    {
        // bubble up
        for (int j = 0; j <= i - 1; j++)
        {
            if (data[j] > data[j + 1])
                swap(data, j, j + 1);
        }
    }
}

swap()
{
	tmp=0;
	data[j]>data[j]-1
	tmp=data[j]
	data[j]=data[j-1];
	data[j-1]=tmp

}

***********************************************************************************************************************************************************************
Strings
String is an object that represents array of characters.

Why string is immutable.
String object is immutable means it is unmodifiable or unchangeable.

Once String object is created its data or state cannot be changed but a new string object is created.
Ex:
String s="ABC"
s.concat("DEF")
system.out.println(s)

o/p : ABC


Java String provides lots of concepts that can be performed on string.
concat,compare,equals,split,length,replace,compareTo,intern, subString.


String literal
String s="DHANYA"

String literal is used to make Java more memory efficient (because no new objects are created if it exists already in string constant pool).


How to create an immutable class?
String class is immutable. We can make class as immutable by making it final

public Final class A{
 final String s="ABC"
}







***********************************************************************************************************************************************************************
ThreadSafe
Thread safety is a computer programming concept applicable in the context of multi-threaded programs. A piece of code is thread-safe if it only manipulates shared data structures in a manner that guarantees safe execution by multiple threads at the same time.

***********************************************************************************************************************************************************************

JAVA I/O

We can perform file handling in java by java IO API.
Java uses the concept of stream to make I/O operation fast.
FileInputStream is used to read binary data, while FileReader is used to read character data.


Stream

A stream is a sequence of data.In Java a stream is composed of bytes. 

In java, 3 streams are created for us automatically. 

1) System.out: standard output stream

2) System.in: standard input stream

3) System.err: standard error stream


InputStream

Java application uses an input stream to read data from a source, it may be a file,an array,peripheral device or socket.

class SimpleRead{  
 public static void main(String args[]){  
  try{  
    File src=new File("D://FileIn.txt");
    FileInputStream fin=new FileInputStream(src=new );  
    int i=0;  
    while((i=fin.read())!=-1){  
     System.out.println((char)i);  
    }  
    fin.close();  
  }catch(Exception e){system.out.println(e);}  
 }  
} 


		


OutputStream
Used to write data from an application to a file.
class Test{  
  public static void main(String args[]){  
   try{  
     FileOutputstream fout=new FileOutputStream("abc.txt");  
     String s="Sachin Tendulkar is my favourite player";  
     byte b[]=s.getBytes();//converting string into byte array  
     fout.write(b);  
     fout.close();  
     System.out.println("success...");  
    }catch(Exception e){system.out.println(e);}  
  }  
}  


***********************************************************************************************************************************************************************

Read data from excel using Workbook

 File src= new File("D:\\File")
FileInputStream file=new FileInputStream(src);
Workbook wb=new Workbook(file)
Sheet sheet=wb.getSheet(0);
 rowCount=sheet.getRows();
 colCount=sheet.getColumns();
 for(i=0;i<rowCount;i++){
 for(int j=0; j<columnCount; j++){
 
	Cell cell=sheet.getCell(j,i);


	String data=cell.getContents();
	}
 }



***********************************************************************************************************************************************************************
Threads

SYnchronised and Asynchornised meaning in java

When you execute something synchronously, you wait for it to finish before moving on to another task. 
When you execute something asynchronously, you can move on to another task before it finishes.



Thread Safe
Thread safety is a computer programming concept applicable in context of multi threaded  programs.A piece of code is thread safe if manipulation of data gaurantees safe execution in multileple threads.
Thread safety is the process to make our program safe to use in multithreaded environment,there are different ways through which we can make our program thread safe.

1.Synchronization is the easiest and most widely used tool for thread safety in java.
2.Using thread safe collection classes, check this post for usage of ConcurrentHashMap for thread safety.



How many ways to implement threads in java explain how.
Java defines two ways by which a thread can be created.

By implementing the Runnable interface.----After implementing runnable interface , the class needs to implement the run() method
By extending the Thread class.---The extending class must override run() method which is the entry point of new thread.



class MyThread implements Runnable
{
 public void run()
 {
  System.out.println("concurrent thread started running..");
 }
}

class MyThreadDemo
{
 public static void main( String args[] )
 {
  MyThread mt = new MyThread();
  Thread t = new Thread(mt);
  t.start();
 }
}
Output :
concurrent thread started running..

#################################################################################################################################################################


class MyThread extends Thread
{
 public void run()
 {
  System.out.println("Concurrent thread started running..");
 }
}

classMyThreadDemo
{
 public static void main( String args[] )
 {
  MyThread mt = new  MyThread();
  mt.start();
 }
}
Output :
concurrent thread started running..


#################################################################################################################################################################

What if we call run() method directly without using start() method ?

In above program if we directly call run() method, without using start() method,

public static void main( String args[] )
{
 MyThread mt = new MyThread();
 mt.run();
}
Doing so, the thread won't be allocated a new call stack, and it will start running in the current call stack, that is the call stack of the main thread. Hence Multithreading won't be there.



#################################################################################################################################################################

Can we Start a thread twice ?

No, a thread cannot be started twice. If you try to do so, IllegalThreadStateException will be thrown.

public static void main( String args[] )
{
 MyThread mt = new MyThread();
 mt.start();
 mt.start();     //Exception thrown
}
When a thread is in running state, and you try to start it again, or any method try to invoke that thread again using start() method, exception is thrown.


Test scripts ---- these are the classes having scenarios of test cases











Project

TestNG.xml file------------
WE are using TestNG framework to run the test cases.
We have grouped based on regression and smoke test cases and included within the group to include or exclude for run.
we have listeners in testng to take screen shot whenever test case fails. we can execute in multilple browsers by specifying parallel= test and thread count

By extending extending TestListenerAdapter(TestListenerAdapter is class extends IResultListener Interface) and writting screenshot capture code in OnTestFailure method.


Pom.xml---this will have all the required plugin and dependencies required for the project. Once  maven is run first time , all the required libraries will be stored in local M2 Folder.

plugin and dependecies available in Pom.xml are----- TestNg, Selenium, Surefire-report ,maven-clean, maven-test, common-configurations, maven -site-plugin

Log4J properties---we have kept log4j property file in resource folder of our project. We can define type of the log we want, like log.info, log.debug, log.error
 We can specify where we want to store  thaht log file , whether to display in console or to save in file, and which format it should be displayed and all.
Log.info will be added each of the methods to know the flow.
Log.debug is used for debug purpose.
Log.error will be logged in case of failure.
 
 Common Methods--- we have  WebdriverFactpry class which will have common methods which can be used across the project like driver intialisation, driver close methods, Dataprovider methods
 
Config.PropertyFile--- here we keep common properties like URL, browserName, dataDriven yes/no 
Read these properties wherever it is being used.

TestData.xml file---  test data used in the test suites are kept in this file. Which we will supplied using dataProvider testNG Annotation.
We have kept our test data in the xml file and reading it and passing it to the test casese using dataProvider.
DataProvider- Marks a method as supplying data for a test method. The annotated method must return an Object[][] where each Object[] can be assigned the parameter list of the test method. The @Test method that wants to receive data from this DataProvider needs to use a dataProvider name equals to the name of this annotation.

Common pages---WE are using page object model . We have written separate classes for each of the page. So all the drivers and methods of that page will be found in that respective class.


Test scripts ---- these are the classes having scenarios of test cases





actions.click().build().perform();
'build()' method is used to compile all the list of actions into a single step and ready to be performed.

TestNg

TestNG is a testing framework that is capable of making Selenium tests easier to understand and of generating reports that are easy to understand.
The main advantages of TestNG over JUnit are the following.
Annotations are easier to use and understand.
Test cases can be grouped more easily.
TestNG allows us to create parallel tests.
The Console window in Eclipse generates a text-based result while the TestNG window is more useful because it gives us a graphical output of the test result plus other meaningful details such as:
Runtimes of each method.
The chronological order by which methods were executed.
TestNG is capable of generating HTML-based reports.
Annotations can use parameters just like the usual Java methods.

TESTNG tags

1) thread-count: This is used for parallel execution, based on the number script. It will execute in parallel or sequential order.

2) verbose: It is used to log the execution details in the console. The value should be 1-10. The log details in the console window will get more detailed and clearer as you increase the value of the verbose attribute in the testng.xml configuration file.

3) name: Name of the suite. Here it is "Gmail Suite"

4) Parallel: To run scripts parallel, value can be tests/classes/methods/suites. Default value is none

Right click on the testing.xml and select run as testing, once successful you'll see all the results

When you execute the above code, you will get the following output.



Action 


moveToElement(element) of Actions class is used to mouse hover an element.
Build() method of Actions class builds the sequence of user actions into an Action object.
Perform() of Action class executes all the sequence of user actions at once.




Read & Write Data from Excel File in Selenium Webdriver: POI & JXL


To read XLS files, an HSSF implementation is provided by POI library.

To read XLSX, XSSF implementation of POI library will be the choice.

<dependency>
<groupId>org.apache.poi</groupId>
<artifactId>poi</artifactId>
<version>3.9</version>
</dependency>

Robot
In certain Selenium Automation Tests, there is a need to control keyboard or mouse to interact with OS windows like Download pop-up, Alerts, Print Pop-ups, etc. 
keyPress(): Example: robot.keyPress(KeyEvent.VK_DOWN) : This method with press down arrow key of Keyboard
keyRelease() : Example: robot.keyRelease(KeyEvent.VK_DOWN) : This method with release down arrow key of Keyboard

Disadvantages of Robot Class
Robot framwork has few disadvantages mentioned below:

Keyword/mouse event will only works on current instance of Window. E.g. suppose a code is performing any robot class event, and during the code execution user has moved to some other screen then keyword/mouse event will occur on that screen.
Most of the methods like mouseMove is screen resolution dependent so there might be a chance that code working on one machine might not work on other.


SCroll vertically down

((JavascriptExecutor) driver).executeScript("scroll(0,250);");

Scroll Horizontal 
 js.executeScript("window.scrollBy(250,0)", "");

Scroll vertically up
((JavascriptExecutor) driver).executeScript("scroll(0,-250);");

Handling exception in selenium



try{

    myTestDriver.findElement(By.xpath("//*[@id='register']")).click();

}catch (TimeoutException toe) {

	wait.until( ExpectedConditions.elementToBeClickable(By.xpath("//*[@id='register']")));

	myTestDriver.findElement(By.xpath("//*[@id='register']")).click();

}catch (Exception e) {

	Log.error("Register element is not found.");

	throw(e);

    }





   How do you handle HTTP Proxy Authentication pop ups in browser?
·        Form authentications URL - http://UserName:Password@Example.com
String URL = "http://" + rajkumar + ":" + myPassword + "@" + www.softwaretestingmaterial.com;
driver.get(URL);
Alert alert = driver.switchTo().alert();
alert.accept();
}


What is stale element reference exception

A stale element reference exception is thrown in one of two cases, the first being more common than the second:

The element has been deleted entirely.
The element is no longer attached to the DOM.



2.Try{
}
catch(AirthemeticException ae){
}
catch(Exception e){
}

catch(LogicalException le){
}

Throw compile time error--> Unreachable catch block for LOgicalException


3.REverse STring using strinf Buffer
String s="AFHLD"
StringBuffer sb=new StringBuffer(s).reverse();
syso(sb)

4. prog to find String contains another string
String s="JAVA PROGRAM";
String s1="JAVA"
if(s.contains(s1))
{
}

5.Why main method is static
This is neccesary because main() is called by the JVM before any objects are made. Since it is static it can be directly invoked via the class

6.Why main/static method cannot be overriden
We can not override the static method because static metod is a class method and the scope of this method within the same class itself.

7.Static binding and dynamic binding 
static binding

When type of the object is determined at compiled time(by the compiler), it is known as static binding.

If there is any private, final or static method in a class, there is static binding.

Dynamic binding
When type of the object is determined at run-time, it is known as dynamic binding.
 Animal a=new Dog();  
  a.eat();  

In the above example object type cannot be determined by the compiler, because the instance of Dog is also an instance of Animal.So compiler doesn't know its type, only its base type.



Explanation about Automation Framework 
1.We have designed hybrid Framework: It consist of data drivena and modular driven framework
2.We are storing our data in xml file.thus acheiving data driven framework
3.We have written common methods in library  classes thus acheiving modular driven framwwork
4.WE are using TestNG framework to run the test cases and maven is used for project management.i.e build life cycle -downloading jars and dependencies automatically.
5.Maven Surefire reports for report generation

*********************************************************************************************************************************************************************

Step by Step procedure to create project 
1.	Create Maven Project in Eclipse:
		with following Details :
		groupId 	: com.myCompany.myProduct
		artifactId 	: MyProduct-Auto_Framework
		name 		: MyProduct Automation Framework
			description : Automation Framework for MyProduct
2.	Add the required dependencies in pom.xml
		1. Adding selenium-Java dependency
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-java</artifactId>
					<version>2.44.0</version>
				</dependency>
			</dependencies>
	
3.	Do mvn eclipse:clean eclipse:eclipse to build the maven project with downloading required jars automatically by Maven.
4.	Create new Package with Name : com.companyName.productName.webDriver under src.main.java folder.
5.	Create new class to include test case
6	Prepare TestNG.xml file which includes listener, include and exclude gruops. Also specifies classes in the  test node
7.	We have used POM (page object model) in our framework, which helps in easy maintanance.(for each web page in the application we created corresponding pages
	class.)
8.	Prepare Data.xml which contains data required for our test cases.Theses data will be used in the test cases with the help of dataProvider class in testNg.
9.	Create new branch in svn repository.

*********************************************************************************************************************************************************************

My Invlovement in the Automation


1.Identifying scenarios to automate
2.Adding test Cases 
3.Adding required dependies in the POM.xml file if needed.
4.Adding data in the data.xml  
5.Updating testNg accordignly
6.Executing project 
7.Uploading in svn 

*********************************************************************************************************************************************************************

Advantages and disadvantages of your framework

1.	Data Driven: since we are reading data from xml file , if we wanht to test to with different kinds of data we can just change in the data.xml file which will 		have all the data used in the test cases
2.	Modular: Achieved Code reusability to good extents by creating page objects through modular framework. ie for each page created one class using POM(Page Object 	Model) 
	This Page class will find the WebElements of that web page and also contains Page methods which perform operations on those WebElements.
	Hence script maintainance is easy.
3.	Supports multi browser capability.

*********************************************************************************************************************************************************************
 Issues faced during framework design
1. Reading xml files, tryied with different logic. Then finally  used xpath's to get data from xml.


*********************************************************************************************************************************************************************

 Roles and Responsibility

We are following Agile model in our project.Each sprint is 1 month duration.
Selenium scripts will be created for the previously delivered functionlity in the current iteration.And Webservice soapui scripts will be delivered for current iteration scope in the same iteration.

1. Understanding the requirements with help of reading the requirement and through KT.
2. Identifying the scenarios for new functionality or if there is any changes to the existing functionlity.
3. Understanding Reviewing the regression test cases and finalizing the test cases. Which all can automate for Web browser automation 
4. Identifying test cases for webservice Automation,depending on type of requirement.
5. Automating the Web browser regression test cases using selenium web driver and core Java, Maven, TestNg.
   Automating the soapui web service test cases using SOAPUI tool.
6. Reviewing the automated test cases
9. Running and fixing the failures of test cases.
10. Raising bugs if any found by automation scripts.
11. sharing results with Team
12. Giving KT to new joiners about Framework flow and automation process following in our  project.

*********************************************************************************************************************************************************************

Example scenarios used in your project.
1.create flight -> search for flight-> select flight from search list-> update flight profile-> Delete Flight profile
2.Create flight-> search flight-> modify flight route 
3.Create passenger->Accept passenger-> board passenger

*********************************************************************************************************************************************************************

2.Issues/Challenges faced in Automation testing.

Selenium
1.Timing issue with locating elements. 
	To overcome this we used explicit wait for the command which takes long time to locate.
2.Removed Absolute xpath to overcome xpath updation when element gets changed using relative xpath.
3.Whenever test case  fails we used take screenshot . We had to write this for each of the test cases.Whenever it fails for undefined/unexpected situation, it was diffucult to debug.To avoid this we used Listeners in testNG xml to take screenshot whenever tes case fails .Which helped in debugging.
4.Some of the commands does not work in IE. Like Click command.
	To overcome this we have written method to click until it is clicked on the webElement
5.There was web page where in we had multiple frames ,  when we were trying to switch from one frame another frame , we were not able to locate the element in the other frame.
By performing SwitchTo.DefaultContent()  and then switching to second frame this issue was resolved

*********************************************************************************************************************************************************************

3.How will you commit your code in SVN.
1.First we create new folder in repository for our project if not created.
2.We create local copy of repository by performing SVN checkout.Provide Svn path of the folder.
3.We install svn subsversion software for eclipse.
4.Once we checkout any project we will able to see in eclipse.
5.Whenever we do any changes , before commiting we check for conflicts in the files if any. By performing sychronoise with SVn repository.
6.if there is no conflicts we proceed to commit file.
7.if Any conflicts found , svn will peform merge process , while merge is happening, it will show conflicts for all the individual files, we need to see the difference between those conflict files and do the merge process
